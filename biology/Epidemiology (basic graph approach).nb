(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    553952,      11256]
NotebookOptionsPosition[    524886,      10573]
NotebookOutlinePosition[    544888,      10971]
CellTagsIndexPosition[    544845,      10968]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Epidemiology", "Title",
 CellChangeTimes->{{3.699343961701477*^9, 3.699343997953355*^9}, {
  3.699344028020213*^9, 3.6993440301218596`*^9}, {3.6993440734712067`*^9, 
  3.6993440744893*^9}, {3.699344172877183*^9, 3.6993441736166534`*^9}, {
  3.699348880755352*^9, 3.6993488895030036`*^9}}],

Cell["\<\
A Network Analysis Overview









\
\>", "Subtitle",
 CellChangeTimes->{{3.699344023779375*^9, 3.6993440270345697`*^9}, {
   3.6993440725690856`*^9, 3.699344075708011*^9}, 3.699348887655566*^9, {
   3.699349061036577*^9, 3.699349065050589*^9}, {3.699349117871636*^9, 
   3.699349127555949*^9}, {3.7019554443291636`*^9, 3.701955468583615*^9}, {
   3.701966682321493*^9, 3.701966683362279*^9}}],

Cell["Titonis Tryfon", "Author",
 CellChangeTimes->{{3.6993440402713585`*^9, 3.6993440564778643`*^9}}],

Cell["Postgraduate Student", "Author Info",
 CellChangeTimes->{{3.6993440649827824`*^9, 3.6993440708274245`*^9}, {
  3.699344154202693*^9, 3.699344165945199*^9}}],

Cell["\<\
Aristoteleio University of Thessaloniki
Faculty of Physical Sciences
Department of Physics\
\>", "Institution",
 CellChangeTimes->{{3.6993440877811766`*^9, 3.699344155489932*^9}, {
  3.6993489842599373`*^9, 3.6993490045365486`*^9}}],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
lx7plhtpVZFyP/jnE46/7UzaMWfrfdnS3XA+1ns81Uq8H8AroN5/Hdo3m9zy
O5YvxM84B7FxAAAAcFp0TAzc5ewh+a3bp5z6HAjA3qiP7TJ9qLb9f49z7o2H
PD79udxIq4mRe5KWWXe2CXXSzsh7xFvXq7pTP890ifLohE8OXhBFvBml0X21
Z0f93gGxcQAAAPCURNp0ruulMnc5N3RQLtBGlLvKXS6APbF+FdNPKj2eLTzK
52MoHOUtPdIsN9LqIuT9mqSV2kfWzsh7ZJ087Leo98nudd9oJ3xy8CIk6MuX
6SciNg4AAACeDLsu2nNtZtZcde5yLpTd7LM2ShebMS13mbuMAHuh/c+v+1I6
yl26pumQVoy89Sid2Hvm5mhn5N37zZ1V3em4eLxO+OTgiUnQl8vcZQgoM7Fx
AAAAcHm0/1uoTu8NPmG5P89YboCU6Hx+OKd1lRL54XzSWaDcWZftjMyH1cdM
3iam5TA/4IhO/ZjMuhueBvXxxzH3iNS5yxBY7kLExgEAAMAF0f4xcGbdU+Yu
50y5U55tmF3nYdPBq6Dz+eFqR7lL136dKJ0lfu2sy3ZG5sPqYybvve8+cOXL
ykKsHFwe9fZcJf+4/jq37JHlfg8o8xzExgEAAMDuaP9YsDp3GRfKbXxwoXvH
xtarR5Qj8LvBS6Ln98O1G+nE+JW+J2lVO+jjQf4j62Mm7/YEbWSKmQsbq3/8
cnBp5OePq2e+N+fjx/d7trZ/mLHudLaOersu1Vl3YuMAAAAgOdo/Bu77zOsY
xb1rWOWWH+Ao7Nqm1O2N09qOHb/92KPf1TuOJyHUjuUrXddlG+nElL+ZpFXs
oI92Ruaj6qKbaVO524ez3nSLby5y90cAX+T2vlRtf2vGnlrb+7Pm7yud0Fdl
y9ulGLd0wrMcAAAAcE30ojFwo/KXEWX7yS0/wB7Y9Vdp/Q1mHfblspYZfV/t
OKbsNg55jAer6SnOD/eQttLvk7QzeRx1P1s7yff9BO0jlE7sxcAF0c3HNje2
1PY3vuOO2Y85oy8uZWxcnbs8AAAAcF304jFwIz002GPw6ugW3xY7JvwapZfb
R+LdVz3krjbSqSNkfbiPSOnfTG1n8qhs/e/tj2sT6uoMcH8UXB71Y19l++Ob
/bM2oD+c0hdny5PqTdVL2LcAAABwLvTiMXATXYTqoTurrQmwhl1vmTGgUdyb
enOUNo/UfqNDxiS5++HKjXTqWB3OpJnyLYPWUR9vo/ZiymTiIlvFzR/tJI/2
BO0jmNz9GWAvIvpmnVv2lTKlepPLjIEfucsDAAAA50f7x8CZtC+zR6g4X0GZ
W34AF5Qu1s2Fj1G+2X0kI+rc9fCM6PGuwKGdGZZ8dZ+TNI5ol3vR5a4DgL1Q
nL+qyC3/RtlSxcaZ8Ys9WQAAAJhF+8bAnXJfUPfnLIY4jgHz301geavcZQNY
Qr2//UN5/BtfIzm6DPnTZ0+E7u8XHMbeavKbo+6l27W9Azwbirvns8ktv0P5
UsbGcT4dAAAA/qA+5qvdcx2iE+0Fqve9NTuVtcPWgjNi+/mn8vu+upFMKdY3
IbR2DDC+yDJ33cBquy0yt9dY6o3ylbo/17vGh/3taeZTeG0U/5ZxkbsMjuU0
/a5LMB409F8AAACwtsVesQbGZjmNT8rai21gOabroVb3cXPmz8rcZQQYo5vP
OcX6IRkj+eqd8+rG/VMXWfPBXRsubP192vE29X2Fe1PPlOnd9suYubez+qht
epe57wGeC8XtpzS55fcoZ6o3VTv6KwAAwOuitHd6P9hWOtmen8J9EXVu2QFc
sWuFj4j2fgTDW3tlwjSNT6PVzS9xqvEnY3soHHT3nVvOiPKVup1tHTB+gbP4
6+pRv6y0f780feDT5sVaH3bHtu2Y/lYukbtsC+UtE/XjOndZAAAA4DiszdTs
tAYwa+EqdxlnylxHlKnILT/AFrrF2OT2O7hQWZl9zzSZtd4Q32YodWCc2yg/
b/+Gbu+K1guUO8q86zg3lC13H5iR65eOfYNkjlrxfopY2j3bGIBt46aN7XG+
olM/txW5yzkpb4rYuO8zlQsAAAD2QX1sxF7rAZPu6fbfFXe/UJdbfoAldDuz
1+3Up/eiHpXBrK/aCbWl0o5+Nqu/aiKDy/jodPe+Td+k7bI27XYqY+1YJ+VG
Ou8jHc2O/7n7g6M+jM/QxIt+OdZLLEfl40KbW//w3Oj+DaA92n2Vu4yT8paK
n39/tsZfAAAAuC7a9y44sy94ynNgijt/+5lbfoApti/neuMgBdnfkFTvjwmV
f/XtZ938bz5pNjuVs05Upi3/ZJu7TiPaQa63g1+u38FroftzprXuz46H9rkm
d7kmZUwVG1fnLgsAAACkRXFvy69x+rfYFRf/V+SWH2BAx9wvdQTtCXQZ458v
V9L9pbD9jnqnctaxdSK3s61N7jpNpC8T93eGd4X3YJc2BhBKRFtucss+U5Yy
wbhh/JOn3NMGAAAAP7TfnVGntxfkf/8UaxY4HXoe/9tA9jOMirgzciXNXxH1
VGYu589KGq3D97P7MbrdGdVaGj2eOzacbi7R7Yzdmc6WxlBP2mlj6+B0uofX
QE+2T2r7Vmys+inveAEAAAA3tN/d0GY9snqG6Syoj20IKWObW3YAPY//zYwZ
jUa+lxPotg5dI62k2YTqaMdyljEyyP1+zVlfjqeem9ztwkGXpjztCfpUCPVK
nZgyGZ9jkVvP8DoozmfV5JZ/pVyV4n33l7CzAQAA4Ib6O2/22L9vz2Snq/c1
Vrq/b6QdlX1uvbG5VhHxAZAR9f7jbof+eySmP5p1/eq+vno/T5lBxyFjw+9y
LaRXxoyrO5bTWa6F713uPVqLpfPSs0NbqXUfS5dlrFY/9wxnWHO+hepDaWXv
Nn73Ld5XhQNQ3P0AhiJ3GVbK9pZgbDj9uRMAAADo0X53wdW5y2bLN/jeXPZR
a8eymXVJw7oDcqP9zpHvzRDz5nRfpHofSjv6vjpYz65jg9M4qLgYqdk0E5Wz
dJVj5ttCbvs5bSo9b5Rlac3+dXT7mZFt8MuZPtAd1Od8KeQfI/4jR586QAiR
/aXJLf9G2VKcU+3oewAAAOfFzvfNDrb7ad5Ul2es/+ibL0s9otRJ7yWC58O2
w49Ru5u1qxVxb1kGvHxvtnzGD9AupHVYX1T4+3YP9aa4WLi/fPQXUE5n2Wa+
bRy/rVfy92rPG2XZSqtTZn/cSNZCt7vlcvdTQxvZ7u/SEvFykAiF3x8yUOQu
g0MZY+P+VsdZAAAAyIO1+fc4G2Ps7VP4qRTuY+SODciOlvf8f8fyDGsJXcMP
5xV/pN4XZPrvlg/988D6aAPK3S2kFTo2DZQ7lrN0lWPmW9c9j8VYDd/2vFEW
V59W46Efc3as2LmtDTHcLn1gL6qNcSiUIV6u2luP8Lwozk91CRtPae6Laeln
AAAA50D9XuIetn2du2yjMpYR5SCeH7Lj2FYbpYlX2QPj5w+6x11+Pi/v9APr
w0emgVk/YQLd7rbX4TF2dpPvCsfvFu+Gs+nUPrrYSKvzSKtJ1A7M3ze63UcX
PZ+oX49/BLbB4DbmUacxcI4VgrD9K2Q/Ofv72x5lTPF+mulju8VQAwAAwDba
J3bmNOdQR+UMtVva3LIDGDzb7f97wHrZdSz4jF1Py8/fcEhMnKdMAw9rH/U+
lSg971zOMmSslPvc0m7k75rOpi4CdNvs1A5+dDubGb0e1u29hy62LS3wOcpn
j/TXMGVqUugJXgfd7m/40P19Iu+jv2s82+Bp/MIesq+ObzrJeRUAAIBXQfvd
BdeebV5XXCxcmVt+AINnu/3XynvX++y5UzvulBMKh7L7+NG7g+qjDdDLw9io
BPf+7FzOwlGOavJd7fjdqt/UIx1Dk7APOc0Bge1gt/rT7V65VPdMfI/S9qmL
vaiP6N/w/CjMr2z6+yn8cUrzplp3lvIAAAA8O0oT134Z+1jh/sav3LIDDAS0
33+wUz+fY3yWrJjI7XKGzshZJiz77uuKjfLM6ihROnMs6u6gttdp4mOU+11s
1UbedSo9BOp29cxaovpbux/P+AoqWb+1Z70Viju/2o7rVed4i3n1HDOAK+pt
4aA2uNZnDy6DmV+72D6lk7xPAwAA8KwozT2vc3N4mbtsK2UOsVFMmYrcsgMM
BPTbyq4z2p3Ww6ZffS71fZu/rx8w1f1pu59hC9DrrF/fphPLrmvCjXLNrknl
7j+bbT8B6TSR5VgkcTvw0sFK+p39u+Ed71U92rRKuZ9frXcqawqqvfs3vAYK
36vqcss+KkOqef6wd44AAABeCe3zHoOZ+091DnVS5pC7l06z1wkwEGBnf46+
bRL1d7Nm2bzvLTK/eiY933HrjH64S7zJt1BW77FS7vcBlBt51yFtxrMcW6zF
q6XoV4vyB6TVWp1t9VEzN059cj/22yJRm98Lp/oG2MJxfFniVH6ryLIMmDn+
tDY9AADA1VCCO4jOZgur3wOs7Fqi1S024M/ZuIByfy+tQQBSYtvvu+7vkB6o
pu1Q/mvgdia/ctRf1uIAvnVbz3/Y75xtc8W/2foWWfbd1xEL9bZGsbdMO5bV
1OfgC+3keG++3M6mrqaj5bXlqs9oIa3Q9ljtkOaYZiHt2HcRTF1t+grU++Sq
rX6jE/vhdLuTfxivLtvf4DgU/wZwmbsMk/KYth+7337qMy4AAABXQPu8x5B9
jpbbvp9ZM/wvHmUyabIPCLuh27uGrmdhuqFdyn8NvHqv1c7ldOmfazST9HzK
zv1RJ0H9GndrTVg7tqXxG6NVyFgd0R4XZYxs53/mqoW0mxTpJ6xP3zFoL6qR
TNVKGxvid4vcfQHOS2Q/a3LLP1OeVHdAXzaGGwAAICfq10Cp72k3dnhWX5Vn
mYwNXlu5p7Z6Z/+8yl0meF50O/8Vs0dtvv3ffb/LXOaYceZnkp7rnf+GMned
w0NbWGv77YGytIHtcXE9GtnOV/tqhLy7jAPqY22SyBTJLyuPT9xtI+6bgBnU
+61C5+cfndR+VBo/fnPW8gEAAJwRpYlNn1KfoFy+dgVvnkIW1PvBU9jBY/6N
z+8zl7+LLGs5Ssv1fHmTu95hti0YX1y7wGFjtMJ9SOVKmqn6djGTdpJ9tB30
WCrf26mfozYV/D3AGPX7saFt8rRxY0pzJ40Zh/BhAwAAbBBpT8yR/RyqLVeI
3d/klhteC+2/RnX1xWU7l2r1EGv/l6O0XNbcVe66PyNWd6YuTExhO0Pjojs7
r8x9v8Tp/B1y98P96HbX6NobDWXCfv1wT16idNuNtmHKUATqc7ij1ddfOLRF
37J0o7x9YmSnBJUXnhvbH7qA9pR1rnUoV4o32n7mxigAAADoUfr1v7FJsu+D
Kfy+6jq37PAa6NgzW/+Pw2/azPooIstYT9Jb+p1Zjxe56/8sWL1/aP4s/upa
cm2sl/+df1nb30IZlvrnt273zjnPd0rrh6tn0k+R7kM9WLm7BT18KeCuhkm7
m0u71f0bSr7xbH/e5lX82NLkbotwXtTbmzF+3nFfqnWOfexQH+OU08b+AQAA
5ED9vnSs3TBnR5ziXogI+6HOLTs8N+rXtKnvYdzif9L2nXPZ45EU915DPUlr
0PFw9/r73uOTbmeLx/Xb6vY2cxWZ7tq49m1/8+FaTqXxCxWJ6rLN3f4W9GNI
sreUSN8DzUz6KdL9GKX3Jr+xyrTxMlA3w/vMa77dxlGOn3E6ShPzfwrbBs6L
7t80N221Vbgtar6rTlCeNsVYRf8BAAD4M7em9gM0ucs1Kl+MzZ09lg+eE+W9
s/zHylCsyFCeQEcx91+/T9J6C7H9dYvT+ZrI8vvs4cp3laPsP67jpcLfr249
2mRs25o9Y6Un8MPt1L7LRDzMVQnq0lCM+k9oX2y1Q8yp3OLaTN6/Jt/5vM+w
RJW7/cB1sW3Xd0w0fE3bcwbZU/Sf0+zTAwAA5ED++9sunCruXOFxfl1u2eF5
Ub57ygfG8SHGHzCcCTOc5n0ShfnRjW6LiDx97q16yEcB6ytHmULH6tax3GWi
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
kJV0ukAdl4F1Ouc/7Gx5Gt3ud8P+htMTMUYtUa3k9cv2j0aPNsFHaJ9R2Hnx
h/unNsY9r7R3rK/mqPFuRYbQ2MOsckNeFGYTZfPFKs2ZC3xxAAAnJMH4nmWc
Vx+D0mFHwdFYuyj67jUHflK0Wx38XrDc/XCtQ1pza61kY43843DqhXRCx9Hg
+lXvZ/uS51uHAGdjh7GzWMjH5f2F4U0ZrzHGY9wbM3fHXMgdVnNUO9ZXcfR4
tyDHu9L7cOfIEl8J+yD/GPbkb0MHyNxEtmF8cQAAJyLBuJ5lfFfvB+k8ZWSd
CtEo3b09W7TTPmVtx1r3cRxDTGe11gfl529qInVUOuazGa+hW+yXWT+XO9Sn
j14WZVb4/ezJywRwNRKPnbNrZoW9lVh5lOEtxTirNGdS2wPqLGTMK3eQo9D+
c/Lu+oRjCWi/2X1YAWPYw9h4hnIAALw6CcbzbOO6/M8jdLn1Dc+BjomDqyd5
1nLzOw9xHMWM3IVj3s3kO2OrtnNpruiodC3rCeqzDaifKkK/U8rcOgDITeLx
8+HMuiLsncDyFHbsXMp3Md5Y4T798TxQHFRvvrKWO8pSJ25HY+rcfQR2aTOV
3OIpTT/+B+ptm/Ko/rUgc/BYZsEXBwCQkQTjeLbxXGFnNprcOofrk7DfLNFp
Jm5TYb4i0zc/x+mtyD/cnTh3Rmrs83Y+q+oq4wnqNES37UJane+4pIz2PMBZ
sONMqpim6dujIefy/5CgbKVu+zfd3Dg7+X3MnZ6G0kGeDz3GVa9+t5Kez9nQ
oDw8ZCkCx3SvNgXPhXp/3HSPdbjzobC/mWtXyd+OdpS3iWzP+OIAADKQYPzO
Oo7PzJUu8A4DRKH4GIXg/pRgXdGpX+f+h/Z/N9a+LLf6sB59S079fua7OdpE
dfNuy1QGfBsa31gE1tOXNs4QA7wq6v0oHwr3yXUz6cX4tLLsFSjMTjPlnLV1
7JjjotM2cBx9c0zfO+1A/X1E1nvyeQqui7Zj/E1bS/J2lIdMIWPE3dgm7BAA
gMNQuvelcvnggt4jy613uDaKX8tt8b9pErs2yb9NlE/pWe4qtP87yhzlH9f8
O2KdT7oKP8tUzaTVzcjS2rr10j3Aq6Pet/M506/WaCZpxI6d9SS9Srf7OMut
cTCi7IWnnGZ+moulLgJ1UAXI7PJ+UXlg+wkt+3SuK3L3BciLQ7se+NprTFiQ
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
+dZA+N2M8/fQKTLeuu8ZLz4j9ZfALCfGPIdH7vp5Lyi73APZOX5/JQaCnVvk
ZdT30Cv5aA3iPOvoHKVU5ky0i+ug/iX5NrfpsL7uIM7NhN+Owr6gmYPbuyNT
U75avQ2DgzBWBGV5/57I84p96lDvuyC1/zvHoRMfq5YzYI4lt9vXKfRN9T3j
4O0lda3tVqFdNHNwT6bW9boieNxvTY0Tw87vpfNVvyPrKG8e8Mj3jYT6hAwf
cq3bw6hPyZiDr/fk1eLdQTm9nVfbY0b+9y3F5mOj+hU7p9pB26WI7fp7sf2w
8v0cmT5hE81ziT3zZ1Pn1vqs2fV30N7NONwrU7Fv767pEfWX4lqPeUaf4LGG
5BeiD4r3LEE/Dye9e3W3Dsp9+VDvuwD9/XC3t9lit2lT79i3qu3b2Sn/jKLr
uQ1sLx1HR2U9uPMm19p2Fdqm1Dfj7W1XqD0od/SFnd/ljAu7eX88xuaIg+Cb
FpaHM/g+I/UXv5ET+8N6r1uRPRUHdfCFYqomw6Jrbvx3ifZs+a7k37v2OvLR
lswKtjz6hiuxltczU4++kPBZSj8/7cuF+/XZmbmS+U5ynY33Avvz1+caBysn
B+U83CJTzd+F+rH78p3QjkWt61PRbuPib9XPzYGXb55b20q57pPQN1XbSRBr
3v3Mdg6hdf2uDM73xr18W2a2pStUh9CbTka/ZPpwHGPG5X/ngnHtGwf18LXK
l9pqpWtuDiX5pmYH9Q1Q3BvXQX1a8ZKLg+xNiTvwqzNfOP32BW2djvT9vMjS
XNdIvvGFQj7Weswz+gXp+Wv8744oywn883Q/DmTznLN7ZDT6VNTJt267TvzD
YtG5/WKfiN+5fociOTrw13SG1nZSrLskXqjn1LmxsLXdCrfJgPJ34N7ufHXl
NvpxEOv33m5j+XYNPz/Q3XzHOPIXsQ83Yvf+UvR/V/2w0Tc3F5fKAeTEAbW2
gtL3Qaatrk6044jHXtMe2rUlYwc6PJkIfjsR5CT7SIF2T+5ZRaGY2nrMM/qF
4ecU/3UC//QJmZK97IcykTeuRVu91Zwd8nfxjnCt61TJbjGWp3IP6ucYVuVz
/HxsbS+lOkv3r5c4T+IZ5c+tbVe4XYJyDNm1IezNBo22in474eSOCsi/CQ7f
QsEjV+vwfZ1iBPGcaqaP+dZ2N+qC6+XhwkE9cvy+NLt3riL/PvTppF17skec
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
z1Lebk6D1Gdg6G33DQhkvd00V5CMidXtDrh9x8HIlr2CbgYFOTjr/KNUb/D4
Tu21Y8SOvKfKwU06Gkr0i536sLY4nS6d6wHy8WjXjw/6w++934Pgm3+i+l1z
cP083EjVKzzmPtx3pTOddT8p6C8Rq4cCdVNsEKffsM/mWOv6roBsfij+9nFM
bTislEUtIx3Ixj2TFK316pwf7BgqKD8I4uflxkJ4zOfE36/MuUSi1j3ZD3PH
XWl27/BR8PFg5A9aeh0UZEHFghU+KX4Fr/NYNX0qj7OnvD/9yC4F6ksYnVrr
xXEy0jiCKH+tPwyAODsmiKmiMU+oT9bZy4k8V/gBZXJ5n1O5Obc5Csv6mmwY
4fs7tU9+gu7cJ1j3k4L+gs41F6ibYoM0/YbrO+rv3sL+OuxgbdtWEPa9Ym/U
OSQbJq1+xygjHcjGzc1Ha7065wfK5+EGYQwtPpZX1neYtSXnBvIcj3UXBPBz
+Nkm3YpcmR5eZ2hU7SYkFfbxYOQPmmd7sy+Jck0g669fk667WXk/J5/6JfBX
KadeD4WD/ZwF6ksYvVrrxXEyyPi+xWGuC15jYqCOEyDL4ZjFLaa8/aKMQTGG
fyzKzuNK1XsxhJD85kwA/m4N9bwy0QZJ4Nv/fq8s/7hT32ht21bwvnd+QPZN
+d+sHM46UTqQLTDlikq6CQs6a3s59YDyebi9cYaFtc4UdL7WrjynzLkKyr6i
DmRzUau8CIdU2Mc7Az/oC+hp95yUor6OGBvwmSxDsO7vCn4S9tpZoL6E0K36
3gDH4XDUPw4YCsuG6Utb9IY6FesRZPvqDm0E53rX9dL37gNuHhqN/XRk+vaT
pCx7j6izs7ZtCwj73inPQVwNkK3LDLNyQom+C7yxemDqooPH9/5YI9Y4bQO4
uQzbJ4TxcxVrnSno/Cj/lf+9R5Z1tnVhcRxm6Du16FMYuZhkfxDN+6FMjrAm
0bqfK/pJqOm7SL9M1npxnCegewd0HlM7JblGQQwz+35kyLqqL2H7M5t7qEDn
jSMfj3T85WjM+NLqUxI/Zfr2k6QsO2avbLC2rTXSfm4tv/PPjlFgx3FR1gfQ
xvyE9LNc7i/Yfr9cFBOmOgakzH7/8k1A9o0kKH+UxNArxlVCP8y66xHl3SEX
FwX6Tq35FNS5C1t0rgnOmYvLtu6s+3gBf6nmu5j+Ap6HcxoCmGvtG2Wt/e3z
Dok4xW5UjkwQx0zuhmPK/blTjvRuNckbGi0RrftIYX/Zuzuh2BvlnP4usGFS
lBv7znOwtq01IHvrZrSW31GxY6YzkPkn7Of8EqGsuFPOGqe+T8fBA7h5TBSU
z36baG8sPTNAz2+McJCPg+vn4kJJH2+032mQ62Hvq5j86gznl5PER1oHdtYz
jHwzWuvEOR/wWA/O8/G4QWCWGzgxY0M+7O+fd/2vxlemTE9M5+BEWfudcqJA
BxEhJ+Yt9BY4bMuZgUdeaVy0Of/vPP/vGvHTP8I+mRTlxvrtZt+6OpNPSb8f
1WzmiO0pvaegZ9ab5xvP9aBPTjmTLw7wmBvPORynp5jD+Ybyu19uAuC+uXpB
+dIc+BvWOlPQee7TnJzZuGcLOE/OhIMkl3To45Xt31XWXfY10ZtRQN8HXots
22Ddpyv4zKYPF6gLE0OitU6c8wCENy4FdQzwPk/eo9+QkxqDwoY8URDXVsus
aC8VWQU6yGPN4ZgPdfaVaxCt+2AFn/mAVz69ypkqTr8S2DApyj2432zqppv0
ozHfVLOZo2JbiS0HRPn527qH19lSdlmNtNnPpt6AA19V8QWlePoPa50p6R07
Dq+OLbA/95WU3SKiMzqt+ZShfURvOMBjjItgn48bAfmmCbzG5VPfkw0768IF
6sLYIFrrxDkPQLifokDdHeFvOfsvwkZZ7DWxBuxFkXczXwYV3qErPNZogW6P
U8xPM5L9k0lR7uR+86aTHCuk59iX+J6ihgDZPVXjVMYPeL0r2gPtPrdv/Rkq
3MEq9F8/m3oDMOOBQh2DZmy11pmS3jX2CWbbreYioI18iRZJqOtmfArauFs6
+4Zkf+EztzVU9LERCO8Jw2OMnsvXWfd5od9sfj8UqAvlQ9Y6cc4Dpa8r1ddN
feaT4q/Auy/gLSYB/v4n9fGuJXsBLw+H2gs3q0PzDMBv+L5nUqtclP+dGdj+
xibZs5SfPu3Qgg0JvnUHv/mp3NfQ8cmpbmupnbOvBEX/2LzbVLHNEvk8j3wD
EP0iKdShejbVWmeKutfKYQywkmeAx7eINO61QBToGHUnQUWbhwb0+Wfyvbjm
N8z+nX1wVJQtTWX2GBnhe25wKUfxsdbSbwrUhbFRsNaJcw6oMY9ZRzfFoZyr
38rLYPbPkmOYRpsXiO4QULIZVtZ0UA4nHzkQZR0Eun7yey2mTfJ/cPxiQbS2
aWF/OfL33thP/9mhBRsCfl5uHgsK+03xe62t2+h8s7d0v+N/iFhDJRRus1Q+
s3fTnTogxoOoVI9arLXWmaLuo3I8yTHu7fzdFLeO7Nwy7DOFgIvZVd+mA92c
VTG/YbbtuWd8/v73Eb+mv8+/o+yDyHO4Zw5wr329dV9X0OumHxeoC+MzwVon
zjkA4lkwZJkdPMbPHD+wc4vDOM+JnxvlREE8Nr0TZi/WrJAK6JSUe6D6F1fn
IHs/PFr3w8I+c3Se+9BPmPWS7dCCDQE/Hw/Wti3oM9x7sklYt9P5ZnNJ//vX
B5V9ZCzcZul+7WBtN6csiPFA6/t88Lj6phPJ2ZXduAIrZ/jgvPm4TqDjHlF+
MrR/lk/7Tgyp3zR5lxq83hCn6Gu0llup7WGrjQXqwujV1+gcFECceyPL3OwP
B/QH5VLLWz03Avy5t/k5FKJuE6I8qg5CQXnXGAh1cd/8i9Z2LewzSaNfM+ql
2uFQzho2BPw9lKS+cBbgMfet8qacdVudb3aPQnt+TuVI+vEaxeazhL5+qxjg
fPORI39W8QFQPJtqrTNl/Uv76BG/YfF+FZS5D7UUo1C/EVFHasAPnjm5o/5Y
i6/JR7JM1XMu8NpXl+03AH//YLC2raJOVtuoXEeH0au1LpzzAMSxBllmYMaD
3XuPGeWllTIk62vmZ+iJun1rv4JOA1Fe6Xomaf8h8OZs0dquhX1GXc+K9X7z
V4GfqNkQ8PlcUl84C1ApB5exbqvzze5BaM80lROV/aTY+W9CX79VDHC++cjR
uDQo1qWyB9laZ8r6r7I3e2Kc7B0nfkFb5yPV/Q9w+zCTtR8sZA7Q3tnV35O/
9JN8KnNqeN272gP9nNkR5t+0yn6x2s4CvncYR6x14ZwHIH77IsvE+Okam/vN
gJfPecvrCWTLmN8HRZQ/Icqj6iAwZObqe2TUxZmzkdt0Jqx8m2HvJPCVqCw7
RpbL+Q2U33vwDev2Ot9sHzTsqVHOgqLfCsK4E6zt5pQF4R9qbx2B0tlUa50V
sEFfc1wyhhqPRHM3ZH3J2gd25P+PobOaLN+Xy3OsuML8rrixgly5jkudndzS
v3Id4cz9xWkPavxClinZAxU2ysT4/pJ+pZwokK1rwF6UswsJUZ6KfQ7q4O6v
OZR/oz5qLoHcprMA+Dfg1b91OfYW9M2oLHt/N78hxhYtLjUPPDOgcxdTmMrS
3L9S9I5wkOUN3X8vDnJcikp1Sfdn/sVaZ4XsMBiMTzVJwHtzWrTvCnA5n2Rt
f0Q7ArKvOgp+0yKw/q2p6ruAu/M8WuvCOQ/Uvksod2DGhrBRXmCU1a2Uw80J
jda2muSPBJmTtv237HNQR2LqPDJ1RPUVcpvOAkEX6ncfMm3OheUrB/KPe/EA
GsjLK7a15tmfW/S9M6Jgz4+pnEHTTyq0OzHkqvqGoGMD0jdGxfrEcdhaZwVt
ofHuV2tk/wqzNvaE34r9Diujte0J7QnQ1nnVFumt7VTI9qm07wJun8cl9euU
gdp/CeV2mvEB6LmVt7wCyNb7B2tbTW2IBJmTtv3hHHk4qp3JbToLlH5ToG5u
X6vmKwfyr+0Py77c5FtZwrZa3UkdrNvufPMD6d2Az7caOtDN6xZdu6fEyRmX
iwPOqm8kpD/0SvUN0v5irbPC9vipEKdaIPtVENp/905thC47rKzWdme0rQfP
x60xWNumoM1Tad/dqGNJsNaFcx6ofZhYNmftKm6UFYjlvJ2zA9kdE03MucE+
D7dqn4M6uHdOBYGeKN+A7HpaB2j5cFU9CPoaB7JfItvwzE+lq/oJ6N/nVaWP
O0V8IQntOc7Kiop+Unz8Bdr3r++FuwmEPqHiE6BwF5q1zirY5IdyfKlJjjOr
6wpA35cuPZMakPUka5sL2hiJOr0yg7U9Cts6rbRZlKteqQPjS5c78+uUg9qP
GeUPxDriRjmBWM7b3aUg2/PRxD0wYJ+HI8c0osxzgkBPa/FYvZ4zAPg5iKoe
BH2NQyykuzwvbiIHX9A/xsq2mnNp3Z4NYtzcopvK+qHoW7FC2ztkrFS7l99p
H6DNG4NCfeJ7Gq11VtE2uc8OhuMXlhwHf8HBXRZAy8GK876E+pK1rYXt/AGV
36BqENV8VIvA+vwlKvvRoa6t9eCcC2pfZtZB2ReXNsoIRFl/Ln4vmds0s/YN
ink44N0JvFumgsxzgkBPa/FYvZ4zQNCFqh4E/Y1Dryx7OKCztqtSO7l9M5Pz
EaPQbpEhc6dt75U6cmz8D15vmd0i70KMm1v8NyuvV+rfRd9Mncl79FbJ76v0
fQftE5QYqeKnID93Gaz1VtlGeUwYoK19TyPs7H1baQN1L5z4jXuCbydrGyv5
SR7XUwO+UZPfWB88Oxu2jYrlB4zOrfXgnAdg5GEEdeX57ciN91j/35ITZG8B
RmtbzdqxFmdIuuTqdGJkyByZeg+V9MSu5wwQ9K+qB0F/q+orzH4Rre2q0E5q
/B/hsabyY1EOt3+T9Qjf8zri75CVsrf2vgzW9qrkExr3BP5alDkqlKmx9yOs
0K383bBWP/jezVsC9PtV3nyKUackpqqOh2cCHrmsvThems+pfrIPAH2/lnht
aCPWHcb0szPZqKWcbSl+afjJWYD1775esfyA0Hmy1oNzHpA+9Q1hfZg7HdLG
b49+N+dtzg6yvevB2lazdqzFmS2itv05PgD8HChb7xQ9Wdu0gs90Fn4u6G+m
fRRwc/jdvnUGgBYTN9sLlfJwG/WI13nhEQcxc/Le2mYVfEJiy0xa9kVQ2hPH
tOvngW2Hld91s7b8uoPdnW2APk8aFOrknFUoMh6eFZjulJj6cNKIQTPGKbbk
ePkh1TfQ58hiH5vqxeolWtuzkH8Myn7RAl9woz38CH8OiuVj1mQulbN2ygKV
83Czerud+Jc2fhMJcn4ufis5k/r27qqxzdbiDGvs5Nh/ghTfBfWEGnqytmkl
v9nqb0XGq6lObp+r6itMuXf7VusAPjc7wkGuC2S5G9ScBba/U5JQD5Q9CF9H
ujg7QltmzPeMAT6vmmnmzgmnTYB3z2GnUK9kv06w1luLTLHhY4pzCcGv6W/7
6bfq8R8eOVeqrVXkIPi16t7zlpjsepX3d7Ov3i7/duDPQbH8iLBDb60H5zyA
IA83jR35952g/g4e49x8DEobf4vx/ydx8dteENsGazst2pK4etCwPyeuCerp
a+jJ2qaV/AZjA5JdEXVy+1xxn9yRGRsrzPMNwnYOiDai8k4gy90kRPlH9+aQ
bT+ViY4RM26Xt4HHOB0WPO/OW+YxB2NZsf33VvHfkQE2e+IkZyuDtc4clI05
Od6kWL/700sXHwfzjNb4mmLE210hdwS299uo+S7g5oyXXqt1dAFZHm7pj1/w
WkN67tcOSDl+wGuNqt/4m0iQs1/8VjKfaep7GxkHnkRt+3PimqCeXfkP6kSP
p9Y2reg7a3t/nv12AOX7xwV9rrhP7sg81KzPyA86zdgHsjzcyPTbOaS70eEx
3kjWv6O1Da2B15i9jLOH9iwoE/cs3+2/YZxjEHFoOa6K/Aro99JdYny6C4Jx
SOWbBPDzgExnra+KNhkE/U6b+fw8ToS72INou9UzE8p1jEc2s9aDcy5ANw+3
F0dy7JDOSSJBzjD73WXOpE7tOYwDM6K2/Zf6LeVnGPkP6jytjQv7zwcUOl8h
sIEGJJ/ckTnVrM/IBwZE+9C5LRCeZUSUf5hTJ7Zfeoe3+Bv7rMB2/m2OyXqw
wK7BWq9O+wB971IU1ie5Iy5Y68s5tC0nBzcqyhC0xuirAY+cTq29ccNki2Dd
7jMDG/NQxfI7hC2TtR6cczHNKwKF2W8TMdbkMYf97TKNW7mffSLGr5+z30nW
FAdrG63ogSL/7roZVHo/AdrOwyVrm14VQb8r7pM7Mqea9RnYpEO2ryOU2Qtt
tzkuEGIUyh4gv/9MHJvOBrzOpQ6A+zYxuacY+O+yNrXn3WkXoM1lNPbEmY6H
TjEf4uZ41OwK+HH7dncxTPrJ38c13t31e/117JXWYrBi+Zj+MljrwbkPGz6v
7qPwyr+l2dgVpn/r18azxe8l54+am59rjtnA/ybdLXfDhpx6IlNHlPqStU0N
fKib+s4w9asie3sE/a64T+7InGrWZ2D7AdG2gVhmKGU7pLyoWKEg55w87nTW
9izoJ893Bjnjp8l3m8CWcVZGB9/vv4vT/x9m3HIvpPPPRxLBt0T32xPrOv34
dHWAdrZ5SVKWJSLrJd37cDWmmD8K7HbEaN3GKwDrue2kWP5AmUs4TmkE84MO
WX63U0cglMGNjU2eVyS2YVdPhHFYPMdj1hOZOgqEOpK1TSv6zlafKjLPEvS9
Kj65IfNWzClSn4EPjIi2kc4VEvsbSZeA3zcQEXJqv4k2WNuzoJ9I9wF0BjKL
7Qi0MTH70wCPPJ3n5m4CPMZRbFwahXVR/HHOZd+3PCMgv5NUPaYSfCta668F
Jn2VOqsarNt3ZmB778WgWEdyOzotgfRJVr+A47xzQMooWXs6lNNI75Q29Adl
hVpjBrOeXfmV2pWsbVrJb/I4tTeHiMa+KoXskxsyY/MPKvVV9oEO0a6RUS43
juzqEmj7Wnf9F2RjwR6XzL+A/Pyuah4AXu+zP3nLFQtkTbMyuHc1HPqgcx2A
dt9JENQT3BfPDejcNTYUkAsb4z2n+9JZB2XOqqrb907A9pnRqFgHxo6XnA86
bQL8PNyuryLnNx1SxlEgY4tnUqlvTsSD8jqObpiyc2zAuu8b6UPqcbpVAHe/
tPrd84K+xyEoyRxr1lfZDzD9gnxXCcjzcKuxlljusCNfV9DvorVdC/lKL9RL
YtbbTXUfnYl9i1fAn5OkWRmSd53+TDKbvFPh1OXAP+eI9pt7XDovoHMfaZF3
gQiyBWs9tgY8cqujgm1dzzr2GErqFHBrwre8R9GxA2R5uK3vLtT+B6R8krem
Wj2TGojtiIgyqXvlB6bs1WwAtLnPoY7ODuDzkqq6EPQ/MooyY/tYsLYro20j
ol3kHAIjLqH8jtiP0458Q0Hfu+TbqaCTuzzUy1RPjk+fQN8zkhZlJaacy3Iw
/eRy8cGhAbS41wnq4ZxnjNb6uTOwf68Olb6QjNFjmUh/Pwg6xPBVytZXB7bn
DiprYoD7hhqs9eC0BzzmtuM0HnxOMSMolS0ZY+KOvIe/R8o3COQbrG230aag
oedFmdT3ZFn+w7AB+w0h8DzcUh/Yebxq/lnQ/8goyz2W6geGPoBZl2DZnxGX
UH2Q2I/TRhl5rlzqTpcnlzy3g+wHe+ytt/1SKD8zfxud4i9zfi/kGxTkym27
XH7WefNl7Hl3yXyGc6Y+Wuvmrgji0Bq9tZzW+mwd0M25/pnGn866XWcBdua2
inVgchOXnAc6MmB/npumOBw4fV4Yd9726QPhPAhSPsm3V3NnUqc2BWI7IqLM
jqAryVxyzxeXiN4iJPrmpWMnpV9p+76g/5FR1hkmNx2sbUtsE+ZbLjHLpsYl
VJwCnTwcpQwulzyPgPSZPYaNcpOi7odZuey73RbydUqyscdL5xwA7s6HDHvf
LPDOiCdr3dwNeOQDNN8C6gvLi/GrS45thfSpfVY1537yXDSA33Wwp/et+fqo
WAfmG9lt5HwD6N/f2c8GQK6jgWwunVbKw4wJf0HIhi5rTQ/WtttpVyC2BWvL
o3tkxfuliTZBya3km8HaroV9htoXRLpf1M3tg2SUdYbZQ3Uqv0G0J8PKGzDi
EqpeoOWB0kYZYyUf7KxtXMBnpHZdHUtBNw+X+TErm7X+tiLjoCGbtQ2dpvpJ
X7j8w3joFPOBD27sWaHKHZNIv/K1BFtf0PClq+812NqrlpTKR8Vfaz047cEc
u9H+BOtz6fzfIrxy+Jl++m9PPtdiOxD2LTBlwzJY226nXT2xLZFQdrewU5zq
U5sPAO67Wqx/oH17X/rsEKVfafu/oA8WiVnKegvWtiW0BXtXJqtNIM/XpI1y
k8RvQfb2JZVLznUV9LL2rqn227X9rOyBU8aKjFrnmU8TJxxRP8H49CgoXyWm
Oup2D6C7By7HrypzUsCN25cc1yro9nl3nGU+7usO9tvRsUoOGXDfUMlaD057
IH0HNSfdKH8+78hjRyeUF/0W9EE5nTB2NXkmlWnTaC3zShsCrM9bEujdXYge
p6z1UUHf1G/epFh3tTlHQV/d4jT5W0Lc6JjlU++YRPkc0PJwceX3A/K348yu
EXh76C55fgfk35iiNTeq7YGfew0b/V9NNue6AP58Kmt+yfC7ZK2TKwOP7wz0
NwuC6nf0I+NbsNb1mQGbfNzXVOdp5qgC/e75sEoOEnBzIN836rwhGSMIdeSx
qFOSN2nIB7LzJE3nZeACebhZW37C69tXxYcYvjRY66GCntH9aiIp1l1r3vHH
Ws8tg/UBQfnUuITyOaLvxsVvKfuZ1nJFA6MdnbWtC/gORw9zxpUyJW+Z7/oP
0e5zwkb7pXv33u7Cda4J4PIaiVl2IvrdJdcFrJniizQmvvkEGORMkP56+VxO
Rb/J65Wjsu986/NTHbexGezPPYOS3TC6b3b/jmMHCNaxV8rq4JVj7wrJix6z
DsqRrDsM1nY7aNtezCkSh84I4HPQl79XEzwPp6nLACfbDwf4eQTb7oy4hLIf
0Xfj4re9NE4C/XvrcmdAiHpEx1nQ3R+QFmVv5c6eb8b/tybTTv8ZtWRzrg3g
5h6hULmHMdUR2TYqxy3Tc4NwnIfzXG4Zvfegd0fqbyj4Xd46B3oUz9EBOf+x
1oPTHiA7m/m2Jwzev7MG7X5PkG/YKQPVZ3ZoOi+zYodTt6egnjDn5KK1nJV0
sTdOrZEU69aYZ6BQ1tlzzTvrbms9I1jbFtkW7Dk9tt0ZPoayH7HcyPztqNi2
y+19Ap29a1r7DVG+C4/5z+/JdnksEI2DIJtXsPuVcz4AF28HRrmR6nvWurgK
8MhXjYrx6u9YAca5EzjOw/lZu7L6z2PrL8DvmfkN39eSTP3HGthfY1aZiwFu
/SNZ68JpD+G88XNR1t45jwGU9oUQ5NucUyP7zBajtd0QOoqE9jR9xrawnvb2
MCQ4SQ7FwGfUxq+pbo35KgplnWHyuKfwIYL9k6COrb5G4U2fwMzDAW0danc/
ArGs0drehXxIugfkTS+gs8/uSfF9GwIfZ/cr55wgfaUjlkm+99BaD2dniv2U
MeiIomeKGO0LB/L6Wbu6thgmf3vm2uL032+5nwKhs72Y2CuU3yH79eXOQThy
QJaP6hdlHY3/XxrxGinbZo4A8OevtojWdiPo6ucUo7fWUarf+eq0CRjeKSjs
jySUdYZZnwzWtkW2BTsWsO2uZMM3fQI/D0fx+cM5LtDeoTjFeWWifQcF+/5c
lNm12v83dNAzZWP3K+ecIOMPaa8RMPalWuvhrEyxSSPmPcnzid66XSvtDAdy
d9YyOs4WB31U40wqdt7neVLnDZDtT+gWZWHHo0Eo81H5X3vjAsjX1zfLbh34
/uZBsJbHaQfEXGuJ2hqosD+SUJS5Q9YZrG2LbA/2zEOs5F9ofQI/DzcifzMi
20j5Br7cHgLQ2bv25l9E+xbt//BYxwtTWyM88tdZvn/zDqRfjaB0HtY5J4Ab
Q7Jfkb4VGf0iWOviTIDeGwxfU/zoqTau3N6wF8es5XOcPXbG40GpfMzcebTW
g9MmmvNZ5NzzCfs+gYNyc3/oDn6fBO32+0idy2I1d1eYz7LjlkBm7BqYmp4a
sX1klj8o2fAtf0WM6XH6TSD8ZiC0cyypx5YBnb1rb2MsCO9dg0e+7AOQ76bA
a70qwvdcG6qvw2K9a4Hn3Jx/AO4brieWSe0jwVoPZwJ4Y9k4i0Xo919aAPbH
ysFaPsfZAvbXRjXO52HXXgdrXTjtQfCf1bntoqy9OK3aB7bkAcSaEsi/E3pr
uzlOKYDwdrJyvZI+SUJRZuw5zmBtV0RbKPGbHLdh/+5QKnGl/ET9PdC+pXpC
W7fe4Hwbs6ztXsiXRgUb/1iUib1L4vdk1yjpd0R/OlVfd9oCcOs5pPVfht/2
1no4C/C6fydtEGfkvw3LeHY2YH9+EKzlc5wtduZjKvei75TvMdY55CC2or5l
ZmVFRhnk/fZTXc8x8BOIZzqYcm5+HzjOlSCMKUm5XkmfJKEoc0LWGaztimgL
5V4zcnsU4u7m2EO0xXPsoN4Rio77gN+7dcm91aCz77FfKXdtjSCBMOe20QaK
P5H6BjzWAvtJ7mH6v/l/d9a2c+oDBe43YPhttNaD0y6w/a04WsvmOHtszBsy
g0LZ2PXl276F6OyzE1sxdIuyuO89hMptHgVtVnsf0nFahPBNEJXr5fZJMooy
pxZjHLMtlPhNag/o7oVb9T2CLf7Aa+809u+pe1HQOT5ruxfyJYpu0WPtVO4A
BfJuQn+as7pXFF7vJe2Vm/tIXgfxtb6bAbj4OxDKo/pvtNaB0y6wfXaKfb+Q
45QG9r9nNM6kRmR8Hax14bQJ0PZA7PoU8PNbsWJ7JedwM721zRynNMi+rHrH
vLBfklCUOSHrDNY2RbSFkicjtQdkb3KjxgyCLZ6gz18D41ujti+2BOjcEWe6
fszwp03fZJSX+4vn4m4E4HPXHbI8qv9Gax04bSPxR8exYC+uKpWPnTdf7k0u
RwfC2J+/WSLsfH8J5tvDSlm/pvpU7zEF+XkZnxs7lwcRF9S/kYX9koSizAlZ
Z7C26UE7qGc00e0B/lrPHmt7pbC24EC2H6Hs09zVTWz/aKF3Rfmx5/OXpI3y
qP55yTPLzqa/dUi/iMjyqP6WrHXgtM2KzwzWMjnOHrC9Biw+2waveyKP8DOp
ziawfi71N7zuXQvIcrBzCNT4D+9z+AF09pBKzkb5mVTnFsAjL7Psg//GlBwb
CtTJ7ZccVHIfgP9WD9Y2PWjH2jggbg+UycFtjRmplL8wdYqVp2nfEPjUoKB7
szNPwD9b++abAv9Uj7NOuwAudz0iy6L6W7Juv9M2C3/J88DOWibH2QO2v/l7
hbKxMdbPbjubwON7O4DwPR+Q3TM3rJS39be5Tw2c+C+YV6v1W8c5C7M+nXPy
ceo/oWB90m92CirtIMS9YnpTagc1X7bbHnisy2ifRZ2TVupMtepC6hQrzyXP
K4DOHXEjo975nOYJOe9O6Nsof2H2B//WvRGg+O4e0N/FSdbtd9pm4S/RWh7H
2QP276ESnW0D/F64P5z5h3NNpvlpV6hs7pw187bmi/zdALTzUZLvQta7ro5z
RuCRRwk1xw9B3+QQFOXG7LFVq6+Q7gcN/U1+E5E6kZBW6k616kLqFCtPtLZ/
IZ/qlPTfHdST5zU9HL+BkBkBuZ4G/DnN6nlS4L8XPFjb0qkDwecSoiyqv/nZ
KWcXj0nOmYDtdQ2NM6kjMq6O1npw2mE2Lg+gf8c6d86aCSvlHc2nSXNroN9/
5HNh57bsjF9fU99U32ct7J/imCOQe6hZXyF7U+Ltt/bAI9+S99NR3j2Q8pbr
YLQBSyysU1b5ZwB07ojbPZsJvPxWjmO7cyAQzGk2yuuZ5Y3WdnTqAfg1jN01
Mk6/sG670zaTnyRrORwHw878Q3TfA3Esj9Z6cNphxSfz/87f251C2ew569p8
AnjfVONWWwRz4CeXPDvkOGsg+1+nXKekf1IJinJj3mBWq6+QvZdjwxG/Gb9R
paL/sOZsyD6Uidb2L+hX3LcO5uyuXQN/n9mubUGwdrdRXhDI2XT8cPQA/LmN
4aAcTr/wMx/OJuDfQc5JgP15eScseyTEVFFdznWA4zxUHvt7QfnsOeZGedz5
e7dRnuRM6mhtP8epCbJfaO+p5fZPDkFZ9lSzPiN7N0XFNrBsB/j9gdHa/gX9
inKHyh6b+QGQr7Ft7ivSLlNQnt/zfBOI/rzXL2KtWOc4jtMSsJ1DEL1DTozP
g7UenHYA2v6y/Lcfe2P8SvmBOb9cXevmlrdRVieY//oc2LkVhL6n2i+EfdT0
ewOO98Sp1lfA5jV1r25DkN87sEkFnUZr+5/AtzZz/iDbZ5YZdsoepb65KC8x
y0vWdnTqALT5atwpJzL8bLM8x3GcswDb66BRUGaeZ1LuPg7WenDaAGRr0nkf
2eFd7YK5cL9TJrWsrfuRe0H7M521DR2nFoB/OzMp1yvpo1SCtZ5bQRC7rQk1
2lDBn6O1DxT2r6Rgh82zqRq2LyD7at4QBOd0re3o1APwe2nHnTKiZj9zHMc5
A7C/ltEJyqWM38laD04bwCN/Owrnqf1BHXkvyMAse29fPXXOmjbKkZxJFe1h
dZyzQejLSbleSYyiEpRl7+DxzT4n67GHxt8sh2vk4fpS9TB1StmfJ7ozuHUA
n9c/Ym+uIC272yg3McuLG+VJ1kSD1BbOOQDa3LffKIPju6N12x3HcSTszDmS
oMzg47XDgTier/G1Nf+d/HIQlJ0OZKfuAY0b5Uja31vb0HFqQpi/J+V6Jf2U
SlCW/SgOjtBoPg5k99xb0tdoA1OnwcoXWwNw75iQ7L1SRxKWvWoDgV/FjfI6
gYyrZTrXA2jrClvnQLh9wt9qcBzntMD2fuKeWR51P1Oy1oHTBsI535PVO6BA
lt9L2P4AtPXjtXdXJevPmzlIR+yXKPs7JvbB5r6Tcr3SWEUhKMqN3fvUW9t2
Q/5YWfdaxFkbJHued2HqtLfwxVYB2nraFntnU6U+3AnLHeExr/k1/Wbv7YdR
6u/OtQH63D2slJGYfvZWluM4zhnYiZ3s73mg7zcK1npw2gDke+FW56fAz20l
jn8C7ptm3PhtFLR9MLZfN7U9zviE97Nvz38LE03mDqf2PONZspbH2bQTuj8b
1TsHe4/OErW3XpHxKdPkey+gc38Xxk79FJ80xqVMnLVBI8+zBTmeEtsYrH2g
go+p5El3ypfcv7F59wSs9+002Tf78traXwePOVKcCIt/557T9bu7bgTRn4eV
3yemn0XrtjuO43DYmXsNzPKo+Y5krQOnHYD/jbo3tuc5JuebJwnbsjYfPpw7
COYiGbVvdWQbA7xybRrflV/wPVeX40nVs3Hw+D7q4X09QeQPTlGbmczXmT4e
ub9TlBubY0jWtt2QXzpO7JHLDov6qPcN7NoQ9M49bhEK65Rc/tkAvTvi9t5N
jRI/2igz+2oA3FtVPazPN76twwv8tcn44ZQB6HswusXvR/czx3HuxE7cI3/7
TmM1da7aWevAaQPQOZO6ttZLnRuoje2wnYvbu8OO+703VrRTFMyZuOT6ErzO
0eQcXeDEqpX2hMlWe/kJsT84xXwS60PRqN45gfk7NdkJdSZr2yrqHUPu/1tx
WWN/1DCVpbW/Ts1XKOVb27+Sj2nlSoeDehKxPJV3mOB4XjQs/n5ktN3fjLoR
QH97Zulj7H5m3XbHcRwqsL13jTx2wmMNjrpG3eSZF8cGkL+BlzbK5ea1Vstj
tGttbjJs/K3kbrii/Wnq44PQRiXJ8SfB+9nXLRKx/GjdR5xN38TasDeqd05g
/k7F/4j1f1nbdkV+yrueFHbfAAWdO+nSVNZYqA1PhoI+cZvcCujsgRwP6qCs
X+e/6xTaNSDr26wLHnOVw9y0tQ2degAvd93Nfi/pZ8G6/Y7jOBR2xuKeWA4n
B+f3yTtvEOaHa7yd/wBZXisptqvHzG9B9q1X7PzmJH/J+4zOQLTuH86qbwaC
DYNy3Rw/4uaRVPyPqK8/1vaVyo/kcA1Dqd4E9D0jHEaiTiOlDdY+UNHXtN7S
2B2bATdPyXNs8ZyZ6McDsry4hbUNnboAfZ44zPxI0sd211Ecx3FaYydeksZ6
4OVOeuv2O23C9KdxoyzJPDoiZP1vkjfB7C7knb+Ne/MF4N8NV2yPAtMeV+TQ
H5z6AG3+3inXTfYj7u+0/I+orz/W9pXKj2Aoae8Fec41VopX6HUZoK2jqvjh
GQC9O+IOcwSwnwsdQGndGoR3eDnOHsCbc3cgj+v+JojjOKcBttffBmI5nHlK
sm6/0zZAz0f1SuWgvjem/rO37jfCIydHzWlz95wVWQuEOns3zsKmPzh2AH7+
rn7GkuNH3N9p+R9BX//kbQnQOR/6hLR+AfXvxJSAGhOAvj/zNvtOqH1F6mew
8jYQ6K8dsPYrOQ4G0Mtdc/AzVo7jnIKV8f5JIJTRM2Nl1fcPnfMBtHsm0k45
kjE9bpS51XfWyHNe1BumIJvzF5l/wLm+O0uz6g+OLYR+kwrUTfYjQb9S8T+C
vv7J2xKgl4cjn/MD2bpObbC5H+rdDcHaByr7m5Y9UL42+WXeU9QXaAv37YnO
2g7OORD4mAaoubbjOI4lsL3+ORLK6JlxMlq33zkHgPve2ry3GOTvr0amTCyf
Z5adGQrpn9vHr0qw7hPOqp8Gq37C8aPpd4nx26gkM2X/02ht3xX5o0JfZt13
D+XfOdWmR7SJdI7M2v4G/sbpqyxbVGhLYMqusgcSHnOy5/0ca/h+pgtgGO8G
67Y7xXzqY4pfHiOc0wPb39e98PdHjN6HHApwvG8k7vyWO+dcLVvg95syrsj8
E153zmHLL7IGCPS3V65OZ90fnHYAZp5/+m1i/DYpyo7t22p1KsrO0d0SVl4B
bM9ccRgRbTLxwbMAem8Umd9fBfw5kcjuU78ZEfUEax05Kn6WWo13zvlYiVt5
/tJby+U4XDZiJOr9UpDtkfHzqA6JA3/bPVcE8m+m/xblYeaRa0Rm2zs43qsw
FtJ7ZzSPahbrvuC0BTC/aaffDozfJkXZe2Sdg7WeV2RPwr7M1iPX5kpE4N2B
3iv4wZPDd2WvDDzWyNh7IgvJFGZ0pfxXIN+g4avOeQDdOzyp+HfmxYDtMX90
eztnA7a/rwfEbynj6ZLb3O3r6ALv+a/n/Sm78VdhLvBjVpYkpxeF7d+ru8h3
EfiZ1CXJuh84bQGyPFy09EF4nE3F7PFpbtwG2T5d1nnUhd5MYpDA53Kbf660
I5c1Esvqre3fAvDYt87xQ9HedXjEjXRQd9z5fSfwQXK/Afo3w6bsznkA+p2T
mjQ3ZjkiXzq6bzBZy+g4FGB7/r+Z0xDMOZ4M1u122mPFF/P3wlt+DR7fC//t
+ehG+ZK7fMZZOdhv1mJzy0kHazJ0hWwzMNuaVrjC+dZb7wM5A7CdU1B/J3Wq
j/WtMf02cvqWgfzB2q4rckv6sfgbDXTOKLJtz6w//6aHVx6HK0dnbf+WAHoe
c2DW80G0++ZZAYHtA1FmTnw0P7vryAHb8xTJuv2Oqi8Nbm/nSmzMG34v/ibH
0H7yf+mck/wmmXN9YH+N4+83g0IdSWMsB/m+uqiks5wP/FyTsYB9MP3+mTf9
e38qQvaj8bRl/B2uhoHj/Zvq9uPGBaS8uzGpkt6K5C8VZOb2YRX9gc3dR8Os
fqs76lDvr94JoL8NOTLq4K4nDhvljczyAlFuzvqbSh917AGb9Yon/s15AZDx
1XP3zmmA7fWpfvbvnPtHNudtHg+dNZBztF5Yh2QekGbljMJ+0M/Kep4H4lK8
P8H+2aus0wGYeQ14jKuW87NNe8/IMTDCI0dRReeO2GePxq2hQJ2R42vTbwPj
t0XyIPAY99f6pLrOFGTlngtF3X9b0u5C4kKG0VoGh+0P6H39IN9X9Lb/E/hz
fHT/AXp+8h/W9nR0ALu3GjK+bnoBkD4UreV0HCywvR+lRLwcKeO2cx8Av54v
+naa5oLcOecwlaFxz0WYyRSFZRW/kxTecwQjCHJvK+VLz/lySFMb4kQAz7Fd
Bow/FaiTs08lTb9d9jEUBfX3Y2rPxyRbk3cfc/UGiudrwebuo+WbQdFABjUd
Xomp74wEPUZC2dK9j29zKGaZY6V+mmky9jg0wPaOYb9H5OQQYsilc66THqKP
v+cH6t4v/HYvsOM8gUJz1p36BmRdeY9enqN2jN9uMitLnH+qZJ9/cR8K5amg
3NmqrN8Ej5xCD36f0S1A+oaqLwBv/SpNv+1a6P9TP0kHNJOrBt73veq93Vzb
CelWZKi9ltGMH7QG0HLy6H2toHOXw69FmZw+FIn6iFryOucFbPbtZkbrtjti
30lIWwdrWQvrYRlLs14+fDw+H1DvThHPwTmbAH2NLCnVuzYfyP/teb9Zt/E7
6bfOOCtrGU+pqOiiFQjj7KZu4fGd8tzD4+PSTUH6S69cJ8d/P4kyf6OA3jBt
CNb2nclL3YtW5O4YqJsDW72nD+reE+d38Oj6JWqsYsaYJeNKuZTfk++XAdlc
x+8hvAhguyfOv0NPCtDWCi4979/Rhco96k5VW44V4p7n4JxdgD6vVLkrHGZ3
rBF/I+0Tv6ayNM5iXmqdWKDfcPWx16GB9JtBuU5qLMtEoszfKKA3TBtU95MJ
5Y0EfY2l4gTT9lxSA3L01rZvGaDvkUT1KUX7hkW5I/J3rDueif10jc7apo4O
wHuvQ4NLzZfvBCU+WctaQRfBx+bzA4I7Uwn4mwzOLsA/G22S21WYS/6TXams
y92DQBhvn4zWMjvtgfSdZFDnkjj7PdX3/xTQW6LIbA0xjoaCcgwM2/+e9J3b
kPeyYfdQbX5PQp13b0Zru58BYn9GfT8S/R3dh+H43tyvqW7WnB7k+6B6a3s6
OoDOerbHrZtAjB3NrBEW1Aem//TWcjqHdhwKx7tP7njt3Afg328djOTN3zj5
3hfud06aytF6l+ByfYwRm5K1zGcGHvs2AjR8Fz+zXdV9h9mH+9nvE+P3nXIb
MDKo6k0oLzZeFN0LAfT8yOq5TsDtFdn91oDyubjLf+tU9k10Xwa9HMbyjrh+
5W+yD31O/yaaayjI7eegLwTw3jTS4DJznLsAtPWMzlreCvrA7qMK1rI6mzbs
Cse5aN1G5xwAPx8cjOXOebQI9G+d5164XqGfXXL/NdC/Z5O1zGdiiv/Z/9Ke
b8HJv7UBN3dT9R1pLDuwSZVYiJRBVW8V5B0qyBEINsu+uZrXANz36aHN4TFX
L3X+q7O2+xkA+ljWI8vVsGFalNnN+wso77Un9o81VO4jcdqhYHzaw8+mngig
fSsN1vJW1AtGHyNccK/GFWDMDbBkm/tag4MG+HeddNayT/J3hLlEP/vd6POJ
TZ1Sxt3MqdfJ4fG9HDZQiafwyBv3DL877b2vyNiSFOsLzH4cZmUMkt9X1Nsf
a/vO5D3y6aGSHNg16t07cwG3RxwVF6Z+z/GpKn3m6iBtSe7L2D56wNu4CQr7
3g7klsrs3xcXYopPtXNxo3W7HZKPjNrx8woQdHLq9fQrAnrn4ZYMJcdv55pw
fdFa7pV2xB15f8/nj6D3XlSwbnchXQaiHqK1zIg2/Zx8JMfJRPT7QVBvB7Jz
1HMfPlV8B9y3qloum+G3b7HsII5UiQNIvf1pxR9aig0InaHerTrqrwy5etB7
l6u3tvlZYMSEgCxX+i5u9q/OQB/ue87SJ2rcZ7nE87knAGjrGMla3sq6werl
kuemzgzovxmd4+fl7op36sD0uSbjCjzm3OMkY/6/w1rfAKXvIev2FtRjR9RF
tJZ5py053iYFew8MX9So91u/g0ZyL0gdRESbgmJ9QdqPkTIXa8MkA9ZvVOtl
yrq2B22c2lBdPtiP7d/WYw7K2TubmoT6GoD+3fs1/a63tvnZIOg4YeMryO6W
weaCcx0BFN8ih+O3II4YrO3p6AP1c3GXPEtyNYjxoreWt7JuKP5+mnn7HQDd
PcCD29eRwPS7ZC33TnvyftNu59+DUt879VlMZb+I1vKuyN+D3v6TJ6j95cB/
gxjDaXJxcJzTUs3nI+pbY1yUwdnnEpTbkSzqZcoapn6W81bmexwmeQZpjIL9
M64q657wOg/fT767JIBiDuaugMK7G4Jyl6BycFP5W7EoTQzT3wSCzD1D5s14
6VyHKR5hxx4p7keNA7S1hlvdHQn0Ob7vlWoEol/vkcffzro9zvlh+l+0llvQ
Xq15xqXP/AMth9WMP8BjLkmRnUpAyBAL1p85RQ4YoQfVvA1T72lRRmCUoer/
cKI8XKvAY54cJD4G63sBch7F82InAvbv58v2/D/wOH8VJ37BK9c1Z1iUS31v
MsvREeSmxqLfk0xhp0zsHYp7uP9fmMnvatwZZ75u4+z6QSTYMlrLW1k31HtH
ff9nIzDG7eV8gTSOO84R07yMen9VsJab2VbqvPa2cwig5SujtbyTzP8R/Zgb
hze/Q0DnOwdD83lg2J7H/S4RQ3bq2yMtyuDECFX/J/Q9dR063+zwfJM7x5XO
Wh6HbccA3/cZ/l945Fj////y/4h9vZuVexTrv6a+/LE3ZhzILRkjnnm5n4ty
pWNPb21TpzxTXymZj/PcRMMAfj37dmtTQM/lJGuZnX9zOs434sgdxx0HC+D3
EZnfDQeze1OIv5PejfKvT1rroIKOE0EfsQF5pfdmi8dUqP/2WNO54BWbpJJj
GdFnV20JvDyqqv8T2hGsbew4Z0MYcz8WZT3j/TPnlonL2DzFvYEasxXHio9Z
mZw4OcfzJzcCXm9Nac9tRuu2OZs2p8yDvib/uM16FaMvJGuZnb926ynxCRq5
b8W5D7CfR3jOM3tD+T5W5MtyRTj4tge9M+GZwdpWFXRNyVmazsuh/DnQNd72
o4FsvzMH85z4gV26yTahUn2JocO4Ug61DFX/J7Sjil4d50oQx7bdmDvFuN15
OrzfgZ/nMKj7ghTHijgrU7pmlaxt6NgAr/P+EXTycv6N2yDCGDFOMTaX0Vm3
ZaeNHXzfK53gfe71G153cea/+Q94+5STdXudvzYfkfYK1rI692U2zgZrWRZy
Hc2dd++vh/07Yqhc/s5NoOW2krG/1nzna3UOyRybNWiqnxr7LOe7IK6UQy1D
1f8BmYez1rfjnBGQv1XQEevbikuH+XtmTNuNcyC/O2G0tqHTBvDIZeT+xM1t
+97KBhHYc40cw3JOzjznCq+14VGxfdXniA7L9tg7/QZrWR2nNQCfQ1vdHwS6
e+Eylz8jDrQ8XM6DdSeQU5u/uV+wzQVGa19ZsYnJvERLf4wyVNsCnodznGKA
/D1rdO4AjucueQzpBL9nxTkQfoda29BpD1B4r9xpA2l82LP3FNNyTqTKdxQ8
vv+Ggm3CMFjb9O6AnzNxHBZA32dU+rzgKd6qVNA79T2g6u8GgG3+69/4Cjpr
h1wfbW49GSl3Mqp3SVwpJxHLUG0LPNaO44L838LE5dcBrg58f59zjWrfKXcE
ZPmtUbmOPIat7hUB+jiMinNTPEkCOmsbOu0BvLshLn++5EyA/r6F3bkTFDq/
Cq/8W6227NH8u2pXBvB7wJO1rI7TGoxx/XPxe+1cTW+tk0p6D0S9VL+rDPTe
Zsh7EuKCmvm9fmpPz/htsvaVFbtUlxv4Z63CSlmpdd93zgM8xqDctz+Bcb8z
VLxj8S6APL+1mzsA+vffF2zMLUBnLIrWOneuD/Du57jF2vZZUIiNXNI0TorW
n6YyklEbtjA/k3tnCONxsJbVcSTA41s4Tj6f4+Cv6X8HTmwF/vmRblZGVI6n
t9mjwNBN1b1ZwrF2nHyj2yhb834MtM6AnltM1n7C9BtVuYF/P1/Q8CtrnTvt
MfmkZhwJ1m26EiDLb6Udm0vudHsbQ0FnT0e01rdzD5j+2lnL7fyzX1Qcs7g8
18ZR+St4fCtGYUwvxWht0zsD+P2dyVpWx+ECj7nniPDz/2Hv3XEu6XV/vd8Q
egg1hJ6AAQ2hh1DxiTp1YmgIPQAHNQAHHTrUEBo4icOCIwMHBtqA8XfY3uqq
1aveeusiUmSxLgwe7P1937skiqQoiaVLRxlvIbC2LpSrlEd9t2Pq6JD916i7
46crKD8eMD7nOcOnvC5oa/dk7Scz2Uv7rKjcYN69vlJWJ1HOAX3vVLZ3/tot
f4vK3596pXjh39XlbEXu5zOahTIl7P7hzSnUv6uQidb6dp4BeOcaT3e/xlPB
OfJwn+Y6eO/pCBNZz5x/e9Fa2/TJEPzZ7eRcEtDXv5FQNnc8CEzZvJ9+1H9i
6innkRpl2bh754tsiGPeP13sCxjmFn1hGac6E0nQWxKuN3JsIFWWgh5N6nXY
9sp+nw6IGZvvgjskm9Xmt7qFMjshO+d1ZR5Hw1hurW9Fa307zwH0fcC/rWV2
2LazIuHc+be/WNvzyaD8XiqPP84lAS9XEQnlc8eDMP4+CcfUR61/KvWXY1/U
0hlTtpZQfu2benv0W7rBsEYsmmNY+8lM7lDY/iRcb2TYYFEGZlmNcHtM6nXI
dspxouYcIgfPxcnZr6+0RTMrrzT+lRLHcmvvbIrWunaeA3h74lpruZ2/tksH
j2d3xvd52vpy6+Ojc1fAf/8gEuvI80/qOZ/8u0Y4nj7qTOqo/05Abyr5OIYc
LaOOJOxDpPEZhWOItZ/MZA6F7U/C9XJstSgDeO9/BCP/Fq3XIdnIIgf34nHj
kZINY6Ud4kKZvaCdvwuV+0lOx9EE9PljspbZ+Wu3H0Zj2pVJGPaNRAxr1mBt
R6d4zFy8H8hxzg74Zz5Z6wcMa56S8eHX+PedcJxtrXVuYOMorEPS3asbcoWD
fE66/VOCVD+z9hOmbZJwvYlhgyjkX8X2JLTH49LJgV0Ozm0vZ8Om0gaf5vDM
+LFGMym35n3waK1r51kw+1ZjLbfzz3ZXOZ96BDnOp5EO77vq3F9PCsr3kLfW
sjoOB/DXIKmy3r3zejk+cvfqbfG4fDl081DZf75zxjHQ1znkOsZ61N5vZ8ix
6s/WfsK0TRKut2fYIQr5VyYIt6c0vvq5BwMg/52Hi7/bUG/L2nxqu1BmErBt
Pyuz5q6EaK1n53mAnsuJ1jI7H+y3Ofe8MTl+dxi+gzfWdnBYvlsyBvfWcjoO
B9R9700C9TejDEvk/1bz3XiJR54BUtDjqn7/wzeCXPEIf6v0c1F/wpB/XprT
nup+UYLO2HZZqZdjhyBod9F3glG+jhfVo1Nkm1YoDvR4f2PPcPJBp3qn5YoI
2LNfKFPiftG0ImvEsEbsqb6CYQxprXXuPAPQx9LeWmbnkw2lxruz0sNzbreC
EHdaa1mdezDGj7QQW1ql+mJFzEsH6KMXjtMqejw7hFgmRV4j7O47BO3+Crbt
UP+e3hrsnA2GPHM36e/q/YkoX+n6U0xu8M+Whco2TInCekyF9Z7K/ndHICb0
GL5vLMY5vO9E7ax872lAZv98WCiXYsOqcWJsQ8A7T/cT2+8J5n9f/O3LcbgQ
xrLNcdkxteHWN/ke729JP8b4s0YnEGtreb1FnWNlY61bR8VfS8be3lpO5/qg
7J7o35T5XGG91HF1SlLWSasQtx93JnXUpVYeas9fN9cHRP+rsp1SG4O1bZX9
pkQHYjEJ/HxxI2j3KKzDYh+3tvdTQH2+hnSGGOV3ovo9w/W27Spj+qc9zqP9
em55tTbFMH7vzQ879x1HE8b4nKxldhbt2GzNmYhlfQX9/b2q+Iwhl+j3ONwc
lH+X9+9QTjWg5SM6wXprYucnOcZ4nPD5W0oL4l2YCnH9kWdSJ/o8Yowk+SvK
z2+lM7bf2qYn8BnRvAGYuXdhu0dhHXaEuhtrmz8B1L0j11bUm472v6cBmW9O
jVC5nVB7SnPG6ndMjvIEvPfrvfAc4AMojGFTgrXMzmG+kWNDzpFJv3v02vPm
MeZBoGzunKzldK4PeGdDO4F6m8rYGBfK7At/m7biKnTu1W+tbW3sZ5Z7yBf3
TBF+X72+UGhTb23TA3xmbz7VCtcXObaobMMc0Xw9aLnFYG3zu4O6M/ptZd0N
9uNw/u+NtZ6uDKPPF403xL5c5StjfZQc3AuRvQGjr+Z52Ovb6l69omc1nHPC
iJ+P/v79VDDsIW4rYnGC594eC8rzE8FaVufaoO58TNV8izGebs67wMud5bZ3
42+/TMoqmfeR6rG2tTUKOqUQV2Ri+Rqz/dJtStY2PcBn1u4Syf22Vaivk7YD
w+9F7QraPppgbfO7A/66QGSv0UafmtJZ6+nKoP5Oi9V9vtj/VpB/W31mCvy5
YV9RZ80ZM3a9zrUA/e3Uxlpmx9RfmoK4+W/sk4ifzrVB2VrAc/xONYVzcpV5
T2Xdf+axkjE2z0ljOaGynMXYbm1rawTsU0Nckan090Gg/dJtStY2PcBnpjmk
HmPOXLG+JG0H0PfYib9bicL1tLW97w74+RlRn0BZLG6s9XVVIPNew+q3H6yv
EURycGMd1LjFHi/HfiGxX55Ur3NNULavd0pnLbNjz+g3S3n+32O8a6xldOxB
+V64xlpW5/oUzse3aCvqrpnnfVqXCMzj4lhOJzAfnPP47ytjbAuFRMi+hxRX
ZDpkfo/6M9hLJGubHuQ3h/Ud8PZhLPrWpMxILVOhXcmiXkfEv8THD5TlidTv
+rozqJ9H9DvlL/XpICh/zdla0j4BTox0n302DJ9prGV2zsE4/sVxPM7/62dP
nX+g7P7eaC2ncw9W5nIUUkXdNXOvdlZWKzCH+z7GZ4n5YPF82tn1k2xbkRzr
Qtmlvw+VbQgKfsXue1cAQ+4yfydIIx2U34eX9K0a2yu0y88iGgP+eKdiF+zf
4/D4uxQq9SvxXkO7Uf78jXtRPxGQvXhtW9E35ojvJXbOCehvCEdrmR3HOTco
+0bp78o7YgjMe1JF3V/B++b66Vsrs5w5DWTyeXP8/uB6P+XcF707ByP8vq2U
Pyj4FbvvXQFs7yfpIbz3Afw9i6HAd6llWux/8rfXlSjU/xKqbyZgfz+8+0Sd
fmvnJanAr+LI/J6OHM/aMY72M59KGL87bpRdOz61BD1Fgfpe+ProIYA2X/fv
Co7jbFI4FrXWcjr3ADK5gVQpw/yb7h6/5vMsyJz5+zWWJf3etc8Lz+GvcaXM
VPN7guwlsf3QvndmULgv9ST+FQrKFi+T0b5uoZ7Xmtzvm1Wkov93ynI1lvXf
Hch81wuMepf6+hKr98mhfg96cUyp6B9LtNZ2d44DtDM97huO4yyCsu+lvufa
EQMnyMONcpTk4nLfyN/uP+W0hNqRy5A4RzKns7bznQD/PsNYWd7i7w+QW7Xv
nRUUrl8t6uTIAPr5/1ZBpw3e9y8+/r7Ko0Ddnf3NAfJt+X1vrb8rU2l7lg3A
+y75KR6AP2a93qBvCTLHSh1N8W8KDwK0+X9vLa/jOOekcBwK1nI694E4fq0h
djYMH+/pL14noj5/9mMspxOcC3qf1fHZvTuN1lg8G1wYdzNdpdy9gm/9sbaH
op2L9qUK11nqC2QZGLElWtvAsfUrHPjdFdu5OM/Z1umW2veXaAn1ccbIT+ef
d3xiTo/hbmuWr1T0kcW2WNvcORZiH2ut5XXM/CR/W/C3XJxPoOybWWctp3Mv
Cv1uj2aj/DDGvaU1tei9NxXyd4K6mOP7V3V8lmOLsFJe6Zqlr5CZmzvcxdoe
SjZuLNoP3no5FZYdieVGRd2GHfwcvazOe2b/PvReUaznXXzdUqdXiX32xXMJ
lL31VhTLdnz3Nypyb7N6qPFxj8ba7s5xgLYHtLeW1znEJ5bmNq+1aGstn3Mu
CsYgf5vBUWFj7s1eK2LIlaSC34udHwB9Df17Kn+lHtZore17RyTn5aDl9c7w
rX/O7cYFir6E6y2JWawYBvre46Sk25KzZv6ujJy+24q+ffg+tNFP5/2gt9bj
1YHMvbOhsC5OHHvxbVbW3H97LLwJIaCfkvecxXXl3AfQ5lmttbyOuj9s2b+3
ls85DyjbhxOt5XTuy8Jcq4RupSzquwsieQQM38NK9rO97i5pZr+Xfp/Bz0bI
+Wf2qTCSfbWn2mOn/NJ9kKx9IRx5CQRr+yjYO0nY9SA7xcKyA7HcpNSPSuru
rH3gLoB/x1ZvLHeY9kNrPV4dyHzn6wrrKo6fe343xowOw57upsBn4vj38zH1
Ne9aexOiEdAPOS479wG0My29tbyOuj/s+UAoLOfrGL9b6zY5ar4SPV441hDn
id1GOdR81mpZjDYsfVN9vQf4fWMOqPE+Q7S26dXAMI//hvdcPhHmVVuknXpL
18rk3CqxX3Fore2m4AfF7beqd0Lx3jFiueJ5fJSfj/bz9LY+lTnFXfMYxsY8
djbWslwdyIxlu3ZAXR6uqI6Zf3TEtv1cqkNA7he5nG+lbXDuA2jzrdZaXkfV
F/bsH3Z+//oGoTYnc84B9r/B+3jiHAL2z3Z+OMu58PvImDP1wm34PhJQuNcO
/PtUtrjdeUEFf/s26n4vBtayuY+NOHcrjsfQuXNwTmdtRwW/KG27WL4I/P0Y
gVAHyRcU9Bqt6n4iqLsXMlrL74j7Q3H/q/EL1M9nin2voo4cC7/OymqZZfVj
m32t5GQ/SqV+Yy2ro+oH7LnbOHYvzddWf+NcE+zfiZCsZXSexTgXWoo/Hbbf
ZKjJOZjmrCrkXqOztuMZGX0kQv4M8N58f9VvJ3KVlpcI7dXI795+LmnRz8B/
O3rTt2Z1JK2yC+uPhLqDtR9cHdS9k+n6vxnEcWZ1PCuop/ZdoJ7Qpqq24HMu
ri/83U8o3FPnXB/QxvLWWl5HzQ9YYyy2vwf4m0U3AmV5i0U/cRxNMOwN+Yn3
e1hNwW9q7tkNhm3VeMvS54af/alT0HMJReMmaPc4tQXlbY3l0uz2zytBaHcU
rJNlL2Id1LvCgrBeE6Fuf6uhXt8133d8P/UNgcw42O7UIZHvK5rDCNTza+rr
G3E4xy7f8+YUQehnvbWsjpoP7H3vDwu/2cvL+J0dNwL736Y97+qQwJDviAvx
px/nMEGx7po9TmZrDvDv0fY4XeaPpfMhDTqCrJR87OYeOxybg8vcKmdCiCVB
sM7I0HuvXIfomhO0PFxx33EWdV1z5yjJr5zrUOkXL3bnGMS+vkQsbE9tPZ/q
wjAnS2O8zOOy56QdEih/ty3TWsvrqPjAXmwKs78vemPQul2OmH/s5Vx7H3sc
Cihf+ycN36qYg/WGOpP4buxj+rJuKfMgDch+Dto9db/m5Y/+dMRZ1E9ttba3
sO/Egjb/ptp3p85OW++g7xmOwnpNT/UpAx+uiQOneKPBUfMNiXsZwk4d4Ygx
hRk3l/AzBI4oKP/u1VvL6qjYf2++EyZ/W5SDK4m9zjUoiA++99opBvT9N78k
5z2o+8bbXUhve/h7Om/d1pxTrrIBmPvDmP0oj98Btvv+/ljbW9h3mqPjBnj7
Okh71kFfG0fLNlr7wZVB3dszonZ3zgVjnGHFHmZMy2y+xzWrIwq0JSN+jmCM
t6/7VV7t8nNGDwHD3Kw0DrfW8jri9t+Lf2Hyt52Pz88B+2sM/xbqFAP+/Waf
7sitkCFUzL9aQ91Jn0mN1v5wFhR0W0IeS5tKuffG7rNC/naDdw4xjqQJOT4E
Q/+JG23dfXuDUR9n72Yk1tEQyxedC4C4R8vK9leHYec5rXUbHHUfqd0r3hfU
ESjlgXH/GrGOQ/wew7jW7bTV9989AJTnvHtrWR1x26e9+Q3ed6GbzcscE9/Y
Gh9Ez9o49wZ1b5S+/G1xPoL3XXOZb+N8q1n5W+7ep95Yd1Lzxxfed9/6PfJM
alrzY4bcEvf3WJAK2tZgmJfmeUdfUGYw7p9rMrYK9XF0zsl9itqUWHdLqd/K
9leHqucz9TvnMB+RuL+gKagnbcUXDOuRqvM3kBvrewG9ft0YN6aIfYd2zg3K
zxu21rI6onbfin1/wD/D0lu3zanyi2bHvre6b9vRBTJnAhZzv1j/RtDP/bRC
DrPz15A/k9pZ+8NZwHG5rOyLrYL8R5+p/fuGCurvDfq0rhjL/cEsO5zAj6Zr
vF4jZoC/p4OsH6IdeuF2Ur7bJEvbXxnUn1FvrNvgqPtIIzBu7K4XxtiW8H73
4PvSOFHZFrG975VyzMeLElprX3B0IYzvvbWsjqjdk1Rc8jH6PuzMz3pr+Zxr
wZhzrBFm5ZbkUbIvfxn/PjLqNL2nY6cvelyu061WHqvHez3RXsw/1vj33gPq
1zPdWM63Uf7a+BA0dVxoh3a0uZq9wTzbf4RfKbS1dB9OZ237q4K6u+HEbe6c
E4F4f4q32SH4TbNCBk4O7jTjnKMLynMyvhfmJlDnWh4z7g/2v3+5XZ1iJOc+
c99D+VrtF97nVy81f6yYsy3RWbfnTAiNf7/GclqL2AjaHb9ccvlfJnVS+9ES
kn59qN7x8Sz8GuIyMfXeH1RXo6DjEh8SrfdJ1PY7a/mdw/yEe7fvlFOcrZQa
d5h1147V+bd+p8iNKRz3XmOf+8INgPyZpymtdfsclk90Gzb1e/8cEjv+RCXM
yqb8No9bifD3nbXuGG0k6e/pgD8njmfSJeq+sZf0m6+z+lqlurg0B+u7pP1R
od6OoZvErCtYx5aC9vp77XzdVp/Jt26Dc6i/9JX+cor3PyH0biqj3pyDq73P
4Q8m+9KdewLfC/44MORf9+Y7HKJ12xyyL4QNe/q3Z4eM0NzjxddJuVu+Wktn
rbdJO6XalKzbciZQd+/N6ebBGNbVkn3tz1je2vsovWL/o/DbQNcl82TxdSd4
94jEg/qH+DkZrL9Rk/UQrPvclUH9+Jms2+Ac6i9tpb/01m0Y21H7ZhhrzBHQ
35TOWo+OHkQfPcU+U0fM9nneleeXvUCcWJ2/O+cF2/P8aC2fcz2E5h1pHk8g
847XYuyy1tmsnSp36z0d8M/anHZP8Dh/k7qLOvev1Xxjhf6kSQZ67i3kYsYC
dn6MWE9U0nU7lv9r9Mlg3c/uAOr3BSXrNjiH+otE/uoUa0IB3yfPASD/7r3v
Bb4xBB9N1rI6aj6Q5z79hu3znChN6Ea/yXPz0+0VcIpsHjbs3VvL51wTgfnG
4joSOm/MdCXxC8PeozChUdTfN9Tvc+qt/eBsEOY5c1pr2Qt9hrtmyv2qaL0E
vVw4Sd6DdVu6nhKXi6mfUFFffwY7jDqPa1j3tysi0HfV7O2cEwGfidZtmLSF
EttE2gHZOetpdOnoQPDR1lpWx3Hq2RkjgrV8zjUB/03K7I/NRrmSc5rM5r4R
DN8mtvYabcpbqKsGQw4ljgS836jM/78DL7/SWvvB2QD/LoZLfGfCO3dR4i/5
b/Iai7RfAXJ33lxmPYLy83zJqF4xfwUtxvaKOm936va9Ibq2VffvUaZmtHXE
AW9NOyz7nMpnKtqyF1NKyONmnhPmOW4oqFPyHtdorUNH3UcDwQ8vMS99CqPt
pmu5Kd/w3sNxij3CjPbN96K8cD+s85m1Pt5Zy+dcg3E+0o+xZvq+ImX+kf+u
LagrCc1nMqt3OYGWa8iyk9eEo3622tNhzPGBll/5K5O1X5wRpv+c9kzqjv++
+uXLR9PoQy0q5wHQuZeOQjhYn22hXMmoXrG+D3quWmUOhv2z1qe4A/5KMOOf
in9jmH+u2VisHkfEVjX3HpxqLgK9cSts1Cl1n0O01p9ziI+W9jcfA23t1GCY
Z3NiynROfqozpRjm999HP6R8Q+jH352mLWcH63Myz7M7u4wxaO5DH3JS2H+z
/Tdm+budOqPQfKbbqadjlNlU6G1LP+1Mn3FHpz5fW9c9x1fE76I/uM1aeRLJ
e+koHH6XIyHuJKN6xWRg1BmUdL5Xb3+0H1wd1O/LqfKtiRxdQV2+xjwJqH/f
4zRjKATeDF6LR9i+W5UTy+f4HuAHgGGNUBqrG2t5n4hQf16KIXlsPDQvh3c+
kZp3W4O0rn8q2P4+c5ox0zkn2N+n0U3+dsnXfo1lkPppQb0lpJ06uGdquwL5
uXd4tStlpZUY6PHvs764dyaT947h/R750neyy+2v22nr0ffFdQZtjBKxhVEv
J88ZK+sMxPo03kwtXStf8nyHFQJ9T8S/CfU11jpz/tmsr/Wds/RX6I1Ze/ec
dJXlB2vdOYf5aDwyJjvFdjnyXpYcM79rxE0McyypN1rX6M8S88/Ihu57a9mc
c0OYw+RY9brnLI0+97N2LoG6szX/ZFopO1SUvZn/Qv33k3ZD5ul6PVr7yBlh
2pZ8pgZDrngv19pY60NYt22lb1M4XHeEvpuE601ScYJQZ0Osr1PQd+k5Lt8z
RdNrbd+r3otKsG3GvwmfBMEYv/km94HtyevpgPfdhD+Z8bY4/mP/fMhm3zuD
3pxDfbTUV3yf5L4uc18PlWVY3o2cfaFDxV45vPe9cWMQF8/FfbZFu6GvKj91
7ssYg5L13AH8XFm/JwujfUX9B/XfQT2e2fgNae8ayteYt1tfjvqVuo96jc6o
baX9V1Q+yRikWG9S0HcsrLu39vurAP5+4A8IyEHZi3SrvcNXRzC+9xJxSqF9
obZdBXVQ320oujvZuR8oz33n/uQ52m1dppm+fuLj+wl7a8MzvE/2YWxEwV45
1N1hJ0W0tv/ZwHou1Oc8zirg7+XvFGThnB0NO2VK3BsSBfW2RLL2g6sC3vf8
4nwZaPPrw+84O0jHnFw9hcaoXaVtisK6JOvo4PaK1TmrP57dJ64G6nMMIrYm
+tap7vh/OsR+WUJeS54mf0CNe9z+gfL7Bv4PDPPHOCH3Y/8e+xAIPhmtZT0z
hXrMuarF3Bahz1qRZe8wrHO+Qf/MKSnOW9v/TGA9f5HXj421fM45Qf0cPijI
RMnF7Z5fgswc8/uszFY4niVrX7gqTPsW+y2IY561Pk6o6z2iYXsSp/9X1hkY
OuqF6qZ+O2gM/ae19vcrwPQn8bhF6EsqvuVU2a6Z2eb15h/Vph9iFk6QV4LQ
+w1MPb70kPX4v/+H/yqsL6+9X/tiGmsdOip+SYnb7gPreqTOaX6PfevbSn91
CLq0tv9ZwPB9fW2/RrSWzzkvqD9X2SnJ1UrFANTv2+1m5TUb/Y2L34fE95VE
1bewH84J1jpR1jdHJ2v0MNw3QfAdMRmZ+ktCdVP3G4v6Mmh5uGjt61cAQnk4
VOZMCH3pEXHyamDhHBexv67REmSYr6nTyA8w708SakMi1NeOemxm/66m/o7T
dufcEGKm7zta16FE/3b4+B2G237o7ys6m0Amn8SZGzUY79fEyn58DN8xt3Jo
RbmryrZ1s7K07hK43b1iB/pwIuq6J5TNsXW01skBOm+F/D5cwHc64TqjlU+B
nrMR9WXQ8oCier8rDJuq9EVGfT5/PzmF8bGE3Rwvys/rk96DQN25syTQL6Tu
L/ktHY8dW0Dbj+XxclmHUuOfw+Pxe0iwvTentZbPOS+C8SsU1JX9tMUwJ1ry
18WcMbbvpSr6fl/RrrRQ1postXi+nO/Hfa1dhX3nlnfELeimq/R58/G7oD+L
33PEjCGtUN3Uu+lEv8ODNuY8oh8drNMtYqUch9bnHOJbnFi1RL8XR0F7b/dv
TqokNjPbkH8TKnWXY20npL8p/s32RqA8T+v7atZ1KN3HnHJ6a/tbg/U473NY
ZxMcMH8f60iF5bQb5eQ5Ws/p+8w2fXoPFrw3JIrqsvaFKyPpr7Nya94hvP18
qTJ+nMLnN2LT3/tDlOrsGfoKgvVT9kCL24nSbmv/uAKV/ZAcFyXsKlGfc4hv
rcVHDpv5I/D2rf0uKJcS75JErIX+G4y+N+omYPteqTl+PnVZh71iX3P2Mb8H
1ND3tu4fDdbyOecGcnmluFB2AH0Ot/m9B8N4FcdyP9W58Tvq2dulHFzDKIet
P4fkx1R9t4Xlhgqb3n6eDP55m9O8HYT33UM5ruR4GE7or38U2mxS91h/R6hf
3R5XpzJOTUkH+3W01p2za9Mo5FuZfqcuUlyakedsi2tB7K/R+7Gdzex3uV/9
wPuOujT+8+bYDv0c3N/2WvuGIwdo93zcfm7J0F+n3N+eyOud1rhC/m/9+LeP
3aOL9XErWcvmXAMMc41+xY/WyOvoxTtzMYwna35Zgnh/Bi1Gr52PrWkTuT6n
2LacPWuB0De4do3WujlA99S4QdL/HWH6VC8sQ7S0F2h34jzWV4g6lRiLqtb2
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
MknmB3O/Zc07UJZ776Ccdxr9O6IszoeRrvDvp3y41w70XBzb5o7jOFcAJ5mv
gXdfcbLW350A/54eNTsQ/DOP7Y21Dh2Sbb8z5nVr8+LvuMA3U/DPyFwu3/hE
IHfGcnE9dGA7OkG5N3OCwnVNqbozQUGeflI2Jw70BNkToVx/b35dj5r9eY1o
3e5KnbVKekmVcnWV9b/uJi65n7HByjlNLOd3/+5/Wysb7/OfsZCi+QKGfNye
XvpKvX1faEtJma21LzuO42gD2nztl6IcnDeFWmv93Q3w8yLNCfzT/eFiQG5v
3Is8p2y1/LGyrdxzGaS30hxTG9e+/blFOLAdrZDMbUFdWm9bZNj3CmnIMyk7
MX5fnFcklp+s+82ZwXHnVHMdl//eAsUYWClXU2GXDhtjMN7vM+e87dJ+wJx7
+7qgn9X8G95nSDn7CzuGbqjnVdnxZdRB2vhNa+3HjuM4R7ATC6tiO1EO6ljj
a1MdO3C//6q810D0T9bb9o49kNsbN+V1R4np2macc9as5Vpr+zgke7fCfvzi
0PvaUb9/pCXUpXWW7TVXKJZlIpOKDcHPB1DuvUuEcpN1nzk7KNs3VMOt7qFX
1FWolIszv929c5LQ3nb8+xYrMQky3yZZehrr1sjFre3zy3roZ3/rb6I6jvMY
QLsDo1WSoWHE9c5ad3cE/Hs0VM62EOcjvbX+nCpba9/Jk30pjnM/lZwG3udR
cj0d6vMLvbVdHJYfSK5lzN5MBG893YO4DqwYdyiQvhUpyRC4OlX0v2TdX67C
aL8k2K87q76trCet/lyVo0HFe2RrdgL9LslVe4O/Z766P4++ffhe7lF/r/xo
Z+27juM4RwLaneGNkgycM6m3m7ucBfDvg2gVZEkUGax154jYPFT4IJXXHfc/
UX73ypSfeN+Rf+j81Tkv4L3Fseafpvu+MeStS9dnHVdeDGtQzX1xf+UjyKOx
JuXuN6e+zUgpO1n3l6uBYX9zYvpIHjMuf/60QEfJsv9uyMVZb6zGYtD3P/cr
5XyBzLynPVAnpcQCGRprn3UcxzkawhiSFGWgjj29td7uTMWYLO4jIK5brHXn
iNq+FZqXXpXO2gYO23cl7kha3b+F911EaSQc0J6tWFz9RumknqTcr4pyWkpy
cMtsiHqklO33OdT5bO6LP3f6e4+LvCUkrBfp/tMLycbN93dCZcWFcuLR+oH+
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
bZbyI+drgw7PiWPIFJjPUYudm2fUxjftefIfivJfxh+BZxzaATLxfz5p/5uQ
DU59qdLWp/pvMR7wOBempu2r816CkB20a0Mt6+FqfKhXZujdj/oN9d+i1XKE
jnMH0Mf9LdZEht7evUZO7TzclRPdpsq25wL71ezLznnb4aTtoKV/YTuc3qMm
YIerdeGsqSeBtleCoo4O2xZ8xuW+NLT/tnB5h1/FnDZq2MH5mqBu74DKOXGg
zzGR+ZzacX753Mr4dhrbIPteHRTkL9IT6nI02Qevchu159Ts6obpq6xxhMea
nDtOpwbj4c+ZHRY9zRXtj8Ixg2PrVNu+crzIpItYX2ODHlGrNUN97lj1HFXH
uQOom7vehao4gPerkTvMM0Ho3GPo1hhdfl9B3TfgscAfavVzteaUsMNVP2rt
MBXYoXYeP+yDgH4yVznXWh2FAh3VPCPLX/S9EW1j2KFOBea0mShL0pLFeQ9Q
F2+jkkyUuMC6m7gi5uRYMqLuPugSJkW7FdmxUv6sq8tvEqCvV/7FfYINvoE3
F+fcUhCWfe8ZQ6G/fgftfaZI/xXjYV58sEh+ps+W+lCosEFa5LqydaqwcW7/
MmfEfEbWUa45GUtssfwdty89sRuzJIDMflS177GOcyfwtfenstanB3rMa5mI
+39PGU/6GAnt5Lkv4XkXa64f1Jpnt4RCe40MWx3qZtNuqJA9930oeAbFDkec
PqfCDqnUBhs7lK6di9dTG1m2/Mbxvc3jYrstV/nQ2nriSz0x7LDqiHwPAh5j
VPu7jNqZvOCNi2Jfdb4mqPte2UNN3CzwvGF5ZlyY8DG25v/Grr1Y2v+5tLNt
d9o8MywMBLvFg7ZeIbV98Lzvmz78wuf550NfiG3PR7bFc24rWmOdPGN8kffX
ib5Gpo1/bNr4jfP5mdwXlOXi5qVv7HG5PGc86Eus9KMBZd/FJspzlna3frn1
xy0BBeufgucFPMfDq44mFObFTtr/tvOM9PIM9n1Q+Diec1t3ut9Q9e4D1L+n
ib17O847gD73p7ao08v9DhCadzb6/CEQpyzo4vsEnvt+JxyvY39u7Faz9owX
vrZ+3x+I8q/rzbzuOZu//8stVfThdU14pDfSmgQf1zi/L/T0bywx5R/wXKPt
rf1/cNtW9lPO93f2+xKe6849O08SOlqeMeK5Xi/p1/xiL7YvV8pNnTOStQ85
9wB91sRNhc/3d56bs8yB65rHzzU/19X3nTXEv3WEtWzEfoQX+Ue3vbk9rN/R
StHcj1ozF67rYN+P6jgb0Of+1O8v8oVlHrrKB9Sy1nGt3+bWtc/A0OuAx/ts
b7o94zenr3cHH7/T/oDCPIaP66rxjnpefHp80dWXnVPxzBnHHd72vWmx+1Fc
SwbyREasC9Z6dO4B6s6kVnvvQFmNxq3yD47jOL2B++ThYuc6UJPPce5MZzHm
sqYWNnfbrLVR1LqitcZk7kC3xbESXzi/4jjOPri+CyE1lofzHWmy1qNzLwr8
/nQ+VZLp0vet9eY4jnNXcK97+TS/+UjU68zW9nScnkH9uelSlJy1/81Yxomp
4zvtWSWdY+s4znuDwvN5G8vEmbcGa1069wN91sSt++PXWv4JinXdjuM47w6e
50veaT/TL3zc23PG6/mMK9w5rlS+IMzRfpSvRPri3OnsxrtQVG/Wge6Hihg/
4LFevkOMz3oO1vOi4zh2gLA3r6FMAyOeFd0h6zivoG7fQLSW33EcxzlmWVPE
m7ybOY7jiEOIl9b3S1S/z+G5Z9U6p1jClzw7znGcf7Hqp3QMF5BpIsYwPyPY
qQJ19exDQznDMma3Z+r+QeU9go7jOO8Gyu+pdRzHeWsIcTMayzoLzwMB/c8D
f+FnxznOlwOEbwWN5CnaI/tCtNajc2+YfrcyNZKxZG3URBbHcZxeWeJ57+9d
juM4LRkK42fqQNagMC/c4VyC+f8wWs+hjuPoA2LuoZFM1PjvtXCOCKh7b1M/
s40wNiZrXTqO47QGj7oH6hrCcRznKxAK42jqQNakPFeM6HvP6gzPxznOWwNa
7XFqIE9gxKrRWo/Oe4DHHibud7LUQD7K3SXBWp+O4zgtgOffHMd5D/7uxLcB
zztMau5eLTp3Df3Ui6mftYL+96zO8Pdcx3lL0F8ebqbGJ2sdOu8FcUy8EjqS
7Y+1Lh3HcTTBo6aBum5wHMfplXgR8/Leypo8WSiIq9Y6WGm23wmPXOevSt1q
k8+FHq3nXcdxZADtThzV+0jxWE9TY5KfS++Igro1zqws2w+iPOp7ZQX7NljL
wJA53Enunv0Bz2/9XesTz7qEbs9CWObS+EKwlkuwf+sZP7PBe5DjOI4ml3Mg
6r4X5/Xt4VoAvH1J/3HSbj4H6Sfo6+vRYH7Jcs4d+MKZDXPOcDyzZUFfvy/2
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
tfF4PMvBXPr7hU1GTVtL/q5Qpoli/4M2Uo2+ie2tpIs2Svz0v7bwiN8/8dyv
u8ewtH1azybQv9O+nbRbUmc3FLZF0d8e6/wSDtovzbd+FSZhG+S1yC3P5IfO
vQW3fddf9KGZt76tbr4ioH17jQ3l4sarW8Ypx7k7lWuM/0H5rLgdeQPKvmPf
IqYsc3vA8/t0ZryL/D2w6O9u3/WzDwdlvQx4j/zb3EBXoVCWT3IQfssl7jwz
cmRtPC63dSTZhvmdbkR5TdaRXqvPRLjQ28T8HVuuC3t+sv9BG4nan4v2pgIf
SxdtlMTl7Bvk+e5qDFToq6hvJ+2OkmMTdfsWLuszC230FdgdJ+B/18v+dfu8
CuTvOZ5x4/UtHt+XtL713ubdZaOPPM+PBz7yd/nvEY3rQXfk+YOPdyZFEGrE
X9oeiXYNjfocmH7nZzs5jiECc6zqWXE78sYCmbr9DrmZt0rW17+hdE8mQd4c
23/iY65w5fBbeyO5an23NROU1yPQz7/NjXSVnzM29KUSmT75OuG3XOLOMyNH
VoMxmte53PsU9vQ6S4wfnMeNQ73hPGaz9X3hQ0Vj4MQnWGtslL1rfPJNgp5J
/aOOgUofyCSmXCX1scW+Av5ZP5f2IdjZmhxHwsKntRDqz1iZDnTD3Vd9qfe7
sehiFrQpa9z3AHRr47p9d9nRAbVessm7Imh7FMhnnTDiTYt9Y9z988nalxzn
q4O6dV7zdQdodzgM1vrdkT8w5+axsYzUuSbhkZdT1Tnul39rcj5zA73kdWde
i2ufbz639HXimAxC45lC3Hlm5Mh6J170mv1a7OzEEx8+9Tsc5yyKzt5n+l+R
HU98guUHKNuz+Mk3X9pIV2O9QmenY6Dg91fv0alCtqv1FMkmF/7Bts+mfc34
VctUIH/N3bd/GHGiWud3BY81QBKy7WjdHwFdaNXGdasbPPJcnNx31TxJkI8z
bj/czXLS9kBtu1GfOXnh3Ofb1+w6zjuAunXMSmgkayTI1LRWr1D+sULHTeqH
iTre1TuEvwHhfvm3P2hQy6islw99gH7OyeS+JkK/ws5v/Xw4HZtU39l60vbr
fFe0Bl9+u/feNVXKM5zYsUgHJz7B9gNc17+MTJlWtPby/q/296jLwyXpsbnj
s6zYwZTXkqFAfu45d6ffahl6YfvM3cBjzpwF7Dta96VSD5q1cd3tF8RjvcPO
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
XSpsX3uvlup42elP6T7CS/sUthNOfl9bI9CKqDSOsy3ukOcdT/oQmG3mfucc
QETlntSNLFMHulLzF2HfG6Bbz55tejj2jfpc4mckWzLbzEwF8lLvcp8ZOqGu
JU7PK3hpdya2vVsrCN5+TvP1GmT283gOznEcx+kCyK2z557mtneYn9HmfJm1
36zvnJXromit400/avIXKv2A0R3B1OduSA10bc0nWy9jYC747dW9q6Xvb+Gk
jbvcg6FWV4FHPiR10Mc9ir73FPpTrRxF79R45PWsc5sqMVbQ54KijrIvNL+D
obDf4rZEXR3maVwBvda0+H7qivF7eW8N+HPmbqwBb115GbeUfU3iDOVsl27W
+I7jOI4DuVxcniODdX+WPnHfR2dr2Xf60qrGI4FYUwX+Hhzzb6tC/qLWD9By
CcnouWQZ0Nd+N5HYgLL3u+nk98XvWRe6tdZRKaQ4w/TjrFPr/NGWw7PcdmTn
3ENJgZQHxWPM/jLUZ9T2l0o/0+iz6R0MhX3n9CsUtDtV6Gw8aXcmtsfK2YC4
LroYd+JrE0abs7GfSayBzfftOI7jOM4eFeuePcYO+lOzNjaXf6c/34RtdLZ2
K1r7o+5dMVrr9EW33fUDtHxY0d6WwudyazAT4RlzA1+WHhdnZ9qX1MTNy9/m
7/oBj9zdL6Iu5hMZBqLPWDE1HNs96CTbN89HpHdA6MX7Kv3jEfezbC1zcmpx
tkIPmnPydOUvix0iHvH6Na8yL23kfx8U+8/pWygctzX+Ne60ORLbmCt0Q92b
Gja/DSjfW35GOpFP3GaK44xqtz08B+c4juN0DWTXlKx6fsG+UM8BEVl/NehX
XqPNgnY6XMPhZP2O8r14e/RWC8dd56n2A7R1eBR8buT6DOEZUwMflqJovzra
3C85FcjxvWP9ku42FPTp0Fgnf5fnhQqZa+awI8TixCLjmpOblfUpKrdAv/MY
09gDvlszufjCiEfePjH8QvwuKvDjXdGYQP19Vdkvh017VB+t8jnY5///LjJk
n/m52CuAlj/NbZjtiYZMzM6+381603Ecx3GOgMy3py7mP9St44K1LU761eJO
tnUNtlsbV6nbaK3Dl75w13qq/QBtHS+2Vq6wbSI8Y2zgvxLk9+Kho34V2xmP
OJFt2dPezNF4rA/Qq+XK811+3xXLd0DmTKTMLCnXiW6z//+CfI7q/2/vXK8j
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
d+4fke+wv8OtxH8X86H1kKHEWDxjPJMtwpaxdjTaYzlAzyvipdWuXQEAAOA5
kTL3vdu9RqOt246+RvxrqBTZB8D9kPOYUn+hLP2ODIO2nQJtFkMVOnro1m08
0xawh9l4j7mDDRNsf1tfkrLxhCZRtr15pcjvnPPT3HHJQ5nkmnONa8ZUW+3o
0iXIZLTHsYd+TQH/2JwHUscOAAAAQCyJa7otbnOnqtPfbJDyzb7V1gmy+sfZ
+LjM1+WRH7C5n9C2k6ecKXTaenn6ww855ZG/ktseZuM95uSZqvwkwva59uY/
bFdY7pK14ZLHhYSfTbW/j8n5hG5cpN63enivpVwX01lSdA0kaeuTS30/QrfQ
endq4wYAAAAgFXnsE8bM65xBbvqtUdLzBG+pN2z6wlldJ3OxPFt7lEHbTisZ
S8QdWm29nG7diZybZ5wk/3m8H3EQef44XJvBbqOC3KVqw2XTRcJ/8/oCdrL+
a2uBjR7vt7G1wzpmcl7btQTd1tjMbKcU+Yz2ON7R6XeED0aNmTO/AQAAALgS
KVc75b30urSALVLXg+/aOkA2XzAnfX11namtMTpo22lDzjHzPNJo6+T0Osut
MTvPZa01Humr1flJAfufcXktqAwyB/lapIxtxPuL/c7J9v0BxmcekDL3UZ2R
vSbHwgY2Z7Cb+jtRzurWYlLoXp8N+hr1BwAAALBI/jsc/sr9zqqm5geO2jpA
Nl8wNfWzbJ/5HLTttCFnzhygT219FnoNJ7KagH7Lao8TX63STyLsn3QHtpLM
JXKyPgrYNUbOqmrcS5nc/iPGVBvI4+ysnR/OcgF79/dV+EyGvjIX9RV3MQAA
AMAtcOvCEvea2TWX0dbP0wZJ39S15YdsfmAO+nlQkGer1tjlcnjI2WScN6qJ
4Ut8HC5njbg2wler9JPIPoiJxfVPMA4mbFwhe16PxOXDVxPjkHLnf/foUvpB
ws8gfLrnxghZ7XuqOI/p9M6aH3zAR4mxAgAAAFASKXdeoNp7VTds0EpcnsCP
Na/M50zenG3t2nhw//8W9nhFDvq4U5JnHYOo8hy05NkXF4k5JOg0nMhrAvot
libCVy2Dtv0y9kNILC7LvQKRcraZ+nxJW0jWlLqORWQK8IW+gJ13x9HRGAyw
dfC6wj179n1wcHTyyLOraf78E6N3BNXEhwEAAABikMf3/KHQOqnT1s/TBnbN
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
K/8HF9/R7g==
    "], {{0, 1250}, {1250, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
    Association["Comments" -> Association["Software" -> "Adobe ImageReady"]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{132.5, Automatic},
  ImageSizeRaw->{1250, 1250},
  PlotRange->{{0, 1250}, {0, 1250}}]], "Input"]], "Image",
 CellChangeTimes->{3.6993490320978823`*^9}],

Cell["25/4/2017", "Institution",
 CellChangeTimes->{{3.6993440877811766`*^9, 3.699344155489932*^9}, {
  3.701963655755642*^9, 3.7019636584910398`*^9}, {3.7019637086829624`*^9, 
  3.7019637087799845`*^9}}],

Cell["", "PageBreak",
 PageBreakBelow->True],

Cell["", "PageBreak",
 PageBreakBelow->True],

Cell[CellGroupData[{

Cell["Introduction", "ChapterNC",
 CellChangeTimes->{
  3.6407012833362303`*^9, {3.6943766657808523`*^9, 3.6943766847548943`*^9}, {
   3.6993443373807545`*^9, 3.6993443394466076`*^9}}],

Cell[TextData[{
 "Epidemiology is the study of the distribution and determinants of \
health-related states or events (including disease), and the application of \
this study to the control of diseases and other health ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["problems", 
    RowBox[{"[", 
     DynamicBox[ToBoxes[$CellContext`ref2, StandardForm],
      ImageSizeCache->{8.879999999999999, {0., 5.}}], "]"}]], 
   TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.699344193377859*^9, 3.6993441938102007`*^9}, {
  3.6993442781019926`*^9, 3.6993443043020997`*^9}, {3.6993443954622707`*^9, 
  3.699344417066884*^9}, {3.6997002404556055`*^9, 3.699700256824312*^9}, {
  3.7018589924894953`*^9, 3.7018590754275913`*^9}, {3.7018591204401503`*^9, 
  3.7018591287683315`*^9}, {3.7018591733859005`*^9, 3.701859179467042*^9}, {
  3.7018595173904877`*^9, 3.701859519749897*^9}, {3.701859645680606*^9, 
  3.701859651012786*^9}, {3.7018596983649993`*^9, 3.7018597005525293`*^9}, {
  3.7019667523055067`*^9, 3.701966756518293*^9}}],

Cell["\<\
The study of epidemiology has begun with the Greek physician Hippocrates, who \
first tried to figure out the relationship between occurrences of disease and \
outside influences. As a scientific study, as we understand it today, \
epidemiology though has been established during the middle ages and later, \
especially after the capability to observe and identify microorganisms has \
been developed.\
\>", "Text",
 CellChangeTimes->{{3.6993447648163004`*^9, 3.6993448003673153`*^9}, {
  3.6993448420495434`*^9, 3.6993448900298157`*^9}, {3.6993449662906017`*^9, 
  3.699345082576551*^9}}],

Cell[TextData[{
 "There are three main types of studies used in epidemiology, descriptive \
studies, analytical studies, and experimental ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["studies", 
    RowBox[{"[", 
     DynamicBox[ToBoxes[$CellContext`ref3, StandardForm],
      ImageSizeCache->{4.4399999999999995`, {0., 5.}}], "]"}]], 
   TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.699345926326305*^9, 3.6993460987557945`*^9}, 
   3.699700276696282*^9, {3.701859217705887*^9, 3.701859217721465*^9}, {
   3.701859525921853*^9, 3.701859542910232*^9}, {3.701859655247217*^9, 
   3.7018597075838714`*^9}, {3.701966761302785*^9, 3.7019667676109767`*^9}}],

Cell["\<\
The first type, the descriptive, or surveillance studies, can be used to \
study distribution. Nature is allowed to \[OpenCurlyDoubleQuote]take its \
course\[CloseCurlyDoubleQuote], and observations are made during that period, \
without any attempt to tamper or drive the events.\
\>", "Text",
 CellChangeTimes->{{3.699345926326305*^9, 3.69934616133951*^9}}],

Cell["\<\
Analytical studies are instead used to study determinants. They are mostly \
theoretical in nature.\
\>", "Text",
 CellChangeTimes->{{3.6993461667047176`*^9, 3.6993461990434837`*^9}}],

Cell["\<\
The last type, the experimental studies are where the scientist takes control \
of the event.\
\>", "Text",
 CellChangeTimes->{{3.6993462011298513`*^9, 3.69934626978492*^9}}],

Cell[TextData[{
 "The Bradford Hill criteria are used to determine causality in Epidemiology. \
Although, according to their author, \[OpenCurlyDoubleQuote]none of them can \
bring indisputable evidence for or against the cause-of-effect hypothesis and \
none can be be required ",
 StyleBox["sina qua ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox["non", TraditionalForm]]],
 "\[CloseCurlyDoubleQuote]",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["", 
    RowBox[{"[", 
     DynamicBox[ToBoxes[$CellContext`ref1, StandardForm],
      ImageSizeCache->{4.4399999999999995`, {0., 5.}}], "]"}]], 
   TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.6993462740955377`*^9, 3.6993464150727386`*^9}, {
  3.699938333344801*^9, 3.6999383494438524`*^9}, {3.7018591992525167`*^9, 
  3.701859200002529*^9}, {3.701859549601839*^9, 3.701859552867508*^9}, {
  3.701859714650669*^9, 3.701859717291328*^9}, {3.7019667830555067`*^9, 
  3.701966836737759*^9}}],

Cell["\<\
The purpose of epidemiology is many-fold. Firstly, epidemiological studies \
can be used to effectively use population based health management. Another \
use is assessment of threatening conditions that emerge from time to time. \
And most importantly, epidemiology provides as with the ability to predict \
outbreaks that may happen before even they begin.\
\>", "Text",
 CellChangeTimes->{{3.699346771721014*^9, 3.6993468894946384`*^9}}],

Cell["\<\
In this work the types of networks used in epidemiology are reviewed at \
first, as also some general graph theory used in epidemiological studies. \
Then, it is attempted to create a network with such characteristics, and to \
study how an epidemic happens in such a network. The focus will be placed \
mostly on determining the characteristics of the network, and if this \
application ensues the theory about the disease thresholds in a network.\
\>", "Text",
 CellChangeTimes->{{3.702059703006609*^9, 3.702059708173731*^9}, {
  3.702059751533202*^9, 3.7020598271749315`*^9}, {3.702059883599218*^9, 
  3.702059926157395*^9}, {3.7020601921390915`*^9, 3.702060237356477*^9}, {
  3.7020606623831625`*^9, 3.702060722045128*^9}}],

Cell["", "Text",
 CellChangeTimes->{{3.6997003049507275`*^9, 3.699700311270237*^9}}],

Cell["", "PageBreak",
 PageBreakBelow->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["Networks & Graphs", "ChapterNC",
 CellChangeTimes->{{3.6943771059409237`*^9, 3.6943771089033513`*^9}, {
  3.6943784321412983`*^9, 3.6943784365406213`*^9}, {3.6993484814203978`*^9, 
  3.6993484828050995`*^9}, {3.6993485141045413`*^9, 3.699348514351765*^9}}],

Cell[CellGroupData[{

Cell["Network/Graph Theory", "SubChapterNC",
 CellChangeTimes->{
  3.640701274346218*^9, {3.69437844647387*^9, 3.694378449722205*^9}, {
   3.694378753898755*^9, 3.6943787549180984`*^9}, {3.69934724197678*^9, 
   3.699347243026509*^9}, {3.699347398388717*^9, 3.699347399576398*^9}, {
   3.699347930067916*^9, 3.699347932086834*^9}, 3.6997004190223546`*^9, {
   3.7018558740221767`*^9, 3.7018558756784487`*^9}, {3.7018589697670946`*^9, 
   3.7018589777549253`*^9}}],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  SuperscriptBox["Definitions", 
   RowBox[{"[", 
    DynamicBox[ToBoxes[$CellContext`ref2, StandardForm],
     ImageSizeCache->{13.44, {0., 8.}}], "]"}]], 
  TraditionalForm]]]], "SubSubChapterNC",
 CellChangeTimes->{{3.699347935985321*^9, 3.699347938173421*^9}, {
  3.6993481001244264`*^9, 3.699348102708296*^9}, {3.6993483741585875`*^9, 
  3.699348385809165*^9}, {3.6997004224392233`*^9, 3.6997004249436707`*^9}, {
  3.7018594894024944`*^9, 3.701859510343522*^9}, {3.7018597239163675`*^9, 
  3.7018597408424034`*^9}, {3.7019655881813917`*^9, 3.701965611661741*^9}}],

Cell[TextData[{
 "A network or a graph ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", "G", ")"}], TraditionalForm]]],
 " - both names will be used interchangeably - is a structure composed of \
sets of ",
 StyleBox["nodes",
  FontWeight->"Bold"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", "V", ")"}], TraditionalForm]]],
 " and sets of ",
 StyleBox["edges",
  FontWeight->"Bold"],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", "E", ")"}], TraditionalForm]]],
 " which link the nodes. Usually, links are established only between pairs of \
nodes. Either one of these sets ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"V", " ", "&"}], " ", "E"}], ")"}], TraditionalForm]]],
 " or both also have some attributes associated with them, depending on what \
the network is designed to describe."
}], "Text",
 InitializationCell->True,
 CellChangeTimes->{{3.699700468398452*^9, 3.699700694590516*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"G", "=", 
    RowBox[{"<", "V"}]}], ",", 
   RowBox[{"E", ">"}]}], TraditionalForm]]]], "Equation",
 CellChangeTimes->{{3.6997005294768066`*^9, 3.6997005359156847`*^9}}],

Cell[TextData[{
 "A network can be described by its ",
 StyleBox["adjacency matrix",
  FontWeight->"Bold"],
 ":"
}], "Text",
 CellChangeTimes->{{3.6997007026610427`*^9, 3.6997007154934945`*^9}, 
   3.702061146716799*^9}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["A", "ij"], "=", 
   RowBox[{"{", 
    SubscriptBox["a", "ij"], "}"}]}], TraditionalForm]]]], "Equation",
 CellChangeTimes->{{3.699700719519998*^9, 3.699700736399683*^9}}],

Cell["\<\
Its rows and columns define the nodes, while its elements correspond to the \
edges, or links between the nodes. An entry of zero defines that there is no \
connection between the corresponding nodes, while a non-zero entry defines a \
link.\
\>", "Text",
 CellChangeTimes->{{3.69970074252641*^9, 3.6997008331503143`*^9}}],

Cell[TextData[{
 "We can split the networks into two major types, depending on their link \
values; those that have entries of 1 only, and those that have a real number \
as a link value ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"0", ",", "1"}]}], "]"}], TraditionalForm]]],
 ". The latter contain ",
 StyleBox["weighted",
  FontWeight->"Bold"],
 " links, while in the former all links are of equal value."
}], "Text",
 CellChangeTimes->{{3.6997008355967674`*^9, 3.699700937463272*^9}, {
  3.7020611640122766`*^9, 3.7020612124900956`*^9}}],

Cell[TextData[{
 "Furthermore, the graphs can be identified as ",
 StyleBox["directed",
  FontWeight->"Bold"],
 " or ",
 StyleBox["undirected",
  FontWeight->"Bold"],
 ". Links on the former type define only one-way connection, allowing \
\[OpenCurlyDoubleQuote]movement\[CloseCurlyDoubleQuote] from a specific node \
to another, but not back. The undirected feature two-way links. Undirected \
graphs are described by a symmetrical adjacency matrix (on the main diagonal)."
}], "Text",
 CellChangeTimes->{{3.6997009963091116`*^9, 3.699701126021738*^9}, {
  3.6997011760865655`*^9, 3.6997011831973*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Column", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"b", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<directed graph\>\"", ",", "Italic"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"TableForm", "[", 
          RowBox[{"b", ",", 
           RowBox[{"TableHeadings", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Range", "[", "4", "]"}], ",", 
              RowBox[{"Range", "[", "4", "]"}]}], "}"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"AdjacencyGraph", "[", 
          RowBox[{"b", ",", 
           RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], ",", 
       RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
       RowBox[{"Spacings", "\[Rule]", "0.5"}]}], "]"}], "\[IndentingNewLine]",
      ",", "\[IndentingNewLine]", 
     RowBox[{"Column", "[", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"a", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}]}], "}"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"Style", "[", 
           RowBox[{"\"\<undirected graph\>\"", ",", "Italic"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"TableForm", "[", 
          RowBox[{"a", ",", 
           RowBox[{"TableHeadings", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Range", "[", "4", "]"}], ",", 
              RowBox[{"Range", "[", "4", "]"}]}], "}"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"AdjacencyGraph", "[", 
          RowBox[{"a", ",", 
           RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
           RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], ",", 
       RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
       RowBox[{"Spacings", "\[Rule]", "0.5"}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"Spacer", "[", "50", "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.699701194964014*^9, 3.6997012869003077`*^9}, {
  3.6997013432769237`*^9, 3.6997016200785484`*^9}, {3.699701725986576*^9, 
  3.699701765799198*^9}, {3.6997018685422335`*^9, 3.6997018702322845`*^9}, {
  3.699938003517209*^9, 3.6999380087145767`*^9}, {3.701855262121354*^9, 
  3.7018552725929904`*^9}, {3.70185531428866*^9, 3.701855324554448*^9}, {
  3.7018554241048346`*^9, 3.701855441360357*^9}, {3.701855500122363*^9, 
  3.701855500278615*^9}, {3.7018555307864513`*^9, 3.701855537786542*^9}, {
  3.7018555999703207`*^9, 3.701855656059589*^9}}],

Cell[BoxData[
 TemplateBox[{InterpretationBox[
    StyleBox[
     GraphicsBox[{}, ImageSize -> {50, 0}, BaselinePosition -> Baseline], 
     "CacheGraphics" -> False], 
    Spacer[50]],TagBox[
    GridBox[{{
       StyleBox["\"directed graph\"", Italic, StripOnInput -> False]}, {
       TagBox[
        TagBox[
         GridBox[{{
            StyleBox["\[Null]", ShowStringCharacters -> False], 
            TagBox["1", HoldForm], 
            TagBox["2", HoldForm], 
            TagBox["3", HoldForm], 
            TagBox["4", HoldForm]}, {
            TagBox["1", HoldForm], "0", "1", "0", "0"}, {
            TagBox["2", HoldForm], "0", "0", "1", "0"}, {
            TagBox["3", HoldForm], "0", "0", "0", "1"}, {
            TagBox["4", HoldForm], "1", "0", "0", "0"}}, RowSpacings -> 1, 
          ColumnSpacings -> 3, RowAlignments -> Baseline, ColumnAlignments -> 
          Left, ColumnLines -> {1, False}, RowLines -> {1, False}, 
          ColumnAlignments -> Left], {
         OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}], 
        Function[BoxForm`e$, 
         TableForm[
         BoxForm`e$, TableHeadings -> {{1, 2, 3, 4}, {1, 2, 3, 4}}]]]}, {
       GraphicsBox[
        NamespaceBox["NetworkGraphics", 
         DynamicModuleBox[{Typeset`graph = HoldComplete[
             Graph[{1, 2, 3, 4}, {
               SparseArray[
               Automatic, {4, 4}, 0, {
                1, {{0, 1, 2, 3, 4}, {{2}, {3}, {4}, {1}}}, Pattern}], 
               Null}, {ImageSize -> Small, VertexLabels -> {"Name"}}]]}, 
          TagBox[
           GraphicsGroupBox[{{
              Arrowheads[Medium], 
              Directive[
               Opacity[0.7], 
               Hue[0.6, 0.7, 0.5]], 
              
              ArrowBox[{{{-1., 1.0106430996148606`*^-15}, {
               6.049014748177263*^-16, -1.}}, {{
               6.049014748177263*^-16, -1.}, {
               1., -1.133107779529596*^-15}}, {{
               1., -1.133107779529596*^-15}, {-7.044813998280222*^-16, 
               1.}}, {{-7.044813998280222*^-16, 1.}, {-1., 
               1.0106430996148606`*^-15}}}, 0.02261146496815286]}, {
              Directive[
               Hue[0.6, 0.2, 0.8], 
               EdgeForm[
                Directive[
                 GrayLevel[0], 
                 Opacity[0.7]]]], {
               DiskBox[{-1., 1.0106430996148606`*^-15}, 0.02261146496815286], 
               InsetBox[
                FormBox["1", TraditionalForm], 
                Offset[{2, 2}, {-0.9773885350318472, 0.02261146496815387}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               DiskBox[{6.049014748177263*^-16, -1.}, 0.02261146496815286], 
               InsetBox[
                FormBox["2", TraditionalForm], 
                Offset[{2, 2}, {0.022611464968153465`, -0.9773885350318472}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               DiskBox[{1., -1.133107779529596*^-15}, 0.02261146496815286], 
               InsetBox[
                FormBox["3", TraditionalForm], 
                Offset[{2, 2}, {1.0226114649681528`, 0.022611464968151727`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               DiskBox[{-7.044813998280222*^-16, 1.}, 0.02261146496815286], 
               InsetBox[
                FormBox["4", TraditionalForm], 
                Offset[{2, 2}, {0.022611464968152157`, 1.0226114649681528`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
           MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
          False]], {
        FormatType -> TraditionalForm, FrameTicks -> None, ImageSize -> Small,
          DefaultBaseStyle -> {
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]}}]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
     "Column", 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0.5}}}], 
    "Column"],TagBox[
    GridBox[{{
       StyleBox["\"undirected graph\"", Italic, StripOnInput -> False]}, {
       TagBox[
        TagBox[
         GridBox[{{
            StyleBox["\[Null]", ShowStringCharacters -> False], 
            TagBox["1", HoldForm], 
            TagBox["2", HoldForm], 
            TagBox["3", HoldForm], 
            TagBox["4", HoldForm]}, {
            TagBox["1", HoldForm], "0", "1", "0", "1"}, {
            TagBox["2", HoldForm], "1", "0", "1", "0"}, {
            TagBox["3", HoldForm], "0", "1", "0", "1"}, {
            TagBox["4", HoldForm], "1", "0", "1", "0"}}, RowSpacings -> 1, 
          ColumnSpacings -> 3, RowAlignments -> Baseline, ColumnAlignments -> 
          Left, ColumnLines -> {1, False}, RowLines -> {1, False}, 
          ColumnAlignments -> Left], {
         OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}], 
        Function[BoxForm`e$, 
         TableForm[
         BoxForm`e$, TableHeadings -> {{1, 2, 3, 4}, {1, 2, 3, 4}}]]]}, {
       GraphicsBox[
        NamespaceBox["NetworkGraphics", 
         DynamicModuleBox[{Typeset`graph = HoldComplete[
             Graph[{1, 2, 3, 4}, {Null, 
               SparseArray[
               Automatic, {4, 4}, 0, {
                1, {{0, 2, 4, 6, 8}, {{2}, {4}, {1}, {3}, {2}, {4}, {1}, {
                  3}}}, Pattern}]}, {
              ImageSize -> Small, VertexLabels -> {"Name"}}]]}, 
          TagBox[
           GraphicsGroupBox[{{
              Directive[
               Opacity[0.7], 
               Hue[0.6, 0.7, 0.5]], {
               Arrowheads[0.], 
               
               ArrowBox[{{-1., 1.0106430996148606`*^-15}, {
                6.049014748177263*^-16, -1.}}, 0.02261146496815286]}, {
               Arrowheads[0.], 
               
               ArrowBox[{{-1., 
                1.0106430996148606`*^-15}, {-7.044813998280222*^-16, 1.}}, 
                0.02261146496815286]}, {
               Arrowheads[0.], 
               ArrowBox[{{6.049014748177263*^-16, -1.}, {
                1., -1.133107779529596*^-15}}, 0.02261146496815286]}, {
               Arrowheads[0.], 
               
               ArrowBox[{{
                1., -1.133107779529596*^-15}, {-7.044813998280222*^-16, 1.}}, 
                0.02261146496815286]}}, {
              Directive[
               Hue[0.6, 0.2, 0.8], 
               EdgeForm[
                Directive[
                 GrayLevel[0], 
                 Opacity[0.7]]]], {
               DiskBox[{-1., 1.0106430996148606`*^-15}, 0.02261146496815286], 
               InsetBox[
                FormBox["1", TraditionalForm], 
                Offset[{2, 2}, {-0.9773885350318472, 0.02261146496815387}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               DiskBox[{6.049014748177263*^-16, -1.}, 0.02261146496815286], 
               InsetBox[
                FormBox["2", TraditionalForm], 
                Offset[{2, 2}, {0.022611464968153465`, -0.9773885350318472}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               DiskBox[{1., -1.133107779529596*^-15}, 0.02261146496815286], 
               InsetBox[
                FormBox["3", TraditionalForm], 
                Offset[{2, 2}, {1.0226114649681528`, 0.022611464968151727`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, {
               DiskBox[{-7.044813998280222*^-16, 1.}, 0.02261146496815286], 
               InsetBox[
                FormBox["4", TraditionalForm], 
                Offset[{2, 2}, {0.022611464968152157`, 1.0226114649681528`}], 
                ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}}}], 
           MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
          False]], {
        FormatType -> TraditionalForm, FrameTicks -> None, ImageSize -> Small,
          DefaultBaseStyle -> {
          "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
           Hue[0.8, 1., 0.6]}}]}}, 
     GridBoxAlignment -> {"Columns" -> {{Center}}}, DefaultBaseStyle -> 
     "Column", 
     GridBoxItemSize -> {"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
      GridBoxSpacings -> {"Columns" -> {{Automatic}}, "Rows" -> {{0.5}}}], 
    "Column"]},
  "RowWithSeparator"]], "Output",
 CellChangeTimes->{{3.699701348882307*^9, 3.699701367544287*^9}, {
   3.6997014362465816`*^9, 3.699701496177745*^9}, {3.699701595157259*^9, 
   3.699701620530158*^9}, 3.699701735766445*^9, 3.699701766145273*^9, 
   3.699701870848236*^9, 3.6999380094845095`*^9, {3.701855619599331*^9, 
   3.701855656372053*^9}}]
}, {2}]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  SuperscriptBox["Topology", 
   RowBox[{"[", 
    DynamicBox[ToBoxes[$CellContext`ref3, StandardForm],
     ImageSizeCache->{6.72, {0., 8.}}], "]"}]], 
  TraditionalForm]]]], "SubSubChapterNC",
 CellChangeTimes->{{3.6993479429129076`*^9, 3.6993479479610124`*^9}, {
  3.6993483884473944`*^9, 3.69934838916292*^9}, {3.699701155932687*^9, 
  3.6997011567752776`*^9}, {3.7018594972932262`*^9, 3.701859503605811*^9}, {
  3.701859589813041*^9, 3.7018595902036715`*^9}, {3.7018596244266453`*^9, 
  3.7018596262234964`*^9}, {3.7018597529865246`*^9, 3.701859760830363*^9}, {
  3.701966865263459*^9, 3.7019668703082533`*^9}}],

Cell["\<\
To better define and describe a network we need to describe and measure its \
properties and topology. To this purpose, a number of properties has been \
defined.\
\>", "Text",
 CellChangeTimes->{{3.699701895450757*^9, 3.6997019592989273`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "Degree ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SubscriptBox["k", "i"], ")"}], TraditionalForm]]]
}], "Titlos",
 CellChangeTimes->{{3.699701961723156*^9, 3.699701963194707*^9}, {
  3.6997019941469965`*^9, 3.6997020079913363`*^9}}],

Cell["\<\
We define degree of a node the number of edges connected to it.\
\>", "Text",
 CellChangeTimes->{{3.6997019663476644`*^9, 3.6997020176680226`*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["k", "i"], "=", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"j", "=", "1"}], "N"], 
     SubscriptBox["a", "ij"]}]}], TraditionalForm]]],
 " (if ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["a", "ij"], ">", "0"}], TraditionalForm]]],
 ")"
}], "Equation",
 CellChangeTimes->{{3.699347593612948*^9, 3.6993476715236025`*^9}, {
  3.7020612690594645`*^9, 3.7020612742639847`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Degree Distribution", "Titlos",
 CellChangeTimes->{{3.6999393837964673`*^9, 3.699939389893506*^9}}],

Cell["\<\
A network\[CloseCurlyQuote]s degree distribution is the distribution that \
gives the probability each node has a certain number of links (degree). It \
has been discovered that most realistic networks differ from a Poisson \
distribution, and instead they exhibit a tail that follows a power law \
distribution.\
\>", "Text",
 CellChangeTimes->{{3.699939391665777*^9, 3.6999394874605455`*^9}, {
  3.699939600163785*^9, 3.69993967653855*^9}, {3.699946214312335*^9, 
  3.6999462208333683`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Neighbors", "Titlos",
 CellChangeTimes->{{3.699702048604109*^9, 3.699702052019519*^9}}],

Cell["\<\
Neighbors of a node are the nodes at the other sides of the edges connecting \
to the node.\
\>", "Text",
 CellChangeTimes->{{3.6997020569544015`*^9, 3.699702094594735*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Path", "Titlos",
 CellChangeTimes->{{3.6997021002996316`*^9, 3.6997021007799172`*^9}}],

Cell[TextData[{
 "As a path within a graph we define a sequence of nodes ",
 Cell[BoxData[
  FormBox[
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["v", "i"], ",", 
     SubscriptBox["v", "2"], ",", "...", ",", 
     SubscriptBox["v", "n"]}], "}"}], TraditionalForm]]],
 ", where adjacent pairs of nodes are connected with an edge. For directed \
graphs, the connection needs to point from the former node to the later."
}], "Text",
 CellChangeTimes->{{3.6997021161388435`*^9, 3.699702204970488*^9}}],

Cell[CellGroupData[{

Cell["Path Length", "Ypotitlos",
 CellChangeTimes->{{3.699702563899233*^9, 3.699702566738448*^9}}],

Cell["\<\
A path\[CloseCurlyQuote]s length is the number of nodes contained in it minus \
one.\
\>", "Text",
 CellChangeTimes->{{3.6997022216901517`*^9, 3.699702235970543*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Characteristic Path Length", "Ypotitlos",
 CellChangeTimes->{{3.6999409196986437`*^9, 3.6999409250362167`*^9}, {
   3.6999410324323483`*^9, 3.6999410352697077`*^9}, 3.69994156793329*^9}],

Cell["\<\
The characteristic path length is defined as the median of the means of the \
shortest path lengths connecting each vertex to all other vertices.\
\>", "Text",
 CellChangeTimes->{{3.6999410369710255`*^9, 3.6999410476179852`*^9}, {
  3.6999410798714237`*^9, 3.6999410979957647`*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"L", "=", 
   RowBox[{
    RowBox[{
     FractionBox["1", "N"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "N"], 
      SubscriptBox["L", "i"]}]}], "=", 
    RowBox[{
     FractionBox["1", "N"], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "N"], 
      FractionBox[
       RowBox[{
        UnderoverscriptBox["\[Sum]", 
         RowBox[{
          RowBox[{"j", "=", "1"}], ",", 
          RowBox[{"i", "\[NotEqual]", "j"}]}], "N"], 
        SubscriptBox["d", "ij"]}], 
       RowBox[{"N", "-", "1"}]]}]}]}]}], TraditionalForm]],
 FormatType->"TraditionalForm"]], "Equation",
 CellChangeTimes->{{3.699941865719286*^9, 3.699941950191531*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cycle", "Ypotitlos",
 CellChangeTimes->{{3.6997025688916855`*^9, 3.699702570714471*^9}}],

Cell["\<\
We call any path that starts and ends on the same node a cycle.\
\>", "Text",
 CellChangeTimes->{{3.6997025722111244`*^9, 3.6997026110659995`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Connectivity", "Titlos",
 CellChangeTimes->{{3.6997022926658883`*^9, 3.6997022954664803`*^9}}],

Cell["\<\
A graph is considered connected if all of its nodes appear on at least one \
path. If there is a node not connected to any path, then the graph is called \
disconnected.\
\>", "Text",
 CellChangeTimes->{{3.699702298089772*^9, 3.6997023151000085`*^9}, {
  3.699702394762099*^9, 3.6997023993542767`*^9}, {3.6997024560580997`*^9, 
  3.6997024795551224`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Distance", "Titlos",
 CellChangeTimes->{{3.699702238682844*^9, 3.69970223972202*^9}}],

Cell["\<\
Distance between two nodes in a graph is defined as the length of the \
shortest path between those two nodes.\
\>", "Text",
 CellChangeTimes->{{3.699702241233955*^9, 3.699702271050542*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Diameter", "Titlos",
 CellChangeTimes->{{3.699702282171414*^9, 3.6997022838429008`*^9}}],

Cell["\<\
We define the diameter of a graph as the maximum distance between any pair of \
its nodes.\
\>", "Text",
 CellChangeTimes->{{3.6997024060511284`*^9, 3.6997024262418957`*^9}}],

Cell["A disconnected path features an infinite diameter.", "Text",
 CellChangeTimes->{{3.699702426971133*^9, 3.6997024493467417`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Regular Network", "Titlos",
 CellChangeTimes->{{3.6997026259296837`*^9, 3.699702634122843*^9}}],

Cell["\<\
A regular network appears when all of its nodes have the same number of \
neighbors.\
\>", "Text",
 CellChangeTimes->{{3.6997026363549166`*^9, 3.6997026759055195`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tree", "Titlos",
 CellChangeTimes->{{3.6997026147386928`*^9, 3.699702615339463*^9}}],

Cell["\<\
A tree is a connected graph that does not contain any cycles among its paths.\
\>", "Text",
 CellChangeTimes->{{3.6997026796504526`*^9, 3.6997026966181307`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Clustering Coefficient", "Titlos",
 CellChangeTimes->{{3.6999397349601865`*^9, 3.699939742163675*^9}}],

Cell[TextData[{
 "The clustering coefficient is a measure of the tendency of nodes in a graph \
to form clusters. It is given as the ration between the number of edges that \
actually exist between ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "i"], TraditionalForm]]],
 " nodes ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    SubscriptBox["E", "i"], ")"}], TraditionalForm]]],
 " and the total number of edges that could appear ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    FractionBox[
     RowBox[{
      SubscriptBox["k", "i"], "(", 
      RowBox[{
       SubscriptBox["k", "i"], "-", "1"}], ")"}], "2"], ")"}], 
   TraditionalForm]]],
 " between those nodes."
}], "Text",
 CellChangeTimes->{{3.69993974717762*^9, 3.699939823763489*^9}, {
  3.6999398569477186`*^9, 3.699939876225924*^9}, {3.6999402652419577`*^9, 
  3.699940268209179*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["C", "i"], "=", 
   FractionBox[
    RowBox[{"2", 
     SubscriptBox["E", "i"]}], 
    RowBox[{
     SubscriptBox["k", "i"], "(", 
     RowBox[{
      SubscriptBox["k", "i"], "-", "1"}], ")"}]]}], 
  TraditionalForm]]]], "Equation",
 CellChangeTimes->{{3.699939829764217*^9, 3.6999398516628265`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Network Density", "Titlos",
 CellChangeTimes->{{3.699940272685497*^9, 3.699940275752488*^9}}],

Cell["\<\
Similar to the clustering coefficient, but on a global scale, the network \
density is defined as the ration between the number of edges appearing in a \
graph and the total number of edges that could appear in the same graph.\
\>", "Text",
 CellChangeTimes->{{3.699940277020817*^9, 3.699940330706559*^9}, {
  3.6999403907336845`*^9, 3.699940403652235*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Assortative Mixing", "Titlos",
 CellChangeTimes->{{3.699941972590446*^9, 3.699941977788227*^9}}],

Cell["\<\
Assortative mixing refers to the correlations between properties of adjacent \
nodes. It can be represented in terms of node degrees.\
\>", "Text",
 CellChangeTimes->{{3.6999420655466876`*^9, 3.699942131182436*^9}, {
  3.6999421690515704`*^9, 3.6999422241483707`*^9}, {3.699942272074752*^9, 
  3.699942274195978*^9}, {3.6999423048183064`*^9, 3.6999423055023365`*^9}}],

Cell[TextData[{
 "Assortativity takes values in the range of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"[", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "1"}], "]"}], TraditionalForm]]],
 ", with 1 meaning that the nodes tend to link with nodes with of similar \
degree. The high assortativity of realistic networks is what creates the \
communities that appear."
}], "Text",
 CellChangeTimes->{{3.699942244353099*^9, 3.6999423438748474`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Complex Networks", "SubChapterNC",
 CellChangeTimes->{
  3.640701274346218*^9, {3.69437819696397*^9, 3.694378207120894*^9}, 
   3.694378248309867*^9, {3.6943789382550793`*^9, 3.6943789386899853`*^9}, {
   3.6993485592963343`*^9, 3.6993485610639615`*^9}, {3.699946117597962*^9, 
   3.699946118112997*^9}, {3.7020615112669325`*^9, 3.7020615119692316`*^9}}],

Cell["\<\
A network is considered complex when in it occur non-trivial topological \
features; ones that do not occur in simple networks but only in graphs \
modelling real systems.\
\>", "Text",
 CellChangeTimes->{{3.699938863229644*^9, 3.6999389499887023`*^9}, {
  3.699939067015363*^9, 3.6999391030639043`*^9}}],

Cell["\<\
Such features are used to measure a network\[CloseCurlyQuote]s complexity, \
and include a heavy tail in the degree distribution, a high clustering \
coefficient, assortativity or lack of it, communities, or an hierarchical \
structure.\
\>", "Text",
 CellChangeTimes->{{3.6999391055551434`*^9, 3.6999391965808973`*^9}, {
  3.702061534445212*^9, 3.7020615364288797`*^9}}],

Cell[CellGroupData[{

Cell["Small World Network", "Titlos",
 CellChangeTimes->{{3.6999404494955597`*^9, 3.6999404543317356`*^9}, {
  3.699940737265623*^9, 3.6999407543491325`*^9}, {3.699941756912097*^9, 
  3.6999417581471696`*^9}}],

Cell["\<\
The idea of the small world network is that in a realistic network, despite \
its huge size, there is a relatively short path between any two nodes. This \
has been made famous by the \[OpenCurlyDoubleQuote]six degrees of separation\
\[CloseCurlyDoubleQuote]; the fact that in the real world any two people are \
only six edges afar, regardless of their location on the world. This property \
appears to characterize most complex networks.\
\>", "Text",
 CellChangeTimes->{{3.6999404675219064`*^9, 3.699940600734008*^9}}],

Cell[TextData[{
 "A measure of \[OpenCurlyQuote]small-world-ness\[CloseCurlyQuote] ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["S", 
    RowBox[{"[", 
     DynamicBox[ToBoxes[$CellContext`ref5, StandardForm],
      ImageSizeCache->{4.4399999999999995`, {0., 5.}}], "]"}]], 
   TraditionalForm]], "Text"],
 " is proposed:"
}], "Text",
 CellChangeTimes->{{3.699940770254877*^9, 3.699940850943118*^9}, {
  3.7018597803185697`*^9, 3.701859790365573*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{"S", "=", 
   FractionBox[
    RowBox[{"C", "/", 
     SubscriptBox["C", "rand"]}], 
    RowBox[{"L", "/", 
     SubscriptBox["L", "rand"]}]]}], TraditionalForm]]]], "Equation",
 CellChangeTimes->{{3.6999408536998777`*^9, 3.699940861313276*^9}}],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox["C", TraditionalForm]]],
 " is the clustering coefficient of the network, ",
 Cell[BoxData[
  FormBox["L", TraditionalForm]]],
 " the characteristic path length of the network, and the index ",
 StyleBox["rand",
  FontSlant->"Italic"],
 " refers to a random network of the same size."
}], "Text",
 CellChangeTimes->{{3.699940864245536*^9, 3.6999409124245405`*^9}, {
  3.699941578167863*^9, 3.699941588003298*^9}, {3.69994166692857*^9, 
  3.6999416978802967`*^9}}],

Cell["\<\
A small world network exhibits a high cluster coefficient and a small path \
length.\
\>", "Text",
 CellChangeTimes->{{3.6999417043493776`*^9, 3.6999417445098653`*^9}, {
  3.7020615743208666`*^9, 3.7020615791353755`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scale-Free Network", "Titlos",
 CellChangeTimes->{{3.6999417502292643`*^9, 3.699941755116827*^9}, {
   3.6999417965635767`*^9, 3.6999417990621433`*^9}, {3.699946137083655*^9, 
   3.6999461375673943`*^9}, 3.6999461726655827`*^9, {3.701882599749667*^9, 
   3.7018826008774705`*^9}}],

Cell["\<\
A scale-free network is one that its degree distribution follows a power law, \
at least asymptotically.\
\>", "Text",
 CellChangeTimes->{{3.69437826254272*^9, 3.6943783201525126`*^9}, {
  3.6943788631204367`*^9, 3.6943788644907455`*^9}, {3.6999417956068726`*^9, 
  3.6999418042759447`*^9}, {3.6999461642676954`*^9, 3.699946229216673*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"P", "(", "k", ")"}], "~", 
   SuperscriptBox["k", 
    RowBox[{"-", "\[Gamma]"}]]}], TraditionalForm]]]], "Equation",
 CellChangeTimes->{{3.6999396861767416`*^9, 3.6999397079252453`*^9}, {
  3.6999462390018725`*^9, 3.6999462390018725`*^9}}],

Cell["\<\
It is considered that this property is derived from the preferential \
attachment of nodes.\
\>", "Text",
 CellChangeTimes->{{3.6999462831516795`*^9, 3.6999463247145634`*^9}}],

Cell["\<\
The most common characteristic of scale-free networks is the appearance of \
\[OpenCurlyDoubleQuote]hubs\[CloseCurlyDoubleQuote], which are nodes with a \
degree much higher than the average degree of the network.\
\>", "Text",
 CellChangeTimes->{{3.699946423905762*^9, 3.699946485889333*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Communities", "Titlos",
 CellChangeTimes->{{3.6999417715864344`*^9, 3.699941777745948*^9}, 
   3.6999428772881403`*^9}],

Cell["\<\
In a network, sets of nodes that are well connected among themselves but \
appear to have limited connections to other nodes in the network are called \
communities.\
\>", "Text",
 CellChangeTimes->{{3.699942880056924*^9, 3.6999429533933845`*^9}}],

Cell["\<\
Loosely, we identify a community as a set of nodes that exhibit more \
connections among themselves than the total of their connections to nodes \
outside of the community.\
\>", "Text",
 CellChangeTimes->{{3.699942880056924*^9, 3.699942958976196*^9}, {
  3.6999431120793424`*^9, 3.6999431392898664`*^9}, {3.699943695485633*^9, 
  3.6999436977018538`*^9}}],

Cell["", "PageBreak",
 PageBreakBelow->True]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Epidemiology", "ChapterNC",
 CellChangeTimes->{
  3.6407012833362303`*^9, {3.699344343481001*^9, 3.699344345750928*^9}}],

Cell[CellGroupData[{

Cell["The SIR Model", "SubChapterNC",
 CellChangeTimes->{
  3.640701274346218*^9, {3.69994928724639*^9, 3.6999492903517485`*^9}}],

Cell["\<\
Epidemiology started with the study of a simplified system, the SIR. This \
model has been augmented by researchers throughout the years to better \
describe epidemic dynamics, but regardless of its simplicity it remains one \
of the best tools to begin with.\
\>", "Text",
 CellChangeTimes->{{3.6999473397981253`*^9, 3.699947340831544*^9}, {
  3.6999488501152415`*^9, 3.699948969059202*^9}, {3.6999490086795654`*^9, 
  3.6999490111108437`*^9}}],

Cell["\<\
The model considers that the population is divided into three groups, the \
Susceptible, the Infected, and the Removed. The infected are the ones already \
carrying the disease, the susceptible are the ones that do not have the \
disease but may contract it, while the removed are the ones that do not have \
the disease and cannot contract it. When adapting the model to a specific \
disease the connections between those groups must be defined, and then, \
through those connections the dynamics of the system can be determined.\
\>", "Text",
 CellChangeTimes->{{3.6999489805028777`*^9, 3.6999491660371046`*^9}}],

Cell[TextData[{
 "The SIR model describes accurately one of the two main kinds of infection: \
the ",
 StyleBox["common source infection",
  FontWeight->"Bold"],
 ". This kind of infection is a random occurrence that belongs to a Poisson ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["distribution", 
    RowBox[{"[", 
     DynamicBox[ToBoxes[$CellContext`ref7, StandardForm],
      ImageSizeCache->{4.4399999999999995`, {0., 5.}}], "]"}]], 
   TraditionalForm]]],
 ". The second kind of infection, the ",
 StyleBox["propagated infection",
  FontWeight->"Bold"],
 ", can be better described with a scale-free ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["network", 
    RowBox[{"[", 
     DynamicBox[ToBoxes[$CellContext`ref7, StandardForm],
      ImageSizeCache->{4.4399999999999995`, {0., 5.}}], "]"}]], 
   TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.7018808158601294`*^9, 3.701880896828532*^9}, {
  3.7018810241316376`*^9, 3.7018810462540293`*^9}, {3.701966943532924*^9, 
  3.7019669480753946`*^9}, {3.70206168145338*^9, 3.7020616835351024`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Graph Theory for Epidemiology", "SubChapterNC",
 CellChangeTimes->{
  3.6407012833362303`*^9, {3.6943775609438086`*^9, 3.694377591207906*^9}, 
   3.694377650394641*^9, {3.6999386917631536`*^9, 3.6999386994608583`*^9}}],

Cell["\<\
The usual method for studying epidemiology in a population is through the \
dynamics described by a set of differential equations (stochastic method). \
This approach, although it shows results, has a major flaw; the assumption \
that each individual has the ability to transmit something (a disease in our \
case) to the same number of individuals within the population. In a realistic \
description of the world this does not hold true, instead each individual can \
transmit only to a limited set of others, who are connected with the \
individual somehow. This effect can be implemented into a model easily \
through the use of graphs; where each individual, or node in the graph, has \
the ability to transmit to only some others, the node\[CloseCurlyQuote]s \
neighbors.\
\>", "Text",
 CellChangeTimes->{{3.69994499790327*^9, 3.699945048161401*^9}, {
  3.6999452201542664`*^9, 3.699945256533635*^9}, {3.69994541134148*^9, 
  3.69994565050146*^9}, {3.699945704780842*^9, 3.699945772019105*^9}, {
  3.699949237097189*^9, 3.699949246749385*^9}}],

Cell["\<\
Furthermore, graph theory becomes a powerful tool, allowing us to avoid \
extensive, time consuming simulations needed when solving such a complex \
dynamic system.\
\>", "Text",
 CellChangeTimes->{{3.6999385050101337`*^9, 3.6999385969306087`*^9}, {
  3.699945775397493*^9, 3.6999457856734076`*^9}, {3.6999458161361203`*^9, 
  3.6999458369329634`*^9}, {3.701880919389003*^9, 3.701881019811288*^9}}],

Cell[TextData[{
 "The power law distribution that describes certain networks, especially the \
scale-free networks, seems to fit the distribution of ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["epidemics", 
    RowBox[{"[", 
     DynamicBox[ToBoxes[$CellContext`ref8, StandardForm],
      ImageSizeCache->{8.879999999999999, {0., 5.}}], "]"}]], 
   TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{
  3.701882242414654*^9, {3.701966960074627*^9, 3.701966966467203*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["The SIR(S) Model Revisited", "SubChapterNC",
 CellChangeTimes->{
  3.6407012833362303`*^9, {3.694375565790825*^9, 3.6943755723589125`*^9}, {
   3.6943764971237383`*^9, 3.694376497624078*^9}, {3.6943766553919477`*^9, 
   3.694376692098757*^9}, {3.6943767420635386`*^9, 3.694376744443711*^9}, {
   3.6943768724438653`*^9, 3.6943768736638308`*^9}, {3.694377499195485*^9, 
   3.694377501660036*^9}, {3.694377911373595*^9, 3.6943779132780848`*^9}, {
   3.6943786208951206`*^9, 3.6943786212836666`*^9}}],

Cell["\<\
When applying graph theory in the study of epidemiology we need to redefine \
the SIR model.\
\>", "Text",
 CellChangeTimes->{{3.699953344687491*^9, 3.699953374941517*^9}, 
   3.6999536393449616`*^9}],

Cell[TextData[{
 "For a population ",
 Cell[BoxData[
  FormBox["N", TraditionalForm]]],
 ", consider that an infected individual ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]]],
 " makes local infectious contacts with ",
 Cell[BoxData[
  FormBox["j", TraditionalForm]]],
 " individual at a rate ",
 Cell[BoxData[
  FormBox[
   SubsuperscriptBox["\[Lambda]", "ij", "L"], TraditionalForm]]],
 " and global contacts at a rate of ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Lambda]", "G"], TraditionalForm]]],
 " (individual to individual global infection rate ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["\[Lambda]", "G"], "/", "N"}], TraditionalForm]]],
 "). If a contacted individual is still susceptible, then it becomes infected \
and is immediately able to infect others. If a contacted individual is \
already infected or belongs to the removed group, then nothing happens. An \
infected individual can either change to a removed or a susceptible after a \
specific time."
}], "Text",
 CellChangeTimes->{{3.6999536408441663`*^9, 3.6999536762808943`*^9}, {
  3.699953773190804*^9, 3.699953822404169*^9}, {3.6999539077907443`*^9, 
  3.6999539183647985`*^9}, {3.699953956458123*^9, 3.699954100716992*^9}, {
  3.7019670092752857`*^9, 3.7019670222094917`*^9}, {3.701967058489724*^9, 
  3.7019670919217997`*^9}}],

Cell[CellGroupData[{

Cell["Small World Network", "Titlos",
 CellChangeTimes->{{3.7018822773005104`*^9, 3.7018822826368313`*^9}, {
  3.701887702161559*^9, 3.70188770233049*^9}, {3.7019618742759466`*^9, 
  3.701961875883834*^9}}],

Cell[TextData[{
 "The small world network can be described as a network of unsocial \
inhabitants occupying a village-like location, where contact is limited to ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["neighbors", 
    RowBox[{"[", 
     DynamicBox[ToBoxes[$CellContext`ref7, StandardForm],
      ImageSizeCache->{4.4399999999999995`, {0., 5.}}], "]"}]], 
   TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.701882292244536*^9, 3.7018823692459283`*^9}, {
  3.702061756684623*^9, 3.702061760114644*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Great Circle Network", "Titlos",
 CellChangeTimes->{{3.694376875153285*^9, 3.6943769055767546`*^9}, {
   3.6943769952243786`*^9, 3.6943769952283816`*^9}, {3.7018876866174946`*^9, 
   3.701887699762205*^9}, 3.7019618906855044`*^9}],

Cell["\<\
This network considers that individuals do not belong to local clumps, or \
households, but they are instead distributed on an one-dimensional space, \
forming connections to their closest (one or more) neighbors.\
\>", "Text",
 CellChangeTimes->{{3.701887694884673*^9, 3.7018878010668354`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Scale-Free Network", "Titlos",
 CellChangeTimes->{{3.7018822545169325`*^9, 3.701882259997116*^9}, {
   3.7018877053138733`*^9, 3.7018877054606543`*^9}, 3.701961892605889*^9}],

Cell[TextData[{
 "As mentioned before, a scale-free network is a network that contains hubs \
with connectivity distribution based on the power-law distribution. Most of \
the nodes have only a few connections, but a few nodes appear to have many ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["connections", 
    RowBox[{"[", 
     DynamicBox[ToBoxes[$CellContext`ref7, StandardForm],
      ImageSizeCache->{4.4399999999999995`, {0., 5.}}], "]"}]], 
   TraditionalForm]]],
 ". The distribution ",
 Cell[BoxData[
  FormBox[
   RowBox[{"P", "(", "k", ")"}], TraditionalForm]]],
 " of such a model can be written ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["as", 
    RowBox[{"[", 
     DynamicBox[ToBoxes[$CellContext`ref7, StandardForm],
      ImageSizeCache->{4.4399999999999995`, {0., 5.}}], "]"}]], 
   TraditionalForm]]],
 ":"
}], "Text",
 CellChangeTimes->{{3.694376875153285*^9, 3.6943769055767546`*^9}, {
  3.6943769952243786`*^9, 3.694377000348388*^9}, {3.6943770655703278`*^9, 
  3.6943770731588373`*^9}, {3.694378326677305*^9, 3.6943783291298895`*^9}, {
  3.694378807379368*^9, 3.6943788254859753`*^9}, {3.701883000557458*^9, 
  3.701883121233613*^9}, {3.701883404502616*^9, 3.7018834099277973`*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"P", "(", "k", ")"}], "=", 
    RowBox[{"{", GridBox[{
       {
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{"k", "-", "1"}], 
           RowBox[{"k", "+", "2"}]], 
          RowBox[{"P", "(", 
           RowBox[{"k", "-", "1"}], ")"}]}], ","}], 
        RowBox[{"k", "\[GreaterEqual]", 
         RowBox[{"m", "+", "1"}]}]},
       {
        RowBox[{
         FractionBox["2", 
          RowBox[{"m", "+", "2"}]], ","}], 
        RowBox[{"k", "=", "m"}]}
      }]}]}], TraditionalForm]]],
 " "
}], "Equation",
 CellChangeTimes->{{3.701883129677867*^9, 3.7018831897988453`*^9}}],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]]],
 " is the connectivity and ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]]],
 " is the connection degree of new and old nodes."
}], "Text",
 CellChangeTimes->{{3.7018832586221952`*^9, 3.701883290830125*^9}, {
  3.7018833735594287`*^9, 3.7018833886783876`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["SHEM (Spatial Hierarchical Epidemic Model)", "Titlos",
 CellChangeTimes->{{3.701961902716051*^9, 3.7019619163008194`*^9}}],

Cell["\<\
One quite complex network that retains some simplicity for calculations is \
the SHEM model. This model exhibits many of the previous models\
\[CloseCurlyQuote] properties, i.e. spatial features, power law distribution \
of connectivity, and also possesses a community structure with transmission \
rates between two individuals depending on the communities to which they both \
belong.\
\>", "Text",
 CellChangeTimes->{{3.7019619284926243`*^9, 3.7019620470772395`*^9}, {
  3.7019620847331915`*^9, 3.701962124621228*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mixing Levels", "SubChapterNC",
 CellChangeTimes->{
  3.640701274346218*^9, {3.6943767177002225`*^9, 3.694376739130975*^9}, {
   3.6943773812096424`*^9, 3.6943773817943735`*^9}, 3.69437750539466*^9}],

Cell[TextData[{
 "Mixing levels in epidemiology is introduced to better describe \
heterogeneity in a ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["population", 
    RowBox[{"[", 
     DynamicBox[ToBoxes[$CellContext`ref9, StandardForm],
      ImageSizeCache->{6., {0., 6.}}], "]"}]], TraditionalForm]]],
 ". The simplest model with mixing assumes that an individual has only a \
global probability ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "G"], TraditionalForm]]],
 " of infecting each other individual in the population and a local \
probability ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "L"], TraditionalForm]]],
 " of infecting its neighbors. It is usually ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["p", "L"], ">>", 
    SubscriptBox["p", "G"]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.7018847019120593`*^9, 3.7018849424809947`*^9}}],

Cell[TextData[{
 "This type of mixing can describe adequately human epidemics, where close \
socialization, in ones home, school, or work, introduces a greater risk of \
infection than from a random stranger that one comes in contact ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["casually", 
    RowBox[{"[", 
     DynamicBox[ToBoxes[$CellContext`ref9, StandardForm],
      ImageSizeCache->{6., {0., 6.}}], "]"}]], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{{3.7018849432002907`*^9, 3.70188501801889*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Outbreaks", "SubChapterNC",
 CellChangeTimes->{
  3.640701274346218*^9, {3.6943770995036316`*^9, 3.6943771107866793`*^9}, {
   3.694377223967145*^9, 3.694377232375911*^9}, {3.6943784773157997`*^9, 
   3.6943784976410246`*^9}, 3.701961527403884*^9}],

Cell[TextData[{
 "When we introduce time dependency on the model we can observe the \
appearance of non-periodic ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["outbreaks", 
    RowBox[{"[", 
     DynamicBox[ToBoxes[$CellContext`ref11, StandardForm],
      ImageSizeCache->{12., {0., 6.}}], "]"}]], TraditionalForm]]],
 ". This approach also requires that the nodes of the network are not static, \
that they actually change their connections, both in number and in distance, \
over time. Another requirement to observe both periodic and non-periodic \
outbreaks is the existence of persistent epidemic seeds. Thus, to describe \
such effects, the SIRS model is better used."
}], "Text",
 CellChangeTimes->{{3.701955283631218*^9, 3.7019553021381426`*^9}, {
  3.701955388128411*^9, 3.701955438199695*^9}, {3.7019555055832376`*^9, 
  3.7019556404089756`*^9}, {3.7019556941762333`*^9, 3.701955755823638*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Model Description", "SubChapterNC",
 CellChangeTimes->{{3.6943770361463604`*^9, 3.6943770398271894`*^9}}],

Cell[CellGroupData[{

Cell["Sets and Parameters", "Titlos",
 CellChangeTimes->{{3.6943770137844296`*^9, 3.6943770152336564`*^9}, {
  3.701882990517974*^9, 3.701882993678156*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["N",
  FontWeight->"Bold"],
 ": total population"
}], "Item",
 CellChangeTimes->{{3.694377017046649*^9, 3.69437701746198*^9}, {
  3.694377139033575*^9, 3.6943771671245327`*^9}, {3.6993438606166916`*^9, 
  3.699343862135811*^9}, {3.701882627205744*^9, 3.7018826439817333`*^9}, {
  3.701888632620384*^9, 3.701888638002282*^9}}],

Cell[TextData[{
 StyleBox["R",
  FontWeight->"Bold"],
 ": Threshold parameter"
}], "Item",
 CellChangeTimes->{{3.694377017046649*^9, 3.69437701746198*^9}, {
  3.694377139033575*^9, 3.6943771929904747`*^9}, {3.699952910861918*^9, 
  3.699952910861918*^9}, {3.6999543811590395`*^9, 3.69995438212584*^9}, {
  3.69995441553459*^9, 3.6999544183646555`*^9}}],

Cell[TextData[{
 "In a two-level mixing epidemics model, a large outbreak will be possible if \
",
 Cell[BoxData[
  FormBox[
   RowBox[{"R", ">", "1"}], TraditionalForm]]],
 ", where ",
 Cell[BoxData[
  FormBox[
   RowBox[{"R", "=", 
    RowBox[{
     SubscriptBox["R", "G"], "\[CenterDot]", "\[Mu]"}]}], TraditionalForm]]],
 ", with ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["R", "G"], TraditionalForm]]],
 " the reproductive ration for global contacts and \[Mu] the mean size of \
outbreaks utilizing only local ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["contacts", 
    RowBox[{"[", 
     DynamicBox[ToBoxes[$CellContext`ref9, StandardForm],
      ImageSizeCache->{6., {0., 6.}}], "]"}]], TraditionalForm]]],
 "."
}], "ItemParagraph",
 CellChangeTimes->{{3.7018861864181376`*^9, 3.7018862986981153`*^9}, {
  3.701886330942498*^9, 3.7018863332090807`*^9}, {3.70188840396286*^9, 
  3.701888477047681*^9}, {3.7020609683014717`*^9, 3.702060977483145*^9}}],

Cell[TextData[{
 StyleBox["p",
  FontWeight->"Bold"],
 ": infection probability"
}], "Item",
 CellChangeTimes->{{3.694377017046649*^9, 3.69437701746198*^9}, {
  3.694377139033575*^9, 3.694377217417454*^9}, {3.694377417284683*^9, 
  3.694377454851424*^9}, {3.7018851468168736`*^9, 3.7018851534100437`*^9}}],

Cell["\<\
The global infection probability is assumed to be equal for all individuals, \
and related to the size of the population. This holds true in most cases, \
although it will need to be adjusted if vaccination is introduced to the \
population. In this study, it is considered that there will be no vaccination \
strategy though.\
\>", "ItemParagraph",
 CellChangeTimes->{{3.7018851553442545`*^9, 3.7018852639765058`*^9}}],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   SubscriptBox["p", "G"], 
   StyleBox["~",
    FontWeight->"Plain"], 
   StyleBox[
    SuperscriptBox[
     StyleBox["N",
      FontWeight->"Plain"], 
     RowBox[{"-", "1"}]],
    FontWeight->"Plain"]}], TraditionalForm]],
 FontWeight->"Bold"]], "Subitem",
 CellChangeTimes->{{3.694377017046649*^9, 3.69437701746198*^9}, {
  3.694377139033575*^9, 3.694377164891323*^9}, {3.694377464796206*^9, 
  3.694377475479718*^9}, {3.694378031701157*^9, 3.694378036309272*^9}, {
  3.6993438723112936`*^9, 3.699343889685897*^9}, {3.701888491215391*^9, 
  3.7018884966452856`*^9}, {3.7020609907956586`*^9, 3.70206102973726*^9}, {
  3.702061810686514*^9, 3.702061820837797*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  SubscriptBox["p", "L"], TraditionalForm]],
 FontWeight->"Bold"]], "Subitem",
 CellChangeTimes->{{3.694377017046649*^9, 3.69437701746198*^9}, {
  3.694377139033575*^9, 3.694377164891323*^9}, {3.694377464796206*^9, 
  3.694377475479718*^9}, {3.694378031701157*^9, 3.694378036309272*^9}, {
  3.6993438723112936`*^9, 3.699343889685897*^9}, {3.701888491215391*^9, 
  3.7018884981139555`*^9}, {3.702060996257325*^9, 3.7020609982939763`*^9}, {
  3.7020618247382936`*^9, 3.7020618254690866`*^9}}]
}, Open  ]],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", "i"], TraditionalForm]],
  FontWeight->"Bold"],
 ": The length of time an individual is infected and thus is infectious, is \
considered to follow a Poisson distribution."
}], "Item",
 CellChangeTimes->{{3.694377017046649*^9, 3.69437701746198*^9}, {
  3.694377139033575*^9, 3.6943771929904747`*^9}, {3.6999529113323393`*^9, 
  3.6999529204487314`*^9}, {3.6999529852141542`*^9, 3.6999529896464186`*^9}, {
  3.69995313715907*^9, 3.699953146659025*^9}, {3.6999544253633*^9, 
  3.699954429678502*^9}, {3.701889298698966*^9, 3.7018893423706813`*^9}, {
  3.7020609872805786`*^9, 3.70206098855877*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Creating a Realistic Network", "ChapterNC",
 CellChangeTimes->{
  3.640701274346218*^9, {3.6943776929571333`*^9, 3.694377695994709*^9}, 
   3.699343905864953*^9, {3.6999387076295385`*^9, 3.6999387137787495`*^9}}],

Cell[CellGroupData[{

Cell["Models", "SubChapterNC",
 CellChangeTimes->{{3.6999442371618924`*^9, 3.699944243715456*^9}}],

Cell["\<\
During the years many models have been proposed and were used to create \
random, realistic networks. Examples of such models are the following:\
\>", "Text",
 CellChangeTimes->{{3.699944371736373*^9, 3.699944376734493*^9}, {
  3.6999444278923435`*^9, 3.6999444304549675`*^9}, {3.6999444830375023`*^9, 
  3.699944534806221*^9}, {3.7019626229966908`*^9, 3.701962625835516*^9}}],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Erdos-Renyi (ER) random network model",
 FontWeight->"Bold"]], "Titlos",
 CellChangeTimes->{{3.6999445382455325`*^9, 3.6999445504653635`*^9}}],

Cell[TextData[{
 "To construct such a network generate ",
 Cell[BoxData[
  FormBox["N", TraditionalForm]]],
 " nodes in space and then connect any two nodes with a predetermined \
probability ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]]],
 "."
}], "ItemParagraph",
 CellChangeTimes->{{3.6999445628726187`*^9, 3.699944604990455*^9}, {
  3.6999447244428425`*^9, 3.699944729566191*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NErdosRenyi", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pErdosRenyi", "=", "0.05"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aErdosRenyi", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"0", ",", 
     RowBox[{"{", "NErdosRenyi", "}"}], ",", 
     RowBox[{"{", "NErdosRenyi", "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i1", "=", "1"}], ",", 
   RowBox[{"i1", "\[LessEqual]", "NErdosRenyi"}], ",", 
   RowBox[{"i1", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i2", "=", 
      RowBox[{"i1", "+", "1"}]}], ",", 
     RowBox[{"i2", "\[LessEqual]", 
      RowBox[{"NErdosRenyi", "-", "1"}]}], ",", 
     RowBox[{"i2", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"RandomReal", "[", "]"}], "\[LessEqual]", "pErdosRenyi"}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"aErdosRenyi", "[", 
          RowBox[{"[", 
           RowBox[{"i1", ",", "i2"}], "]"}], "]"}], "=", "1"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"aErdosRenyi", "[", 
          RowBox[{"[", 
           RowBox[{"i2", ",", "i1"}], "]"}], "]"}], "=", "1"}], ";"}]}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Column", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Erdos-Renyi Network\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"Bold", ",", "Large"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"StringForm", "[", 
      RowBox[{
      "\"\<Population: ``, Link chance: ``\>\"", ",", "NErdosRenyi", ",", 
       "pErdosRenyi"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"graphErdosRenyi", "=", 
      RowBox[{"AdjacencyGraph", "[", 
       RowBox[{"aErdosRenyi", ",", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Degree Distribution\>\"", ",", "Italic"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Histogram", "[", 
      RowBox[{
       RowBox[{"VertexDegree", "[", "graphErdosRenyi", "]"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.702061900126587*^9, 3.702062483587691*^9}, {
  3.702069297472801*^9, 3.702069304479006*^9}, {3.7020703229368362`*^9, 
  3.702070325663111*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Erdos-Renyi Network\"\>",
      StripOnInput->False,
      FontSize->Large,
      FontWeight->Bold]},
    {
     InterpretationBox["\<\"Population: \\!\\(\\*RowBox[{\\\"100\\\"}]\\), \
Link chance: \\!\\(\\*RowBox[{\\\"0.05`\\\"}]\\)\"\>",
      StringForm["Population: ``, Link chance: ``", 100, 0.05],
      Editable->False]},
    {
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
           19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
           36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52,
           53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69,
           70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86,
           87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100}, {Null, 
           SparseArray[Automatic, {100, 100}, 0, {1, {CompressedData["
1:eJwtz78rhAEAgOFPuatLnRhIruNKWaSkbmBBbnIp36S76wY/B+FSBrJcXa6u
rq7OIKUMBpPNZjMaDAZlkMGiLBYG0j3l3nr+gDe1shvudARBsB7810mUGHF6
6WOAQYYYZpQJ0kwzwzxZlgjJUaDIGluU2OOQMsfUqNPklHMuuOSKa2645Y77
tgceeeKZF155450PPvnimx9++SNiOkqMLuJ000M/CZKkGGGMcSZJM8Usc2RY
YJGQZfIUWWWDTbYpsc8BR5SpUKVGgxPO2loz5Czq
              "], CompressedData["
1:eJwNzglymgAAAEDwjOUSSiIEUEDlGq+IUBtqTDBKUCqKYhGPCDyg/+lrm5l9
wArp3yDNAQDwDwSAL4DSeZ6aM6rVg+u/3m+4NV82FWszOZ7IIUZqXg1Vf+9P
16SA1qhmW+76h5okj35CcPVeqqz3hwhl9rci11Q7b/5BGcy9bXBXobTBk52i
C2b2DUYEcZeHSYatG/KT+RrVneoDNRxb04DiVcNLMpzvO9sC9Sg6m5jlWgPL
q0nvn1mtrtlxCcbzvGrCk6WHoMJwfYER2nLPF7BEvCyjDMLZluYFFVJUdWvi
gnh4hn88B3l3F3LuliB5h6TvGOmqmdMoQT5OFDuebXN0S191GcNZIWC3WGJ4
WbML5bamXEFGp/EFKVpOlOUejEtSEIpEev/mP3KNwdiOL6OdrPX6q2JbMcdu
WiFYvq2uIUzyYHyxOcalhk9wfeM7o3a//r0PCKt2esfzBcbwBKMV3U7KftgQ
Hf9Uhkax3AkleeaE0PBFCG6F6ifE6rM/ETlfZayg2EH6H+5CT2A=
              "]}, Pattern}]}, {ImageSize -> Medium}]]}, 
        TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJw1lHs41IkexmeMMRdz+c2YZjDL0lgpcmvXIZf5WqZWJKW1bUWUnE6xMhtt
utJKVBZRpKU2LYs0a2vlhN/XSio1Z5+nThebS9aGM9jHGDQuM8d5nj1/vM/7
x/vf+3ze135n8qbdJhQKJX5R//PcMYwZ/04AePPVOP/JDKmqo3imHRqT7/ty
f2d+HBdXh+Wo5TeoIObV8DcqzPFfFP+KzDEx7FfbQHamOTYMa9S7sthwpd52
RUvTMCmlRhZYeAvgnkS92b1pgqz32fxe5zABra4JPVU8KkbU1Itq35pCX/nT
zuE1fHxsVdGaiSwQr1KdVirMkLkzKm2vSgDzLQEya70IQxLLOZe/JYCS+EAd
WcvD36Inl9PChfAo1E3a8cwUg1+Ef5fD50DF+qWjJ5MFuDNG4ekRKQLjpwbe
8yEWumfOpSXZEPA8YPZ0aAsL/ev3WM05iOC45HFZ1m0enqo/sTnpFAHeZmCx
PENHSpMqL9b9QodB/+CYSzM6UqBbpjXPsoSvpEzmfiMDr/7EsF0ZRIPSp3db
J/bS8Yl2ks30sISGtIn+wC4q1m8J5H9ooAGZ/rJx3ppAqyGP+W37CLBURRw8
vpTAwq6fbfT+bBj1EVDfsJmYXyjQjAzMyrNzjaVtISw0ayz44kC7AJKuhQfG
hlJR8ZqSWCnlQs7Rq++fKGdhSvDU3jdaMyhy5CxcOELHdKhyafiTDreMmXeX
1U2Q8We6laxMIXwgSFeUOTPxC19bny2XCXA66BmnPj9Kem9QdPOfmYJp7R+N
6o0G0qQ5s0HqaQFr1yobK65x8Vb7A+OLYR5odTPDhy0ZmFH6+d/dT1oAsKQ7
THLekQ5b2H3qcioMbJ697jJGx5B81YSNFwERygTJm3Y96ZfacrbsIR/e3mzW
bPHkInt8oDDYhwnK9M6Und+aYW+HBx3GuWC5Lb3VapuBzJjtf2n/jgMp2jZv
xUtTND3utM66gwGWlva/LR0wwUeEu41vHQH+D875zK+1RnvxrOP0Kg5EOK62
PbZbS1rNbBpZyZeA6zBhKztDRYFt7nxULw3eG+giL0yz8E/J9bDO53PyojWp
lKR+LTn4/rvJ1wUm8HVZ2uCXU3qyMrTg+j3hpFycWpaftMMM354PT+gL5EBC
ySf8H2MI7NVw357fToM9p7fn3epmYExPZl5MGB90EbVug81CtEtONylmUKHX
anvB3EZT/LXNdcM/ZdNyy8bpTWUWTKTZaDp8z0tBrQk72ZRqIEVVq2sKo01h
QvLqkIM9DaE45PrBk+aQbV18YUWyGEMCPjJv2ioGPxf6ZEDWNOmo+767/QNz
+DA2qN2rz0BKvldccoyRQtHPMVz/Eh7KxNcOW3O5EBYZta/ATU8m3P5k++9V
Auh3WhXwDw4TewtjV/7nIw7McINMXDUmqErqkJy73yvfy1jPC91ljj9E1/rV
MZYAM7ex23njIFlieic1o5QFhyoWQsPu0zDE/6HbxUsG+XPRKjvDOg5OHPfr
vSGUQLAVpKQ2EjjkJ//F6xwNnHjN6Vlew2Rl6w6Vq1ICqlfelOmjWlK2MKIl
ctiQZz4UfSR2nvQc/Lir5Ws2ZFcbWHlxS5BdPJGiuUYB1Z3Mh2lTVMzp+duV
FwE8sPN4tfLj4hEyP2nhQfE6vfxO0OqAuidUrBT8gRXhbODOjIzEMKlouC86
HK0XgtOKM7cb7ljgeLmyh8smIPnYNoNLHgOPKC/ZxcUv8hu6puRE+BR5detD
ZdGcEP7qgXS7+KKmc59RPjo2Zb9hdIosla3/RlRpAfXxqt0lLgzsYy5JW1a/
yC/11993zQtQmBs7YftICI91mnPKbALrOP2T9ylMcAws+dT1iZGkOecGy54K
4cAy9lnHb6h41umzBJ4ZBeL3RLr9QLXA6CFq2+4dDFB4rztVXcRE14zIuOAW
PlR32XSZXJkio3RrNMvZAmj+Svd0NNxI5h1oivIAAdQHavMdd7Fxxu7usznv
xX20Zt/zLNGTx36sfWNhxoCjp8dktYkMdHB7fUu/RwCPEzkybj6BYdaqLGmq
GPhtvRUdVVz8/JmzqFq6+FexPcd87QgMIAv/XfCIDmeb/LfeMHLRQbFQbeNF
W8w7cpx9DeTN+Wm3y0E8YAt9tO6udKz5i5//7/G/pKnZNg==
           "], {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
             {Arrowheads[0.], ArrowBox[{1, 40}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{1, 44}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{1, 58}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{1, 63}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{2, 54}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{2, 67}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{3, 24}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{3, 36}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{3, 46}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{4, 12}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{4, 30}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{4, 60}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{4, 68}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{4, 96}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{5, 17}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{5, 59}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{5, 69}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{5, 74}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{6, 35}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{6, 40}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{6, 59}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{6, 80}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{7, 61}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{7, 89}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{7, 91}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{8, 20}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{8, 50}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{9, 15}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{9, 20}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{9, 42}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{9, 76}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{10, 23}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{11, 14}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{11, 41}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{11, 77}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{11, 84}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{11, 91}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{11, 94}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{11, 97}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{12, 14}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{12, 23}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{12, 24}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{12, 35}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{12, 37}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{12, 39}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{12, 45}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{12, 79}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{12, 86}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{13, 23}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{13, 38}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{13, 39}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{13, 52}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{13, 57}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{14, 16}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{14, 21}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{14, 38}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{15, 78}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{15, 84}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{15, 86}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{15, 88}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{16, 27}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{16, 84}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{16, 96}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{17, 29}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{17, 35}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{17, 41}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{17, 44}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{17, 65}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{17, 79}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{17, 86}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{18, 40}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{18, 48}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{18, 69}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{18, 76}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{18, 81}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{19, 82}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{20, 24}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{20, 42}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{20, 48}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{20, 49}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{20, 66}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{20, 98}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{21, 70}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{22, 27}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{22, 67}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{23, 33}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{23, 34}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{23, 83}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{24, 27}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{24, 28}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{24, 30}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{24, 53}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{25, 39}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{25, 49}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{25, 54}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{25, 64}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{25, 88}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{26, 30}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{26, 71}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{27, 50}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{27, 56}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{27, 59}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{27, 63}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{27, 82}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{28, 32}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{28, 41}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{28, 53}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{28, 76}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{28, 97}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{28, 99}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{29, 32}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{29, 47}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{29, 71}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{29, 81}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{30, 34}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{31, 71}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{31, 80}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{31, 90}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{32, 36}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{32, 48}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{32, 59}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{32, 76}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{33, 38}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{33, 68}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{33, 95}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{33, 99}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{34, 42}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{34, 66}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{34, 90}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{36, 41}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{36, 54}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{37, 61}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{37, 74}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{37, 76}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{38, 50}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{38, 78}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{38, 93}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{39, 59}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{39, 73}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{39, 92}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{39, 93}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{40, 62}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{40, 74}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{40, 88}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{40, 99}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{41, 42}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{41, 76}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{41, 82}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{42, 51}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{42, 59}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{42, 61}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{42, 73}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{44, 85}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{44, 92}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{45, 55}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{45, 58}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{45, 82}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{46, 73}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{46, 83}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{46, 85}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{47, 73}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{47, 81}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{48, 71}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{50, 94}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{51, 54}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{51, 63}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{51, 88}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{51, 97}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{52, 72}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{52, 91}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{53, 56}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{53, 67}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{53, 81}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{54, 75}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{56, 71}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{56, 75}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{59, 66}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{62, 94}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{65, 70}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{66, 71}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{66, 88}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{66, 99}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{67, 93}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{67, 97}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{69, 98}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{70, 79}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{71, 90}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{71, 93}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{72, 83}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{73, 75}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{75, 98}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{76, 78}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{79, 80}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{79, 89}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{79, 90}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{82, 95}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{82, 99}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{85, 89}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{85, 92}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{85, 93}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{87, 97}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{88, 97}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{90, 91}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{95, 96}, 0.050561401014166896`]}, 
             {Arrowheads[0.], ArrowBox[{98, 99}, 0.050561401014166896`]}}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.050561401014166896], 
             DiskBox[2, 0.050561401014166896], 
             DiskBox[3, 0.050561401014166896], 
             DiskBox[4, 0.050561401014166896], 
             DiskBox[5, 0.050561401014166896], 
             DiskBox[6, 0.050561401014166896], 
             DiskBox[7, 0.050561401014166896], 
             DiskBox[8, 0.050561401014166896], 
             DiskBox[9, 0.050561401014166896], 
             DiskBox[10, 0.050561401014166896], 
             DiskBox[11, 0.050561401014166896], 
             DiskBox[12, 0.050561401014166896], 
             DiskBox[13, 0.050561401014166896], 
             DiskBox[14, 0.050561401014166896], 
             DiskBox[15, 0.050561401014166896], 
             DiskBox[16, 0.050561401014166896], 
             DiskBox[17, 0.050561401014166896], 
             DiskBox[18, 0.050561401014166896], 
             DiskBox[19, 0.050561401014166896], 
             DiskBox[20, 0.050561401014166896], 
             DiskBox[21, 0.050561401014166896], 
             DiskBox[22, 0.050561401014166896], 
             DiskBox[23, 0.050561401014166896], 
             DiskBox[24, 0.050561401014166896], 
             DiskBox[25, 0.050561401014166896], 
             DiskBox[26, 0.050561401014166896], 
             DiskBox[27, 0.050561401014166896], 
             DiskBox[28, 0.050561401014166896], 
             DiskBox[29, 0.050561401014166896], 
             DiskBox[30, 0.050561401014166896], 
             DiskBox[31, 0.050561401014166896], 
             DiskBox[32, 0.050561401014166896], 
             DiskBox[33, 0.050561401014166896], 
             DiskBox[34, 0.050561401014166896], 
             DiskBox[35, 0.050561401014166896], 
             DiskBox[36, 0.050561401014166896], 
             DiskBox[37, 0.050561401014166896], 
             DiskBox[38, 0.050561401014166896], 
             DiskBox[39, 0.050561401014166896], 
             DiskBox[40, 0.050561401014166896], 
             DiskBox[41, 0.050561401014166896], 
             DiskBox[42, 0.050561401014166896], 
             DiskBox[43, 0.050561401014166896], 
             DiskBox[44, 0.050561401014166896], 
             DiskBox[45, 0.050561401014166896], 
             DiskBox[46, 0.050561401014166896], 
             DiskBox[47, 0.050561401014166896], 
             DiskBox[48, 0.050561401014166896], 
             DiskBox[49, 0.050561401014166896], 
             DiskBox[50, 0.050561401014166896], 
             DiskBox[51, 0.050561401014166896], 
             DiskBox[52, 0.050561401014166896], 
             DiskBox[53, 0.050561401014166896], 
             DiskBox[54, 0.050561401014166896], 
             DiskBox[55, 0.050561401014166896], 
             DiskBox[56, 0.050561401014166896], 
             DiskBox[57, 0.050561401014166896], 
             DiskBox[58, 0.050561401014166896], 
             DiskBox[59, 0.050561401014166896], 
             DiskBox[60, 0.050561401014166896], 
             DiskBox[61, 0.050561401014166896], 
             DiskBox[62, 0.050561401014166896], 
             DiskBox[63, 0.050561401014166896], 
             DiskBox[64, 0.050561401014166896], 
             DiskBox[65, 0.050561401014166896], 
             DiskBox[66, 0.050561401014166896], 
             DiskBox[67, 0.050561401014166896], 
             DiskBox[68, 0.050561401014166896], 
             DiskBox[69, 0.050561401014166896], 
             DiskBox[70, 0.050561401014166896], 
             DiskBox[71, 0.050561401014166896], 
             DiskBox[72, 0.050561401014166896], 
             DiskBox[73, 0.050561401014166896], 
             DiskBox[74, 0.050561401014166896], 
             DiskBox[75, 0.050561401014166896], 
             DiskBox[76, 0.050561401014166896], 
             DiskBox[77, 0.050561401014166896], 
             DiskBox[78, 0.050561401014166896], 
             DiskBox[79, 0.050561401014166896], 
             DiskBox[80, 0.050561401014166896], 
             DiskBox[81, 0.050561401014166896], 
             DiskBox[82, 0.050561401014166896], 
             DiskBox[83, 0.050561401014166896], 
             DiskBox[84, 0.050561401014166896], 
             DiskBox[85, 0.050561401014166896], 
             DiskBox[86, 0.050561401014166896], 
             DiskBox[87, 0.050561401014166896], 
             DiskBox[88, 0.050561401014166896], 
             DiskBox[89, 0.050561401014166896], 
             DiskBox[90, 0.050561401014166896], 
             DiskBox[91, 0.050561401014166896], 
             DiskBox[92, 0.050561401014166896], 
             DiskBox[93, 0.050561401014166896], 
             DiskBox[94, 0.050561401014166896], 
             DiskBox[95, 0.050561401014166896], 
             DiskBox[96, 0.050561401014166896], 
             DiskBox[97, 0.050561401014166896], 
             DiskBox[98, 0.050561401014166896], 
             DiskBox[99, 0.050561401014166896], 
             DiskBox[100, 0.050561401014166896]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None,
      ImageSize->Medium]},
    {
     StyleBox["\<\"Degree Distribution\"\>",
      StripOnInput->False,
      FontSlant->Italic]},
    {
     GraphicsBox[{
       {RGBColor[0.92, 0.488, 0.2432], EdgeForm[{Opacity[0.644], Thickness[
        Small]}], {}, 
        {RGBColor[0.92, 0.488, 0.2432], EdgeForm[{Opacity[0.644], Thickness[
         Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {2., 10}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{14.878799999999995`, 55.06920000000001}, {
              28.339796542448916`, 70.46000000000002}}],
            StatusArea[#, 10]& ,
            TagBoxNote->"10"],
           StyleBox["10", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[10, {FontFamily -> "Times"}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{2., 0}, {4., 32}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{54.709199999999996`, 
              94.89960000000002}, {-63.53265106416353, 70.46000000000001}}],
            StatusArea[#, 32]& ,
            TagBoxNote->"32"],
           StyleBox["32", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[32, {FontFamily -> "Times"}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{4., 0}, {6., 35}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{94.53960000000001, 
              134.73000000000002`}, {-76.06071210142885, 70.46000000000002}}],
            StatusArea[#, 35]& ,
            TagBoxNote->"35"],
           StyleBox["35", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[35, {FontFamily -> "Times"}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{6., 0}, {8., 17}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{134.37, 
              174.56040000000002`}, {-0.8923458778368456, 70.46000000000002}}],
            StatusArea[#, 17]& ,
            TagBoxNote->"17"],
           StyleBox["17", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[17, {FontFamily -> "Times"}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{8., 0}, {10., 5}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{174.2004, 214.3908}, {49.219898271224466`, 
              70.46000000000002}}],
            StatusArea[#, 5]& ,
            TagBoxNote->"5"],
           StyleBox["5", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[5, {FontFamily -> "Times"}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{10., 0}, {12., 1}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{214.0308, 254.2212}, {65.92397965424492, 
              70.46000000000002}}],
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {FontFamily -> "Times"}], 
           "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{-0.24, 0},
      Frame->True,
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->Medium,
      LabelStyle->{FontFamily -> "Times"},
      PlotRange->{{0., 12.}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {None, 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.7020622578939347`*^9, 3.7020622672416162`*^9}, {
   3.702062336895445*^9, 3.7020623809135647`*^9}, {3.7020624214522505`*^9, 
   3.7020624893716097`*^9}, 3.7020656644363675`*^9, 3.702069307019891*^9, 
   3.7020693562728434`*^9, 3.702070326666379*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Watts-Stogatz small world network",
 FontWeight->"Bold"]], "Titlos",
 CellChangeTimes->{{3.699944623063857*^9, 3.6999446328233957`*^9}}],

Cell[TextData[{
 "Create a ring lattice with ",
 Cell[BoxData[
  FormBox["N", TraditionalForm]]],
 " nodes connected to their first ",
 Cell[BoxData[
  FormBox[
   RowBox[{"2", "M"}], TraditionalForm]]],
 " neighbors (",
 Cell[BoxData[
  FormBox["M", TraditionalForm]]],
 " on either side), with ",
 Cell[BoxData[
  FormBox[
   RowBox[{"N", ">>", "M", ">>", 
    RowBox[{"ln", 
     RowBox[{"(", "N", ")"}]}], ">>", "1"}], TraditionalForm]]],
 ". Then randomly rewire each edge of the lattice with probability ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]]],
 " such that self-connections and duplicate edges are excluded."
}], "ItemParagraph",
 CellChangeTimes->{{3.699944657931843*^9, 3.699944770650805*^9}, 
   3.7020625598450623`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"NWattsStogatz", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pWattsStogatz", "=", "0.02"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mWattsStogatz", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"aWattsStogatz", "=", 
    RowBox[{"Table", "[", 
     RowBox[{"0", ",", 
      RowBox[{"{", "NWattsStogatz", "}"}], ",", 
      RowBox[{"{", "NWattsStogatz", "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"step", " ", "1"}], ":", 
    RowBox[{
     RowBox[{
     "create", " ", "the", " ", "circle", " ", "network", " ", "with", " ", 
      "m"}], "-", "neighbors"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"For", "[", 
    RowBox[{
     RowBox[{"i", "=", "1"}], ",", 
     RowBox[{"i", "\[LessEqual]", "NWattsStogatz"}], ",", 
     RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "\[LessEqual]", "NWattsStogatz"}], ",", 
       RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"Or", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"And", "[", 
             RowBox[{
              RowBox[{"j", "\[GreaterEqual]", 
               RowBox[{"i", "+", "1"}]}], ",", 
              RowBox[{"j", "\[LessEqual]", 
               RowBox[{"i", "+", "mWattsStogatz"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"And", "[", 
             RowBox[{
              RowBox[{"i", "\[GreaterEqual]", 
               RowBox[{"j", "+", "1"}]}], ",", 
              RowBox[{"i", "\[LessEqual]", 
               RowBox[{"j", "+", "mWattsStogatz"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"And", "[", 
             RowBox[{
              RowBox[{"i", "\[GreaterEqual]", 
               RowBox[{"NWattsStogatz", "+", "1", "-", "mWattsStogatz"}]}], 
              ",", 
              RowBox[{"i", "\[LessEqual]", "NWattsStogatz"}], ",", 
              RowBox[{"j", "\[GreaterEqual]", "1"}], ",", 
              RowBox[{"j", "\[LessEqual]", "mWattsStogatz"}], ",", 
              RowBox[{
               RowBox[{"NWattsStogatz", "-", "i", "+", "j"}], "\[LessEqual]", 
               "mWattsStogatz"}]}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"And", "[", 
             RowBox[{
              RowBox[{"j", "\[GreaterEqual]", 
               RowBox[{"NWattsStogatz", "+", "1", "-", "mWattsStogatz"}]}], 
              ",", 
              RowBox[{"j", "\[LessEqual]", "NWattsStogatz"}], ",", 
              RowBox[{"i", "\[GreaterEqual]", "1"}], ",", 
              RowBox[{"i", "\[LessEqual]", "mWattsStogatz"}], ",", 
              RowBox[{
               RowBox[{"NWattsStogatz", "-", "j", "+", "i"}], "\[LessEqual]", 
               "mWattsStogatz"}]}], "]"}]}], "\[IndentingNewLine]", "]"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"aWattsStogatz", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", "1"}], ";", 
           RowBox[{
            RowBox[{"aWattsStogatz", "[", 
             RowBox[{"[", 
              RowBox[{"j", ",", "i"}], "]"}], "]"}], "=", "1"}], ";"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
      "]"}]}], "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"step", " ", "2"}], ":", 
    RowBox[{"randomly", " ", "move", " ", "some", " ", "connections"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "1"}], ",", 
    RowBox[{"i", "\[LessEqual]", "NWattsStogatz"}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"j", "=", "1"}], ",", 
      RowBox[{"j", "\[LessEqual]", "NWattsStogatz"}], ",", 
      RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"And", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"aWattsStogatz", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], "\[Equal]", "1"}], ",", 
           RowBox[{
            RowBox[{"RandomReal", "[", "]"}], "\[LessEqual]", 
            "pWattsStogatz"}]}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"aWattsStogatz", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", "0"}], ";", 
          RowBox[{
           RowBox[{"aWattsStogatz", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "i"}], "]"}], "]"}], "=", "0"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"RandomReal", "[", "]"}], "\[LessEqual]", "0.5"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"change", " ", "on", " ", "row"}], "*)"}], 
            RowBox[{
             RowBox[{"k", "=", 
              RowBox[{"RandomChoice", "[", 
               RowBox[{"Complement", "[", 
                RowBox[{
                 RowBox[{"Range", "[", "NWattsStogatz", "]"}], ",", 
                 RowBox[{"{", "j", "}"}]}], "]"}], "]"}]}], ";", 
             RowBox[{
              RowBox[{"aWattsStogatz", "[", 
               RowBox[{"[", 
                RowBox[{"k", ",", "j"}], "]"}], "]"}], "=", "1"}], ";", 
             RowBox[{
              RowBox[{"aWattsStogatz", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", "k"}], "]"}], "]"}], "=", "1"}], ";"}], ",",
             "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{"change", " ", "on", " ", "column"}], "*)"}], 
            RowBox[{
             RowBox[{"k", "=", 
              RowBox[{"RandomChoice", "[", 
               RowBox[{"Complement", "[", 
                RowBox[{
                 RowBox[{"Range", "[", "NWattsStogatz", "]"}], ",", 
                 RowBox[{"{", "i", "}"}]}], "]"}], "]"}]}], ";", 
             RowBox[{
              RowBox[{"aWattsStogatz", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "k"}], "]"}], "]"}], "=", "1"}], ";", 
             RowBox[{
              RowBox[{"aWattsStogatz", "[", 
               RowBox[{"[", 
                RowBox[{"k", ",", "i"}], "]"}], "]"}], "=", "1"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", "]"}], 
       ";"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Column", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Style", "[", 
      RowBox[{"\"\<\!\(\*
StyleBox[\"Watts\",
FontWeight->\"Bold\"]\)\!\(\*
StyleBox[\"-\",
FontWeight->\"Bold\"]\)\!\(\*
StyleBox[\"Stogatz\",
FontWeight->\"Bold\"]\)\!\(\*
StyleBox[\" \",
FontWeight->\"Bold\"]\)\!\(\*
StyleBox[\"Small\",
FontWeight->\"Bold\"]\)\!\(\*
StyleBox[\" \",
FontWeight->\"Bold\"]\)\!\(\*
StyleBox[\"World\",
FontWeight->\"Bold\"]\)\!\(\*
StyleBox[\" \",
FontWeight->\"Bold\"]\)\!\(\*
StyleBox[\"N\",
FontWeight->\"Bold\"]\)\!\(\*
StyleBox[\"etwork\",
FontWeight->\"Bold\"]\)\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"Bold", ",", "Large"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"StringForm", "[", 
      RowBox[{
      "\"\<Population: ``, Local connections: ``\>\"", ",", "NWattsStogatz", 
       ",", "mWattsStogatz"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"graphWattsStogatz", "=", 
      RowBox[{"AdjacencyGraph", "[", 
       RowBox[{"aWattsStogatz", ",", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Degree Distribution\>\"", ",", "Italic"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Histogram", "[", 
      RowBox[{
       RowBox[{"VertexDegree", "[", "graphWattsStogatz", "]"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdz0sowwEAx/HFxRq2YuWZvWh5jCb9EylTO5jDUi7KasvYKNrigGYeO8w4
LUOzyM24jLIDs5WhkG2heRy2iJEdUB6j+bPfDr8+/Y5ftqK/VZlCoVAKE4OU
DIO6yBJt7PBpN6FLGXTCY+63B5qIMy/sEW28Q1m2OQabZwJ/kME8TmUlXNbl
M2BH9WEBFC8QHOhu8JZAq6WKgGUjp/UwQPg74VM5oYaPZuUofJasTcBS1twk
pLaLbXD1NrICw75BO9zau3RAUmPbgfFKgQfGpsmr5H/jP8LhnN0otGSPv8K+
YPgDLs4e/ML93Jc0dsLPhwEqFAnOM6FJmE6HIUcXEzqPvnhw/k4tgFZpvA66
ahQieG/UiGHxNV8CI4a8IbjNlungj35pCk6y5XQuutxCBpT712ugid5bC40n
FVJ4QetWQdLE0sIIKUjalHUzBkN2pwG2t+lpvIQqTks6/AeuR+NS
  "]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"\\!\\(\\*\\nStyleBox[\\\"Watts\\\",\\nFontWeight->\\\"Bold\
\\\"]\\)\\!\\(\\*\\nStyleBox[\\\"-\\\",\\nFontWeight->\\\"Bold\\\"]\\)\\!\\(\\\
*\\nStyleBox[\\\"Stogatz\\\",\\nFontWeight->\\\"Bold\\\"]\\)\\!\\(\\*\\\
nStyleBox[\\\" \
\\\",\\nFontWeight->\\\"Bold\\\"]\\)\\!\\(\\*\\nStyleBox[\\\"Small\\\",\\\
nFontWeight->\\\"Bold\\\"]\\)\\!\\(\\*\\nStyleBox[\\\" \\\",\\nFontWeight->\\\
\"Bold\\\"]\\)\\!\\(\\*\\nStyleBox[\\\"World\\\",\\nFontWeight->\\\"Bold\\\"]\
\\)\\!\\(\\*\\nStyleBox[\\\" \
\\\",\\nFontWeight->\\\"Bold\\\"]\\)\\!\\(\\*\\nStyleBox[\\\"N\\\",\\\
nFontWeight->\\\"Bold\\\"]\\)\\!\\(\\*\\nStyleBox[\\\"etwork\\\",\\\
nFontWeight->\\\"Bold\\\"]\\)\"\>",
      StripOnInput->False,
      FontSize->Large,
      FontWeight->Bold]},
    {
     InterpretationBox["\<\"Population: \\!\\(\\*RowBox[{\\\"50\\\"}]\\), \
Local connections: \\!\\(\\*RowBox[{\\\"2\\\"}]\\)\"\>",
      StringForm["Population: ``, Local connections: ``", 50, 2],
      Editable->False]},
    {
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
           19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
           36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50}, {Null, 
           SparseArray[
           Automatic, {50, 50}, 0, {
            1, {{0, 4, 8, 12, 16, 21, 24, 28, 31, 35, 39, 43, 47, 51, 55, 59, 
              63, 67, 71, 75, 79, 83, 87, 90, 94, 97, 101, 104, 108, 112, 116,
               120, 124, 128, 131, 135, 139, 143, 147, 152, 155, 159, 163, 
              167, 171, 175, 179, 184, 188, 192, 196}, {{2}, {3}, {49}, {
              50}, {1}, {3}, {4}, {50}, {1}, {2}, {4}, {5}, {2}, {3}, {5}, {
              6}, {3}, {4}, {6}, {7}, {38}, {4}, {5}, {7}, {5}, {6}, {8}, {
              9}, {7}, {9}, {10}, {7}, {8}, {10}, {11}, {8}, {9}, {11}, {
              12}, {9}, {10}, {12}, {13}, {10}, {11}, {13}, {14}, {11}, {
              12}, {14}, {15}, {12}, {13}, {15}, {16}, {13}, {14}, {16}, {
              17}, {14}, {15}, {17}, {18}, {15}, {16}, {18}, {19}, {16}, {
              17}, {19}, {20}, {17}, {18}, {20}, {21}, {18}, {19}, {21}, {
              22}, {19}, {20}, {22}, {23}, {20}, {21}, {23}, {24}, {21}, {
              22}, {25}, {22}, {25}, {26}, {47}, {23}, {24}, {26}, {24}, {
              25}, {27}, {28}, {26}, {28}, {29}, {26}, {27}, {29}, {30}, {
              27}, {28}, {30}, {31}, {28}, {29}, {31}, {32}, {29}, {30}, {
              32}, {33}, {30}, {31}, {33}, {34}, {31}, {32}, {34}, {35}, {
              32}, {33}, {36}, {33}, {36}, {37}, {39}, {34}, {35}, {37}, {
              38}, {35}, {36}, {38}, {39}, {5}, {36}, {37}, {39}, {35}, {
              37}, {38}, {40}, {41}, {39}, {41}, {42}, {39}, {40}, {42}, {
              43}, {40}, {41}, {43}, {44}, {41}, {42}, {44}, {45}, {42}, {
              43}, {45}, {46}, {43}, {44}, {46}, {47}, {44}, {45}, {47}, {
              48}, {24}, {45}, {46}, {48}, {49}, {46}, {47}, {49}, {50}, {
              1}, {47}, {48}, {50}, {1}, {2}, {48}, {49}}}, Pattern}]}, {
          ImageSize -> Medium}]]}, 
        TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJwBMQPO/CFib1JlAgAAADIAAAACAAAAi5Btj28jEkA7HMp+P3D4P+q1c3Vh
fhJAzhmRa4FY8D92IUzQ1WgSQLCsEG4UueQ/eFkEaB6XEkAA/cYMU7rFPz8P
HUJ4khBAoH9rqkud3j8BTURHxX0UQAAAAAAAAAAA1PxIomINGEAI9O83xsTY
P/TqbftzBx1AmIGvpypV3j+TJ6hTtgseQJBLXeMs8uk/iSsefCV5IED+70rA
EBnxPyCHVGLjLSFADJT6WW5u+D/5o3RasAciQHyTH68Gt/8/+M+9+aFuIkBf
1t/bWVYEQC4OtwINryJANBSYhHzmCEDvvjDSaJYiQCJ/GwB8nQ1AiT4wlRU8
IkD6fsSN2AMRQIjm8HJzoiFAOcKaGVoWE0D9luEciL4gQAZN5zJIrhRAKG/c
z72VH0BGFvjggT8WQEDi6fh7Ax1AWqbKrN/IFkDaiC/g9+waQHoDfWpRChhA
fpL0WNyTF0CZA0TckgUXQKBGP+1EbRZAOinH1YQUGUAuCIb1M0ERQC9k5kpD
DxVAdna8OtNwEUA43APBhoUYQIKz/JHA5QhAFNx1ugAQGEAz/+bu+AoAQBSo
mFAJKBlAUgDgtk9v+z8mLEgPJO8XQMrZ9QxMNvA/5MY3DMCDF0Dg20tzXNzk
P1bAbD1G0hVA4KKA0x0o0D8eArGUlQEUQABcTR5zR7Q/E1iN6SjfEUAAAAAA
AAAAACs6FPyBZw5AAH3ieRuOwj83LIWUy7QKQDiD4HvDdtM/uRjFSmhjA0DI
+bxGf6zqP2oPteMPngFAyNTnf2GO7D+mezBXJZ/7PzfFAISKOgBAsTZ6QUVK
8z+0TpmqfdjqP+d4LsQfYvY//CZC29TK6j943ROdUizrPygqSoKg2vM/mEST
REs/8j+QXMbvI5z4P7xsNSGzd/c/VrImNkyJ/j/q1ONc5Zb+P0woapxpYwJA
arvHirH8AUAGYn1p5sYFQN/8bAg6/AVAglzrV88VCUDmGk2RpkEHQOlZX460
3g1A2n+kff+bDEBr3SkAXxsPQCYzh625VQZAJYJasq77EEAs4UNwS0wEQMiH
aRDfeBFAXWxh1FQ3/z97ZFnZ
           "], {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
             {Arrowheads[0.], ArrowBox[{1, 2}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{1, 3}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{1, 49}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{1, 50}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{2, 3}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{2, 4}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{2, 50}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{3, 4}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{3, 5}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{4, 5}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{4, 6}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{5, 6}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{5, 7}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{5, 38}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{6, 7}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{7, 8}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{7, 9}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{8, 9}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{8, 10}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{9, 10}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{9, 11}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{10, 11}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{10, 12}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{11, 12}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{11, 13}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{12, 13}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{12, 14}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{13, 14}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{13, 15}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{14, 15}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{14, 16}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{15, 16}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{15, 17}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{16, 17}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{16, 18}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{17, 18}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{17, 19}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{18, 19}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{18, 20}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{19, 20}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{19, 21}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{20, 21}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{20, 22}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{21, 22}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{21, 23}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{22, 23}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{22, 24}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{23, 25}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{24, 25}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{24, 26}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{24, 47}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{25, 26}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{26, 27}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{26, 28}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{27, 28}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{27, 29}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{28, 29}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{28, 30}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{29, 30}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{29, 31}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{30, 31}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{30, 32}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{31, 32}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{31, 33}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{32, 33}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{32, 34}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{33, 34}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{33, 35}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{34, 36}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{35, 36}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{35, 37}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{35, 39}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{36, 37}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{36, 38}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{37, 38}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{37, 39}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{38, 39}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{39, 40}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{39, 41}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{40, 41}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{40, 42}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{41, 42}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{41, 43}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{42, 43}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{42, 44}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{43, 44}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{43, 45}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{44, 45}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{44, 46}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{45, 46}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{45, 47}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{46, 47}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{46, 48}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{47, 48}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{47, 49}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{48, 49}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{48, 50}, 0.06320158775050456]}, 
             {Arrowheads[0.], ArrowBox[{49, 50}, 0.06320158775050456]}}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.06320158775050456], DiskBox[2, 0.06320158775050456],
              DiskBox[3, 0.06320158775050456], 
             DiskBox[4, 0.06320158775050456], DiskBox[5, 0.06320158775050456],
              DiskBox[6, 0.06320158775050456], 
             DiskBox[7, 0.06320158775050456], DiskBox[8, 0.06320158775050456],
              DiskBox[9, 0.06320158775050456], 
             DiskBox[10, 0.06320158775050456], 
             DiskBox[11, 0.06320158775050456], 
             DiskBox[12, 0.06320158775050456], 
             DiskBox[13, 0.06320158775050456], 
             DiskBox[14, 0.06320158775050456], 
             DiskBox[15, 0.06320158775050456], 
             DiskBox[16, 0.06320158775050456], 
             DiskBox[17, 0.06320158775050456], 
             DiskBox[18, 0.06320158775050456], 
             DiskBox[19, 0.06320158775050456], 
             DiskBox[20, 0.06320158775050456], 
             DiskBox[21, 0.06320158775050456], 
             DiskBox[22, 0.06320158775050456], 
             DiskBox[23, 0.06320158775050456], 
             DiskBox[24, 0.06320158775050456], 
             DiskBox[25, 0.06320158775050456], 
             DiskBox[26, 0.06320158775050456], 
             DiskBox[27, 0.06320158775050456], 
             DiskBox[28, 0.06320158775050456], 
             DiskBox[29, 0.06320158775050456], 
             DiskBox[30, 0.06320158775050456], 
             DiskBox[31, 0.06320158775050456], 
             DiskBox[32, 0.06320158775050456], 
             DiskBox[33, 0.06320158775050456], 
             DiskBox[34, 0.06320158775050456], 
             DiskBox[35, 0.06320158775050456], 
             DiskBox[36, 0.06320158775050456], 
             DiskBox[37, 0.06320158775050456], 
             DiskBox[38, 0.06320158775050456], 
             DiskBox[39, 0.06320158775050456], 
             DiskBox[40, 0.06320158775050456], 
             DiskBox[41, 0.06320158775050456], 
             DiskBox[42, 0.06320158775050456], 
             DiskBox[43, 0.06320158775050456], 
             DiskBox[44, 0.06320158775050456], 
             DiskBox[45, 0.06320158775050456], 
             DiskBox[46, 0.06320158775050456], 
             DiskBox[47, 0.06320158775050456], 
             DiskBox[48, 0.06320158775050456], 
             DiskBox[49, 0.06320158775050456], 
             DiskBox[50, 0.06320158775050456]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None,
      ImageSize->Medium]},
    {
     StyleBox["\<\"Degree Distribution\"\>",
      StripOnInput->False,
      FontSlant->Italic]},
    {
     GraphicsBox[{
       {RGBColor[0.92, 0.488, 0.2432], EdgeForm[{Opacity[0.6649999999999999], 
        Thickness[Small]}], {}, 
        {RGBColor[0.92, 0.488, 0.2432], EdgeForm[{Opacity[0.6649999999999999],
          Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3., 0}, {4., 7}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{14.878800000000012`, 94.89960000000002}, {
              44.52187538224995, 70.46000000000001}}],
            StatusArea[#, 7]& ,
            TagBoxNote->"7"],
           StyleBox["7", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[7, {FontFamily -> "Times"}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{4., 0}, {5., 40}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{94.53960000000001, 
              174.56040000000002`}, {-76.06071210142883, 70.46000000000001}}],
            StatusArea[#, 40]& ,
            TagBoxNote->"40"],
           StyleBox["40", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[40, {FontFamily -> "Times"}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{5., 0}, {6., 3}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{174.2004, 254.22120000000007`}, {
              59.13794659239284, 70.46000000000001}}],
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {FontFamily -> "Times"}], 
           "Tooltip"]& ]}, {}, {}}, {{}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{2.94, 0},
      Frame->True,
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->Medium,
      LabelStyle->{FontFamily -> "Times"},
      PlotRange->{{3., 6.}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {None, 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{3.702638937452814*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Barabasi-Albert scale-free network",
 FontWeight->"Bold"]], "Titlos",
 CellChangeTimes->{{3.699944789596364*^9, 3.699944807282961*^9}, 
   3.70206329956173*^9}],

Cell[TextData[{
 "Starting with a small number of connected nodes (",
 Cell[BoxData[
  FormBox[
   SubscriptBox["m", "0"], TraditionalForm]]],
 "), at every time step, we add a new node with ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]]],
 " edges ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"m", "<", 
     SubscriptBox["m", "0"]}], ")"}], TraditionalForm]]],
 " that link the new node to ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]]],
 " different existing nodes. The probability of each new connection increases \
with the number of connections the target node already has."
}], "ItemParagraph",
 CellChangeTimes->{{3.6999448221079454`*^9, 3.6999449387656827`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Column", "[", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Barabasi-Albert Scale-Free\!\(\*
StyleBox[\" \",
FontWeight->\"Bold\"]\)\!\(\*
StyleBox[\"Network\",
FontWeight->\"Bold\"]\)\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"Bold", ",", "Large"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"graphBarabasiAlbert", "=", 
       RowBox[{"RandomGraph", "[", 
        RowBox[{
         RowBox[{"BarabasiAlbertGraphDistribution", "[", 
          RowBox[{"100", ",", "2"}], "]"}], ",", 
         RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Degree Distribution\>\"", ",", "Italic"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Histogram", "[", 
       RowBox[{
        RowBox[{"VertexDegree", "[", "graphBarabasiAlbert", "]"}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
        RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}]}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], ",", 
    RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7020697525267057`*^9, 3.70206980999073*^9}, {
   3.702070173039941*^9, 3.70207026285666*^9}, 3.7020714156955166`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Barabasi-Albert Scale-Free\\!\\(\\*\\nStyleBox[\\\" \
\\\",\\nFontWeight->\\\"Bold\\\"]\\)\\!\\(\\*\\nStyleBox[\\\"Network\\\",\\\
nFontWeight->\\\"Bold\\\"]\\)\"\>",
      StripOnInput->False,
      FontSize->Large,
      FontWeight->Bold]},
    {
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
           19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
           36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52,
           53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69,
           70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86,
           87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100}, {
          Null, SparseArray[
           Automatic, {100, 100}, 0, {
            1, {{0, 14, 20, 43, 47, 57, 95, 99, 101, 115, 119, 121, 125, 129, 
              130, 136, 139, 142, 143, 143, 143, 146, 147, 152, 154, 156, 160,
               160, 160, 162, 163, 167, 167, 167, 168, 169, 169, 171, 171, 
              172, 173, 173, 174, 174, 176, 179, 180, 180, 180, 180, 181, 185,
               185, 186, 187, 187, 187, 187, 189, 190, 192, 193, 193, 193, 
              193, 193, 193, 193, 193, 194, 196, 196, 196, 196, 197, 197, 197,
               197, 197, 197, 197, 197, 197, 197, 197, 197, 197, 197, 197, 
              197, 197, 197, 197, 197, 197, 197, 197, 197, 197, 197, 197}, {{
              2}, {3}, {4}, {5}, {6}, {14}, {18}, {23}, {31}, {39}, {70}, {
              73}, {93}, {94}, {3}, {6}, {12}, {31}, {42}, {76}, {4}, {5}, {
              7}, {13}, {15}, {19}, {20}, {22}, {24}, {27}, {28}, {29}, {
              39}, {46}, {48}, {56}, {60}, {67}, {80}, {81}, {83}, {87}, {
              93}, {8}, {10}, {33}, {55}, {9}, {11}, {35}, {42}, {46}, {47}, {
              50}, {62}, {78}, {84}, {7}, {9}, {11}, {13}, {14}, {15}, {16}, {
              18}, {23}, {24}, {25}, {28}, {29}, {30}, {32}, {33}, {34}, {
              36}, {37}, {40}, {49}, {51}, {52}, {55}, {56}, {58}, {59}, {
              66}, {69}, {72}, {74}, {75}, {79}, {88}, {92}, {95}, {96}, {
              100}, {8}, {64}, {77}, {100}, {48}, {52}, {10}, {12}, {25}, {
              27}, {34}, {41}, {43}, {51}, {53}, {59}, {64}, {77}, {78}, {
              82}, {17}, {19}, {89}, {96}, {43}, {63}, {44}, {50}, {72}, {
              74}, {16}, {80}, {85}, {86}, {30}, {17}, {20}, {21}, {35}, {
              38}, {98}, {53}, {65}, {86}, {21}, {22}, {73}, {45}, {26}, {
              57}, {62}, {40}, {47}, {63}, {71}, {79}, {90}, {37}, {54}, {
              26}, {32}, {36}, {58}, {65}, {81}, {45}, {92}, {44}, {66}, {
              82}, {90}, {97}, {38}, {49}, {68}, {95}, {41}, {61}, {97}, {
              60}, {75}, {57}, {69}, {70}, {83}, {68}, {54}, {88}, {89}, {
              99}, {85}, {61}, {71}, {91}, {87}, {67}, {76}, {84}, {99}, {
              91}, {94}, {98}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
              1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
             1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
              1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
             1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
              1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
             1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
              1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
             1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
              1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}]}, {ImageSize -> Medium}]]}, 
        TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
m5l0TBfJ2l196NhQw/GoCOTgfwDkj8fx
           "], {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
             {Arrowheads[0.], ArrowBox[{1, 2}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{1, 3}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{1, 4}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{1, 5}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{1, 6}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{1, 14}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{1, 18}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{1, 23}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{1, 31}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{1, 39}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{1, 70}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{1, 73}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{1, 93}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{1, 94}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{2, 3}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{2, 6}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{2, 12}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{2, 31}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{2, 42}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{2, 76}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{3, 4}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{3, 5}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{3, 7}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{3, 13}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{3, 15}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{3, 19}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{3, 20}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{3, 22}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{3, 24}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{3, 27}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{3, 28}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{3, 29}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{3, 39}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{3, 46}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{3, 48}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{3, 56}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{3, 60}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{3, 67}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{3, 80}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{3, 81}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{3, 83}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{3, 87}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{3, 93}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{4, 8}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{4, 10}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{4, 33}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{4, 55}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{5, 9}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{5, 11}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{5, 35}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{5, 42}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{5, 46}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{5, 47}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{5, 50}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{5, 62}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{5, 78}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{5, 84}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{6, 7}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{6, 9}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{6, 11}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{6, 13}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{6, 14}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{6, 15}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{6, 16}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{6, 18}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{6, 23}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{6, 24}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{6, 25}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{6, 28}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{6, 29}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{6, 30}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{6, 32}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{6, 33}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{6, 34}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{6, 36}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{6, 37}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{6, 40}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{6, 49}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{6, 51}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{6, 52}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{6, 55}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{6, 56}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{6, 58}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{6, 59}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{6, 66}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{6, 69}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{6, 72}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{6, 74}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{6, 75}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{6, 79}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{6, 88}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{6, 92}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{6, 95}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{6, 96}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{6, 100}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{7, 8}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{7, 64}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{7, 77}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{7, 100}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{8, 48}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{8, 52}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{9, 10}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{9, 12}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{9, 25}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{9, 27}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{9, 34}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{9, 41}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{9, 43}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{9, 51}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{9, 53}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{9, 59}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{9, 64}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{9, 77}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{9, 78}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{9, 82}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{10, 17}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{10, 19}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{10, 89}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{10, 96}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{11, 43}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{11, 63}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{12, 44}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{12, 50}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{12, 72}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{12, 74}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{13, 16}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{13, 80}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{13, 85}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{13, 86}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{14, 30}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{15, 17}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{15, 20}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{15, 21}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{15, 35}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{15, 38}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{15, 98}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{16, 53}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{16, 65}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{16, 86}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{17, 21}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{17, 22}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{17, 73}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{18, 45}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{21, 26}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{21, 57}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{21, 62}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{22, 40}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{23, 47}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{23, 63}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{23, 71}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{23, 79}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{23, 90}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{24, 37}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{24, 54}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{25, 26}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{25, 32}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{26, 36}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{26, 58}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{26, 65}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{26, 81}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{29, 45}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{29, 92}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{30, 44}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{31, 66}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{31, 82}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{31, 90}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{31, 97}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{34, 38}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{35, 49}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{37, 68}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{37, 95}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{39, 41}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{40, 61}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{42, 97}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{44, 60}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{44, 75}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{45, 57}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{45, 69}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{45, 70}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{46, 83}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{50, 68}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{51, 54}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{51, 88}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{51, 89}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{51, 99}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{53, 85}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{54, 61}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{58, 71}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{58, 91}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{59, 87}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{60, 67}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{60, 76}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{61, 84}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{69, 99}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{70, 91}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{70, 94}, 0.042730341897332116`]}, 
             {Arrowheads[0.], ArrowBox[{74, 98}, 0.042730341897332116`]}}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.042730341897332116], 
             DiskBox[2, 0.042730341897332116], 
             DiskBox[3, 0.042730341897332116], 
             DiskBox[4, 0.042730341897332116], 
             DiskBox[5, 0.042730341897332116], 
             DiskBox[6, 0.042730341897332116], 
             DiskBox[7, 0.042730341897332116], 
             DiskBox[8, 0.042730341897332116], 
             DiskBox[9, 0.042730341897332116], 
             DiskBox[10, 0.042730341897332116], 
             DiskBox[11, 0.042730341897332116], 
             DiskBox[12, 0.042730341897332116], 
             DiskBox[13, 0.042730341897332116], 
             DiskBox[14, 0.042730341897332116], 
             DiskBox[15, 0.042730341897332116], 
             DiskBox[16, 0.042730341897332116], 
             DiskBox[17, 0.042730341897332116], 
             DiskBox[18, 0.042730341897332116], 
             DiskBox[19, 0.042730341897332116], 
             DiskBox[20, 0.042730341897332116], 
             DiskBox[21, 0.042730341897332116], 
             DiskBox[22, 0.042730341897332116], 
             DiskBox[23, 0.042730341897332116], 
             DiskBox[24, 0.042730341897332116], 
             DiskBox[25, 0.042730341897332116], 
             DiskBox[26, 0.042730341897332116], 
             DiskBox[27, 0.042730341897332116], 
             DiskBox[28, 0.042730341897332116], 
             DiskBox[29, 0.042730341897332116], 
             DiskBox[30, 0.042730341897332116], 
             DiskBox[31, 0.042730341897332116], 
             DiskBox[32, 0.042730341897332116], 
             DiskBox[33, 0.042730341897332116], 
             DiskBox[34, 0.042730341897332116], 
             DiskBox[35, 0.042730341897332116], 
             DiskBox[36, 0.042730341897332116], 
             DiskBox[37, 0.042730341897332116], 
             DiskBox[38, 0.042730341897332116], 
             DiskBox[39, 0.042730341897332116], 
             DiskBox[40, 0.042730341897332116], 
             DiskBox[41, 0.042730341897332116], 
             DiskBox[42, 0.042730341897332116], 
             DiskBox[43, 0.042730341897332116], 
             DiskBox[44, 0.042730341897332116], 
             DiskBox[45, 0.042730341897332116], 
             DiskBox[46, 0.042730341897332116], 
             DiskBox[47, 0.042730341897332116], 
             DiskBox[48, 0.042730341897332116], 
             DiskBox[49, 0.042730341897332116], 
             DiskBox[50, 0.042730341897332116], 
             DiskBox[51, 0.042730341897332116], 
             DiskBox[52, 0.042730341897332116], 
             DiskBox[53, 0.042730341897332116], 
             DiskBox[54, 0.042730341897332116], 
             DiskBox[55, 0.042730341897332116], 
             DiskBox[56, 0.042730341897332116], 
             DiskBox[57, 0.042730341897332116], 
             DiskBox[58, 0.042730341897332116], 
             DiskBox[59, 0.042730341897332116], 
             DiskBox[60, 0.042730341897332116], 
             DiskBox[61, 0.042730341897332116], 
             DiskBox[62, 0.042730341897332116], 
             DiskBox[63, 0.042730341897332116], 
             DiskBox[64, 0.042730341897332116], 
             DiskBox[65, 0.042730341897332116], 
             DiskBox[66, 0.042730341897332116], 
             DiskBox[67, 0.042730341897332116], 
             DiskBox[68, 0.042730341897332116], 
             DiskBox[69, 0.042730341897332116], 
             DiskBox[70, 0.042730341897332116], 
             DiskBox[71, 0.042730341897332116], 
             DiskBox[72, 0.042730341897332116], 
             DiskBox[73, 0.042730341897332116], 
             DiskBox[74, 0.042730341897332116], 
             DiskBox[75, 0.042730341897332116], 
             DiskBox[76, 0.042730341897332116], 
             DiskBox[77, 0.042730341897332116], 
             DiskBox[78, 0.042730341897332116], 
             DiskBox[79, 0.042730341897332116], 
             DiskBox[80, 0.042730341897332116], 
             DiskBox[81, 0.042730341897332116], 
             DiskBox[82, 0.042730341897332116], 
             DiskBox[83, 0.042730341897332116], 
             DiskBox[84, 0.042730341897332116], 
             DiskBox[85, 0.042730341897332116], 
             DiskBox[86, 0.042730341897332116], 
             DiskBox[87, 0.042730341897332116], 
             DiskBox[88, 0.042730341897332116], 
             DiskBox[89, 0.042730341897332116], 
             DiskBox[90, 0.042730341897332116], 
             DiskBox[91, 0.042730341897332116], 
             DiskBox[92, 0.042730341897332116], 
             DiskBox[93, 0.042730341897332116], 
             DiskBox[94, 0.042730341897332116], 
             DiskBox[95, 0.042730341897332116], 
             DiskBox[96, 0.042730341897332116], 
             DiskBox[97, 0.042730341897332116], 
             DiskBox[98, 0.042730341897332116], 
             DiskBox[99, 0.042730341897332116], 
             DiskBox[100, 0.042730341897332116]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None,
      ImageSize->Medium]},
    {
     StyleBox["\<\"Degree Distribution\"\>",
      StripOnInput->False,
      FontSlant->Italic]},
    {
     GraphicsBox[{
       {RGBColor[0.92, 0.488, 0.2432], EdgeForm[{Opacity[0.609], Thickness[
        Small]}], {}, 
        {RGBColor[0.92, 0.488, 0.2432], EdgeForm[{Opacity[0.609], Thickness[
         Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{2., 0}, {3., 53}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{14.878799999999988`, 
              38.55415609756098}, {-76.06071210142886, 70.46000000000001}}],
            StatusArea[#, 53]& ,
            TagBoxNote->"53"],
           StyleBox["53", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[53, {FontFamily -> "Times"}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3., 0}, {4., 17}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{38.19415609756096, 61.869512195121956`}, {
              23.218262156145457`, 70.46000000000001}}],
            StatusArea[#, 17]& ,
            TagBoxNote->"17"],
           StyleBox["17", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[17, {FontFamily -> "Times"}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{4., 0}, {5., 10}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{61.50951219512194, 85.18486829268292}, {
              42.522507150673796`, 70.46000000000001}}],
            StatusArea[#, 10]& ,
            TagBoxNote->"10"],
           StyleBox["10", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[10, {FontFamily -> "Times"}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{5., 0}, {6., 4}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{84.82486829268292, 108.50022439024389`}, {
              59.06900286026952, 70.46000000000001}}],
            StatusArea[#, 4]& ,
            TagBoxNote->"4"],
           StyleBox["4", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[4, {FontFamily -> "Times"}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{6., 0}, {7., 8}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{108.14022439024389`, 131.81558048780488`}, {
              48.03800572053904, 70.46000000000001}}],
            StatusArea[#, 8]& ,
            TagBoxNote->"8"],
           StyleBox["8", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[8, {FontFamily -> "Times"}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{7., 0}, {8., 2}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{131.45558048780487`, 155.13093658536582`}, {
              64.58450143013476, 70.46000000000001}}],
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {FontFamily -> "Times"}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{8., 0}, {9., 1}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{154.77093658536583`, 178.4462926829268}, {
              67.3422507150674, 70.46000000000001}}],
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {FontFamily -> "Times"}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{12., 0}, {13., 1}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{248.03236097560972`, 271.7077170731707}, {
              67.3422507150674, 70.46000000000001}}],
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {FontFamily -> "Times"}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{14., 0}, {15., 1}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{294.6630731707317, 318.33842926829266`}, {
              67.3422507150674, 70.46000000000001}}],
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {FontFamily -> "Times"}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{16., 0}, {17., 1}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{341.29378536585364`, 364.96914146341464`}, {
              67.3422507150674, 70.46000000000001}}],
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {FontFamily -> "Times"}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{25., 0}, {26., 1}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{551.1319902439025, 574.8073463414636}, {
              67.3422507150674, 70.46000000000001}}],
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {FontFamily -> "Times"}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{40., 0}, {41., 1}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{900.862331707317, 924.5376878048781}, {
              67.3422507150674, 70.46000000000001}}],
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {FontFamily -> "Times"}], 
           "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{1.795, 0},
      Frame->True,
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->Medium,
      LabelStyle->{FontFamily -> "Times"},
      PlotRange->{{2, 12.25}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {None, 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.702069749228939*^9, 3.702069785494587*^9}, {
   3.70207020723586*^9, 3.7020702636173754`*^9}, 3.7020714166606665`*^9}]
}, {2}]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["SHEM ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox[
   SuperscriptBox["network", 
    RowBox[{"[", 
     DynamicBox[ToBoxes[$CellContext`ref12, StandardForm],
      ImageSizeCache->{6.119999999999999, {0., 7.}}], "]"}]], 
   TraditionalForm]],
  FontWeight->"Bold"]
}], "Titlos",
 CellChangeTimes->{{3.7019621407725563`*^9, 3.701962147763584*^9}, 
   3.701962199028508*^9, {3.7019625742722044`*^9, 3.701962592585504*^9}}],

Cell[TextData[{
 "Consider a set ",
 Cell[BoxData[
  FormBox["V", TraditionalForm]]],
 " whose elements represent either individuals or their fixed positions, and \
the set ",
 Cell[BoxData[
  FormBox["B", TraditionalForm]]],
 " of all edges between them. Then consider a set ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["B", "1"], "\[SubsetEqual]", "B"}], TraditionalForm]]],
 " of basic edges that determine the basic graph. Next, take a hierarchical \
structure of partitions of V into larger blocks representing communities. \
Then consider random sets ",
 Cell[BoxData[
  FormBox["S", TraditionalForm]]],
 " of communities to which individuals belong."
}], "Text",
 CellChangeTimes->{{3.701962177268421*^9, 3.701962268076641*^9}, {
  3.701962300413746*^9, 3.7019624224369717`*^9}}],

Cell["\<\
Two individuals are considered to be in contact if they are linked with a \
basic edge or if they are members of the same community.\
\>", "Text",
 CellChangeTimes->{{3.7019624231082897`*^9, 3.7019624494595604`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Network Creation", "SubChapterNC",
 CellChangeTimes->{
  3.640701274346218*^9, {3.699944253503895*^9, 3.6999442683163958`*^9}, {
   3.7020714449734592`*^9, 3.702071449773014*^9}}],

Cell["\<\
An attempt to create a random but realistic network that exhibits all the \
above properties is made based on the method of creation for a SHEM network.\
\>", "Text",
 CellChangeTimes->{{3.702071457462214*^9, 3.7020714985583396`*^9}, {
  3.7020715489408965`*^9, 3.702071551373665*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "First, the number of communities within that population is defined. The \
size of each community is determined randomly, based on the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[Chi]", "2"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " distribution. This results in a many small communities (households, \
offices) a few larger ones (schools, factories, etc), even fewer individuals \
or extremely small communities, and a total population of approximately the \
number of communities squared."
}], "ItemNumbered",
 CellChangeTimes->{{3.702071499308883*^9, 3.702071500581744*^9}, {
  3.702071566476715*^9, 3.7020715805965557`*^9}, {3.702071615614042*^9, 
  3.702071632254053*^9}, {3.702072034154065*^9, 3.702072055965407*^9}, {
  3.7020725208757715`*^9, 3.70207253310789*^9}, {3.7020726778853245`*^9, 
  3.702072781676777*^9}, {3.702072880452228*^9, 3.7020729022607746`*^9}, {
  3.7020731159876823`*^9, 3.702073116004697*^9}, {3.702073542564974*^9, 
  3.702073585971978*^9}}],

Cell["\<\
Then, the connections of each individual is determined randomly. Each \
individual is taken to make local connections in his community based on a \
poison distribution with a mean equal to one third of the community\
\[CloseCurlyQuote]s size. Based on the number of connections, adjacency \
matrices are created for each community. These matrices are then joined so as \
to form a diagonal matrix with these on its diagonal.\
\>", "ItemNumbered",
 CellChangeTimes->{{3.702071499308883*^9, 3.702071500581744*^9}, {
  3.702071566476715*^9, 3.7020715805965557`*^9}, {3.702071615614042*^9, 
  3.702071632254053*^9}, {3.702072034154065*^9, 3.702072055965407*^9}, {
  3.7020725208757715`*^9, 3.70207253310789*^9}, {3.7020726778853245`*^9, 
  3.702072781676777*^9}, {3.702072880452228*^9, 3.7020729022607746`*^9}, {
  3.702073592500447*^9, 3.702073645984507*^9}, {3.702073684732904*^9, 
  3.702073717748025*^9}, {3.7020738712198334`*^9, 3.702073936651573*^9}, {
  3.702075499773074*^9, 3.702075503196433*^9}, {3.702076353715941*^9, 
  3.702076382126153*^9}}],

Cell["\<\
The next step is the creation of inter-community links, based on a fixed \
probability. By keeping the communities isolated (small chance for an \
inter-community link), we observe that the degree distribution exhibits the \
power-law distribution\[CloseCurlyQuote]s tail, but the low-degree nodes are \
fewer than in a scale-free network.\
\>", "ItemNumbered",
 CellChangeTimes->{{3.702071499308883*^9, 3.702071500581744*^9}, {
  3.702071566476715*^9, 3.7020715805965557`*^9}, {3.702071615614042*^9, 
  3.702071632254053*^9}, {3.702072034154065*^9, 3.702072055965407*^9}, {
  3.7020725208757715`*^9, 3.70207253310789*^9}, {3.7020726778853245`*^9, 
  3.702072781676777*^9}, {3.702072880452228*^9, 3.7020729022607746`*^9}, {
  3.702073592500447*^9, 3.702073645984507*^9}, {3.702073684732904*^9, 
  3.702073717748025*^9}, {3.7020738712198334`*^9, 3.702073936651573*^9}, {
  3.702075499773074*^9, 3.702075503196433*^9}, {3.702076353715941*^9, 
  3.702076389003501*^9}, {3.7020775596341753`*^9, 3.70207768937912*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Column", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "basic", " ", "community", " ", "and", " ", "population", " ", "data"}], 
     "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Ncommunities", "=", "100"}], ";", "\[IndentingNewLine]", 
      RowBox[{"communitySize", "=", 
       RowBox[{"Floor", "[", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{
          RowBox[{"ChiSquareDistribution", "[", "10", "]"}], ",", 
          "Ncommunities"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Ntotal", "=", 
       RowBox[{"Total", "[", "communitySize", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Test\!\(\*
StyleBox[\" \",
FontWeight->\"Bold\"]\)\!\(\*
StyleBox[\"Network\",
FontWeight->\"Bold\"]\)\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"Bold", ",", "Large"}], "}"}]}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"StringForm", "[", 
      RowBox[{
      "\"\<Population: ``, Communities: ``\>\"", ",", "Ntotal", ",", 
       "Ncommunities"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Community sizes\>\"", ",", "Italic"}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Histogram", "[", 
      RowBox[{"communitySize", ",", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}], ",", 
       RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}]}], "]"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"create", " ", "community", " ", "links"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"communityLocalLinksMean", "=", 
       RowBox[{
        RowBox[{"Floor", "[", 
         RowBox[{"communitySize", "/", "4"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{"0", "\[Rule]", "1"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"A", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", "Ncommunities"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"links", "=", 
          RowBox[{"Total", "[", 
           RowBox[{"RandomVariate", "[", 
            RowBox[{
             RowBox[{"PoissonDistribution", "[", 
              RowBox[{"communityLocalLinksMean", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
             RowBox[{"communitySize", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"a", "=", 
          RowBox[{"Table", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{"communitySize", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"communitySize", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"linkPosa", "=", 
          RowBox[{"RandomSample", "[", 
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"i", ",", "j"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", 
                  RowBox[{"Length", "[", "a", "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", 
                  RowBox[{"i", "+", "1"}], ",", 
                  RowBox[{"Length", "[", "a", "]"}]}], "}"}]}], "]"}], ",", 
              "1"}], "]"}], ",", 
            RowBox[{"UpTo", "[", "links", "]"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"linkPosb", "=", 
          RowBox[{"Map", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Sort", "[", 
              RowBox[{"#", ",", "Greater"}], "]"}], "&"}], ",", "linkPosa"}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"a", "[", 
                RowBox[{"[", "##", "]"}], "]"}], "=", "1"}], ")"}], "&"}], "@@",
             "#"}], "&"}], "~", "Scan", "~", 
          RowBox[{"Join", "[", 
           RowBox[{"linkPosa", ",", "linkPosb"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"A", ",", "a"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "create", " ", "the", " ", "adjacency", " ", "matrix", " ", 
        "containing", " ", "the", " ", "above", " ", "communities"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Agraph", "=", 
       RowBox[{"Fold", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"ArrayFlatten", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"#", ",", 
               RowBox[{"-", "1"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "#2"}], "}"}]}], "}"}], "]"}], "&"}], 
         ",", 
         RowBox[{"A", "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", 
         RowBox[{"A", "[", 
          RowBox[{"[", 
           RowBox[{"2", ";;", 
            RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"pInterCommunity", "=", "0.001"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", "Ntotal"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "i"}], ",", 
          RowBox[{"j", "\[LessEqual]", "Ntotal"}], ",", 
          RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Agraph", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}], "\[Equal]", 
             RowBox[{"-", "1"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"RandomReal", "[", "]"}], "<", "pInterCommunity"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"Agraph", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", "1"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Agraph", "[", 
                 RowBox[{"[", 
                  RowBox[{"j", ",", "i"}], "]"}], "]"}], "=", "1"}], ";"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"Agraph", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", "0"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"Agraph", "[", 
                 RowBox[{"[", 
                  RowBox[{"j", ",", "i"}], "]"}], "]"}], "=", "0"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
           "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"AgraphInit", "=", "Agraph"}], ";", "\[IndentingNewLine]", 
      RowBox[{"graph", "=", 
       RowBox[{"AdjacencyGraph", "[", 
        RowBox[{"Agraph", ",", 
         RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Style", "[", 
       RowBox[{"\"\<Degree Distribution\>\"", ",", "Italic"}], "]"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Histogram", "[", 
      RowBox[{
       RowBox[{"VertexDegree", "[", "graph", "]"}], ",", 
       RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], ",", 
   RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7020715826390576`*^9, 3.702071610725144*^9}, {
   3.702072012157072*^9, 3.702072027310197*^9}, {3.70207206254976*^9, 
   3.7020720665692067`*^9}, {3.7020721128142614`*^9, 3.70207235119915*^9}, {
   3.702072386128175*^9, 3.702072480591741*^9}, {3.702072535693736*^9, 
   3.70207257045321*^9}, {3.7020726419342585`*^9, 3.7020726702219343`*^9}, {
   3.702072804374771*^9, 3.7020728639637585`*^9}, {3.7020729075960274`*^9, 
   3.702072970397078*^9}, {3.7020730229043465`*^9, 3.7020730841671324`*^9}, {
   3.702073732933211*^9, 3.702073816212615*^9}, {3.7020739393166933`*^9, 
   3.7020740202556753`*^9}, {3.7020740810399513`*^9, 3.702074206856083*^9}, {
   3.7020743570372577`*^9, 3.7020744076005363`*^9}, {3.7020744719761124`*^9, 
   3.702074475735813*^9}, {3.702074532726516*^9, 3.7020745875694804`*^9}, {
   3.7020746405271645`*^9, 3.7020747478123627`*^9}, {3.7020748607908883`*^9, 
   3.702074862789962*^9}, {3.702075051394334*^9, 3.7020750600713253`*^9}, {
   3.7020751263506904`*^9, 3.702075135781562*^9}, {3.702075230472141*^9, 
   3.702075257239334*^9}, 3.7020754838287954`*^9, {3.702075983212099*^9, 
   3.7020760118925624`*^9}, {3.702076055228282*^9, 3.702076176104479*^9}, {
   3.702076300405388*^9, 3.7020763415328813`*^9}, {3.7020764023241644`*^9, 
   3.7020764422897773`*^9}, {3.702076478257904*^9, 3.702076690219874*^9}, {
   3.7020767579085674`*^9, 3.7020767595453463`*^9}, {3.702076807837537*^9, 
   3.7020768086395445`*^9}, {3.7020768595254974`*^9, 3.702076861804319*^9}, {
   3.7020769246093035`*^9, 3.7020770140785575`*^9}, {3.702077178848772*^9, 
   3.7020771985342445`*^9}, {3.702077231941661*^9, 3.7020774568046293`*^9}, {
   3.7020774901203775`*^9, 3.7020775081170225`*^9}, {3.7020775460029774`*^9, 
   3.702077546368639*^9}, {3.7020777129811316`*^9, 3.70207771314849*^9}, {
   3.7020814797799234`*^9, 3.7020814859118605`*^9}, {3.7020816538332157`*^9, 
   3.7020816540106163`*^9}, {3.7020839706903777`*^9, 3.702083972106778*^9}, {
   3.7020841512639785`*^9, 3.7020841519909754`*^9}, {3.7026423472936645`*^9, 
   3.702642354453659*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Test\\!\\(\\*\\nStyleBox[\\\" \\\",\\nFontWeight->\\\"Bold\
\\\"]\\)\\!\\(\\*\\nStyleBox[\\\"Network\\\",\\nFontWeight->\\\"Bold\\\"]\\)\"\
\>",
      StripOnInput->False,
      FontSize->Large,
      FontWeight->Bold]},
    {
     InterpretationBox["\<\"Population: \\!\\(\\*RowBox[{\\\"1011\\\"}]\\), \
Communities: \\!\\(\\*RowBox[{\\\"100\\\"}]\\)\"\>",
      StringForm["Population: ``, Communities: ``", 1011, 100],
      Editable->False]},
    {
     StyleBox["\<\"Community sizes\"\>",
      StripOnInput->False,
      FontSlant->Italic]},
    {
     GraphicsBox[{
       {RGBColor[0.92, 0.488, 0.2432], EdgeForm[{Opacity[0.609], Thickness[
        Small]}], {}, 
        {RGBColor[0.92, 0.488, 0.2432], EdgeForm[{Opacity[0.609], Thickness[
         Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{2., 0}, {4., 5}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{14.878799999999991`, 36.96447272727273}, {
              38.325932151863306`, 70.46000000000002}}],
            StatusArea[#, 5]& ,
            TagBoxNote->"5"],
           StyleBox["5", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[5, {FontFamily -> "Times"}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{4., 0}, {6., 13}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{36.604472727272714`, 
              58.69014545454546}, {-12.512576405155443`, 70.46000000000001}}],
            StatusArea[#, 13]& ,
            TagBoxNote->"13"],
           StyleBox["13", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[13, {FontFamily -> "Times"}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{6., 0}, {8., 10}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{58.330145454545445`, 80.41581818181817}, {
              6.551864303726589, 70.46000000000002}}],
            StatusArea[#, 10]& ,
            TagBoxNote->"10"],
           StyleBox["10", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[10, {FontFamily -> "Times"}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{8., 0}, {10., 15}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{80.05581818181817, 
              102.14149090909089`}, {-25.22220354441012, 70.46000000000004}}],
            StatusArea[#, 15]& ,
            TagBoxNote->"15"],
           StyleBox["15", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[15, {FontFamily -> "Times"}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{10., 0}, {12., 18}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{101.78149090909089`, 
              123.86716363636363`}, {-44.28664425329214, 70.46000000000004}}],
            StatusArea[#, 18]& ,
            TagBoxNote->"18"],
           StyleBox["18", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[18, {FontFamily -> "Times"}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{12., 0}, {14., 23}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{123.50716363636363`, 
              145.59283636363637`}, {-76.06071210142888, 70.46000000000002}}],
            StatusArea[#, 23]& ,
            TagBoxNote->"23"],
           StyleBox["23", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[23, {FontFamily -> "Times"}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{14., 0}, {16., 4}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{145.23283636363635`, 167.31850909090906`}, {
              44.680745721490645`, 70.46000000000002}}],
            StatusArea[#, 4]& ,
            TagBoxNote->"4"],
           StyleBox["4", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[4, {FontFamily -> "Times"}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{16., 0}, {18., 7}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{166.95850909090908`, 189.0441818181818}, {
              25.616305012608613`, 70.46000000000002}}],
            StatusArea[#, 7]& ,
            TagBoxNote->"7"],
           StyleBox["7", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[7, {FontFamily -> "Times"}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{18., 0}, {20., 1}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{188.6841818181818, 210.7698545454545}, {
              63.74518643037268, 70.46000000000002}}],
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {FontFamily -> "Times"}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{20., 0}, {22., 2}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{210.40985454545452`, 232.49552727272726`}, {
              57.39037286074533, 70.46000000000002}}],
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {FontFamily -> "Times"}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{22., 0}, {24., 2}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{232.13552727272724`, 254.2212}, {
              57.39037286074533, 70.46000000000002}}],
            StatusArea[#, 2]& ,
            TagBoxNote->"2"],
           StyleBox["2", {FontFamily -> "Times"}, StripOnInput -> False]],
          Annotation[#, 
           Style[2, {FontFamily -> "Times"}], 
           "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{False, False},
      AxesLabel->{None, None},
      AxesOrigin->{1.56, 0},
      Frame->True,
      FrameLabel->{{None, None}, {None, None}},
      FrameStyle->Automatic,
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{{0}, {0}},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->Medium,
      LabelStyle->{FontFamily -> "Times"},
      PlotRange->{{2., 24.}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {None, 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]},
    {
     StyleBox["\<\"Degree Distribution\"\>",
      StripOnInput->False,
      FontSlant->Italic]},
    {
     GraphicsBox[{
       {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
        EdgeForm[{Opacity[0.5599999999999999], Thickness[Small]}], {}, 
        {RGBColor[0.987148, 0.8073604000000001, 0.49470040000000004`], 
         EdgeForm[{Opacity[0.5599999999999999], Thickness[Small]}], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{0., 0}, {1., 6}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{18.56738190552441, 32.00344275420337}, {
              61.06055920860376, 67.46000000000001}}],
            StatusArea[#, 6]& ,
            TagBoxNote->"6"],
           StyleBox["6", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[6, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{1., 0}, {2., 24}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{31.643442754203356`, 45.07950360288231}, {
              42.94223683441505, 67.46000000000001}}],
            StatusArea[#, 24]& ,
            TagBoxNote->"24"],
           StyleBox["24", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[24, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{2., 0}, {3., 50}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{44.7195036028823, 58.15556445156126}, {
              16.771326738364685`, 67.46000000000001}}],
            StatusArea[#, 50]& ,
            TagBoxNote->"50"],
           StyleBox["50", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[50, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{3., 0}, {4., 86}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{57.79556445156125, 
              71.23162530024018}, {-19.465318010012737`, 67.46000000000001}}],
            StatusArea[#, 86]& ,
            TagBoxNote->"86"],
           StyleBox["86", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[86, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{4., 0}, {5., 107}, "RoundingRadius" -> 0]},
             ImageSizeCache->{{70.87162530024018, 
              84.30768614891913}, {-40.60336077989956, 67.46000000000001}}],
            StatusArea[#, 107]& ,
            TagBoxNote->"107"],
           StyleBox["107", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[107, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{5., 0}, {6., 118}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{83.94768614891913, 
              97.38374699759808}, {-51.67566889745933, 67.46000000000001}}],
            StatusArea[#, 118]& ,
            TagBoxNote->"118"],
           StyleBox["118", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[118, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{6., 0}, {7., 122}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{97.02374699759808, 
              110.45980784627702`}, {-55.70196275839018, 67.46000000000001}}],
            StatusArea[#, 122]& ,
            TagBoxNote->"122"],
           StyleBox["122", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[122, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{7., 0}, {8., 140}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{110.09980784627702`, 
              123.53586869495597`}, {-73.82028513257887, 67.46000000000001}}],
            StatusArea[#, 140]& ,
            TagBoxNote->"140"],
           StyleBox["140", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[140, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{8., 0}, {9., 108}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{123.17586869495597`, 
              136.61192954363491`}, {-41.60993424513228, 67.46000000000001}}],
            StatusArea[#, 108]& ,
            TagBoxNote->"108"],
           StyleBox["108", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[108, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{9., 0}, {10., 83}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{136.2519295436349, 
              149.68799039231385`}, {-16.445597614314607`, 
              67.46000000000001}}],
            StatusArea[#, 83]& ,
            TagBoxNote->"83"],
           StyleBox["83", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[83, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{10., 0}, {11., 76}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{149.32799039231384`, 
              162.76405124099279`}, {-9.399583357685685, 67.46000000000001}}],
            StatusArea[#, 76]& ,
            TagBoxNote->"76"],
           StyleBox["76", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[76, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{11., 0}, {12., 33}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{162.40405124099277`, 175.84011208967172`}, {
              33.883075647320695`, 67.46000000000001}}],
            StatusArea[#, 33]& ,
            TagBoxNote->"33"],
           StyleBox["33", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[33, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{12., 0}, {13., 21}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{175.48011208967174`, 188.91617293835066`}, {
              45.961957230113164`, 67.46000000000001}}],
            StatusArea[#, 21]& ,
            TagBoxNote->"21"],
           StyleBox["21", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[21, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{13., 0}, {14., 20}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{188.55617293835067`, 201.9922337870296}, {
              46.968530695345876`, 67.46000000000001}}],
            StatusArea[#, 20]& ,
            TagBoxNote->"20"],
           StyleBox["20", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[20, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{14., 0}, {15., 10}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{201.6322337870296, 215.06829463570858`}, {
              57.034265347672935`, 67.46000000000001}}],
            StatusArea[#, 10]& ,
            TagBoxNote->"10"],
           StyleBox["10", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[10, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{15., 0}, {16., 3}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{214.70829463570857`, 228.14435548438752`}, {
              64.0802796043019, 67.46000000000001}}],
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{16., 0}, {17., 3}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{227.7843554843875, 241.22041633306645`}, {
              64.0802796043019, 67.46000000000001}}],
            StatusArea[#, 3]& ,
            TagBoxNote->"3"],
           StyleBox["3", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[3, {}], "Tooltip"]& ], 
         TagBox[
          TooltipBox[
           TagBox[
            DynamicBox[{
              FEPrivate`If[
               CurrentValue["MouseOver"], 
               EdgeForm[{
                 GrayLevel[0.5], 
                 AbsoluteThickness[1.5], 
                 Opacity[0.66]}], {}, {}], 
              RectangleBox[{17., 0}, {18., 1}, "RoundingRadius" -> 0]},
             
             ImageSizeCache->{{240.86041633306644`, 254.2964771817454}, {
              66.0934265347673, 67.46000000000001}}],
            StatusArea[#, 1]& ,
            TagBoxNote->"1"],
           StyleBox["1", {}, StripOnInput -> False]],
          Annotation[#, 
           Style[1, {}], 
           "Tooltip"]& ]}, {}, {}}, {{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{-0.36, 0},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->Medium,
      PlotRange->{{0., 18.}, {All, All}},
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.02], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.7020765179940734`*^9, {3.7020766321217165`*^9, 3.7020766703965063`*^9}, {
   3.7020767605336113`*^9, 3.7020767813779316`*^9}, {3.7020769380607867`*^9, 
   3.7020770161666613`*^9}, 3.7020772006727223`*^9, {3.7020772339662333`*^9, 
   3.70207733845893*^9}, {3.702077416125791*^9, 3.7020774684291506`*^9}, {
   3.7020775000716677`*^9, 3.7020775169820867`*^9}, 3.7020775488744125`*^9, {
   3.702077699800476*^9, 3.7020777217569633`*^9}, 3.70208148681517*^9, 
   3.7020816547530518`*^9, {3.7020839742275767`*^9, 3.70208398167034*^9}, 
   3.702084161770049*^9, {3.702638824905944*^9, 3.7026388373574705`*^9}, 
   3.702642366708701*^9, 3.7026448869397182`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Application", "ChapterNC",
 CellChangeTimes->{
  3.6407012833362303`*^9, {3.694378413668969*^9, 3.6943784252962637`*^9}}],

Cell["\<\
The test network created above will be used to study the spread of an \
infectious disease in such a population.\
\>", "Text",
 CellChangeTimes->{{3.702078653945387*^9, 3.70207869644129*^9}}],

Cell["\<\
We consider that the disease can be transmitted only through contact, so only \
individuals connected directly with a link has a chance to get the diseases. \
Furthermore, there is a global infection chance for each individual, which is \
independent of the number of connections the individual has. For simplicity, \
we consider that the local connection chance of infection is also a set \
possibility.\
\>", "Text",
 CellChangeTimes->{{3.7020787000740786`*^9, 3.7020788332265515`*^9}, {
  3.7020789232506995`*^9, 3.702078924521202*^9}, {3.7020791975618525`*^9, 
  3.7020792276408043`*^9}, {3.7026389895218687`*^9, 3.702639007562306*^9}}],

Cell[TextData[{
 "The global infection chance for each time step is defined as ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["p", "G"], "=", 
    SuperscriptBox["N", 
     RowBox[{"-", "1"}]]}], TraditionalForm]]],
 ". The local infection chance should be defined by the disease, and this \
study is considered as to be 0.5 for a highly contagious disease, like \
influenza."
}], "Text",
 CellChangeTimes->{{3.702078926128682*^9, 3.702078986409711*^9}, {
  3.702079454632388*^9, 3.702079519288824*^9}, {3.7020841120116205`*^9, 
  3.7020841132260303`*^9}, {3.702639019275072*^9, 3.7026390438101254`*^9}}],

Cell["\<\
An infected individual is taken to be infectious for a number of days based \
on a Poisson distribution with a mean of 10 days. At the end of this period \
the individual is either taken to the recovered group (chance of 0.1) which \
is immune to the disease or the susceptible group. This choice is made for a \
mild, non-persistent disease.\
\>", "Text",
 CellChangeTimes->{{3.7020796416692376`*^9, 3.7020797267006254`*^9}, {
  3.7026390522095284`*^9, 3.702639074434039*^9}, {3.702645132243657*^9, 
  3.7026451511713424`*^9}}],

Cell["\<\
Initially, we consider that only 10 individuals are infected, and that those \
are spread randomly along the population. Afterwards, we run a simulation \
with a time step of 1 day. First, we want to check if by retaining the \
connections static we can achieve the results of the analytical SIRS model.\
\>", "Text",
 CellChangeTimes->{{3.702639094977742*^9, 3.702639219010416*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Agraph", "=", "AgraphInit"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pG", "=", 
   RowBox[{"N", "[", 
    RowBox[{"1", "/", "Ntotal"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pL", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmax", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"state", "=", 
   RowBox[{"Association", "[", 
    RowBox[{"Apply", "[", 
     RowBox[{"Sequence", ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Rule", "[", 
         RowBox[{"i", ",", "\"\<susceptible\>\""}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "Ntotal"}], "}"}]}], "]"}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"infectionTime", "=", 
   RowBox[{"Association", "[", 
    RowBox[{"Apply", "[", 
     RowBox[{"Sequence", ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Rule", "[", 
         RowBox[{"i", ",", "0"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "Ntotal"}], "}"}]}], "]"}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"infectionTimeTotal", "=", "infectionTime"}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"initial", " ", "infection"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initialInfectionSize", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{"Range", "[", "Ntotal", "]"}], ",", "initialInfectionSize"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", "initialInfectionSize"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"state", "[", 
      RowBox[{"init", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "]"}], "=", "\"\<infected\>\""}], ";", 
    RowBox[{
     RowBox[{"infectionTime", "[", 
      RowBox[{"init", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "]"}], "=", "1"}], ";", 
    RowBox[{
     RowBox[{"infectionTimeTotal", "[", 
      RowBox[{"init", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "]"}], "=", 
     RowBox[{"RandomVariate", "[", 
      RowBox[{"PoissonDistribution", "[", "T", "]"}], "]"}]}], ";"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Ninfected", "=", 
    RowBox[{"{", "initialInfectionSize", "}"}]}], ";", 
   RowBox[{"Nrecovered", "=", 
    RowBox[{"{", "0", "}"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"time", " ", "loop"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"res", "=", 
   RowBox[{"Reap", "@", 
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"stateTemp", "=", "state"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "<", "Ntotal"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"increase", " ", "infected", " ", "time"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"infectionTime", "[", "i", "]"}], ">", "0"}], ",", 
            RowBox[{
             RowBox[{"infectionTime", "[", "i", "]"}], "=", 
             RowBox[{
              RowBox[{"infectionTime", "[", "i", "]"}], "+", "1"}]}]}], "]"}],
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"if", " ", "infected"}], ",", " ", 
            RowBox[{
            "infect", " ", "others", " ", "that", " ", "are", " ", "directly",
              " ", "linked"}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"state", "[", "i", "]"}], "\[Equal]", 
             "\"\<infected\>\""}], ",", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"j", "=", "1"}], ",", 
              RowBox[{"j", "<", "Ntotal"}], ",", 
              RowBox[{
               RowBox[{"j", "++"}], "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"And", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Agraph", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], ">", "0"}], ",", 
                   RowBox[{
                    RowBox[{"RandomReal", "[", "]"}], "\[LessEqual]", "pL"}], 
                   ",", 
                   RowBox[{
                    RowBox[{"state", "[", "j", "]"}], "\[Equal]", 
                    "\"\<susceptible\>\""}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"stateTemp", "[", "j", "]"}], "=", 
                   "\"\<infected\>\""}], ";", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"infectionTime", "[", "j", "]"}], "=", "1"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"infectionTimeTotal", "[", "j", "]"}], "=", 
                   RowBox[{"RandomVariate", "[", 
                    RowBox[{"PoissonDistribution", "[", "T", "]"}], "]"}]}], 
                  ";"}]}], "\[IndentingNewLine]", "]"}]}]}], 
             "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"global", " ", "infection", " ", "chance"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"And", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"state", "[", "i", "]"}], "\[Equal]", 
               "\"\<susceptible\>\""}], ",", 
              RowBox[{
               RowBox[{"RandomReal", "[", "]"}], "\[LessEqual]", "pG"}]}], 
             "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"stateTemp", "[", "i", "]"}], "=", "\"\<infected\>\""}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"infectionTime", "[", "i", "]"}], "=", "1"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"infectionTimeTotal", "[", "i", "]"}], "=", 
              RowBox[{"RandomVariate", "[", 
               RowBox[{"PoissonDistribution", "[", "T", "]"}], "]"}]}], 
             ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"state", "=", "stateTemp"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "remove", " ", "from", " ", "infected", " ", "with", " ", "end", " ", 
         "of", " ", "time"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "<", "Ntotal"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"increase", " ", "infected", " ", "time"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"And", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"state", "[", "i", "]"}], "\[Equal]", 
               "\"\<infected\>\""}], ",", 
              RowBox[{
               RowBox[{"infectionTime", "[", "i", "]"}], "\[GreaterEqual]", 
               RowBox[{"infectionTimeTotal", "[", "i", "]"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"RandomReal", "[", "]"}], "\[LessEqual]", "0.1"}], ",",
               "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"state", "[", "i", "]"}], "=", "\"\<recovered\>\""}], 
               ";", 
               RowBox[{
                RowBox[{"infectionTime", "[", "i", "]"}], "=", "0"}], ";", 
               RowBox[{
                RowBox[{"infectionTimeTotal", "[", "i", "]"}], "=", "0"}], 
               ";"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"state", "[", "i", "]"}], "=", 
                "\"\<susceptible\>\""}], ";", 
               RowBox[{
                RowBox[{"infectionTime", "[", "i", "]"}], "=", "0"}], ";", 
               RowBox[{
                RowBox[{"infectionTimeTotal", "[", "i", "]"}], "=", "0"}], 
               ";"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]",
            "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", "counters", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Sow", "[", 
        RowBox[{
         RowBox[{"Count", "[", 
          RowBox[{"state", ",", "\"\<recovered\>\""}], "]"}], ",", "rec"}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Sow", "[", 
        RowBox[{
         RowBox[{"Count", "[", 
          RowBox[{"state", ",", "\"\<infected\>\""}], "]"}], ",", "inf"}], 
        "]"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tmax"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nrecovered", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"Nrecovered", ",", 
     RowBox[{"res", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ninfected", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"Ninfected", ",", 
     RowBox[{"res", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Ninfected", ",", "Nrecovered", ",", 
     RowBox[{"Ntotal", "-", "Ninfected", "-", "Nrecovered"}]}], "}"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Blue", ",", "Green"}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"LineLegend", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Red", ",", "Blue", ",", "Green"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Infected\>\"", ",", "\"\<Recovered\>\"", ",", 
        "\"\<Susceptible\>\""}], "}"}]}], "]"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Static Links\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7020792815953217`*^9, 3.7020793269460745`*^9}, {
   3.702079370333293*^9, 3.702079448667011*^9}, {3.7020795231791067`*^9, 
   3.7020795540580063`*^9}, {3.702079634131651*^9, 3.7020796373857374`*^9}, {
   3.7020797369089985`*^9, 3.702079749729048*^9}, {3.702079784938052*^9, 
   3.7020798539372053`*^9}, {3.7020798870712347`*^9, 3.70208026242209*^9}, {
   3.702080339428587*^9, 3.702080592948307*^9}, {3.7020806959373937`*^9, 
   3.702080746907697*^9}, {3.702080790133794*^9, 3.7020809352202835`*^9}, {
   3.702081086618723*^9, 3.7020812790176516`*^9}, {3.7020814713289614`*^9, 
   3.7020815082364645`*^9}, 3.702081638477483*^9, {3.7020816868816385`*^9, 
   3.702081691329254*^9}, {3.70208174199673*^9, 3.7020818389086165`*^9}, {
   3.702081874222535*^9, 3.7020818959602957`*^9}, {3.702081947913335*^9, 
   3.7020820181387615`*^9}, {3.702082055537871*^9, 3.7020821274493237`*^9}, {
   3.7020822356449394`*^9, 3.7020823833544416`*^9}, {3.7020837197841916`*^9, 
   3.7020837866276565`*^9}, {3.70208382071759*^9, 3.7020839585489454`*^9}, {
   3.702084008809585*^9, 3.7020841063531075`*^9}, {3.702084170235727*^9, 
   3.7020841740963907`*^9}, 3.702084282578228*^9, {3.7020843257373877`*^9, 
   3.7020844731609635`*^9}, {3.702639227394062*^9, 3.7026392471949673`*^9}, {
   3.7026423765539627`*^9, 3.7026423825048943`*^9}, {3.7026424615497656`*^9, 
   3.702642463249491*^9}, 3.702645117935811*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        PointBox[CompressedData["
1:eJxd1DtPFFEYxvETK8opLKawWIgxG2PICKgLqBwu6gKiw3JbOmIkoSMoEMDb
AVEuSrIfYT8CJeWUlltSbmm5JSWQ9/8UM5tsnvzmOe85s5vZ7f6wXlu945xb
vXnfpr06I5b3PRfIGbKL/EhGlsknfNcyDTi2vDrC9yzjv7hkWT/DPZZVmfs4
1voHlp0/uGy5Jj+09Kf4Eeef4F7LLvUJ56l/zH5yHz7G/ewvD1iuyE8sK/JT
y7L8zDLV91GxPP+NBy0v5CHOk4e5X/k5+8kvLEvyS8vLX3jEMpG9ZXZoGXBV
/ShWj8vYjVlWftLjNezGWa8e/z+gn7D8h8NEoX9lGavH7X3615YXOOCm+jeW
dfU4Ul/lPJ7XgGP1k3we9TjW8z1V6HHyg37aMsMB++/0b/MOuPONnt9dCwfs
1b/jPPW4qf695flXelzCLmX+C/vibI/1uI0z3MJuNr/e4/Yu87i1wzqc0Lua
ZYp9Ld+HQp/hJvu5Oa5vM48bOODOFuu0Hrt5es3jkubn8+szHNG7Bc6j9zjC
ASeax6nOX8zb48Ym87j9mXns6N0SSe9xi//jUOizQu/qhXnc0DyONI+D5pe5
vsE8Xtnw19hQwuA=
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        PointBox[CompressedData["
1:eJxd1DlvE0EYBuARFeUWFCkoDEIoQgiZO5wZ7nCbcBcgK2ARLsXcNwykoUxJ
6ZLSJaVLypQpt6T0TwA0zxTelaxXz777jcdrrzctLM331oUQev9e/zMf49kw
ecRJrm+4anhDw1PFcmPDrTi5zubGdVvktNwq9zXOR7lNnpLbc6bzvENeke2c
o2u8M2e8ybv0t3m3vCP36O/yXu/XbexzQe6X9+RMzsF9PpCz7vFB+3nAh6y/
yIdzdh/yEft5xEf5Mc/yE3bf6qfWLfdxSR7L2enreczhuP0/03N4Lk/kHHLi
1gv9SfOcuHqp9z0OOXH7lf60z8OJ42v9mZwrnLj9Rj+Xs8+J69Kftd5bPScO
5+z3nfPc5+B3t1p6ju/1F+yPE9elv+j6D3oecLhk/dJz66P+svOceFz6Ts72
J+/DiROv8qhc/9m85yhx5JoTV1/M84DDvPU5cpXMc5tH3OdwNecvjrxW5jl8
Nc8VB8/9NEee4cRzZZ4Xy/z1nCtlnn+Wef5d5vlPmb+Rc+qbee5wanjEXQ7+
p76Xef5R5nlY5nmtzN+adOSwbJ5bPOIOB/+LXY7cX45/AZovtnY=
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0]], 
        PointBox[CompressedData["
1:eJxdlLtOXDEQhi2qlBQUKVIsEYqiKEJcAuSOQwIs12UvkM3mAkLaNnmDyBUF
EoKSxzllHodHYMn5PkvHK61+fZ7xeGbsObPnf3rjqRDCePJ/0Pp3t/5f2teR
hVr/XcGPar29hKdrTRfwTK03f+HHtcbf8BP8v8MttIs+rbU6gufwP4afYf8K
P8f+DX5Ra+sMfsn5p/B8cf4C8X7Ci/iP4CXs7l8u/F+hxltB3b/Keea7Rvwf
8Gv0F/oGu/HeFv7viGe974v4H/A/gT9il9fJ3/2xmX+C04D1T8TDP8G5/xus
k1+Sjf8Z/yHrcND+BdUOR+97szh/s9i/VeyHK+vdbuab4NyvdmGHc/07sPHh
fL+7zXyTrH2PdfJJcKV9n3XrKzgcFOfD9iMcEk+7bP86qPZOM15gznxvEa58
D84h+TqXnufc2r8oWw8cmZeqW9TXw068CHs/CQ70r4Lz/fZR3l/sF/lr9/x+
M58wKPKHE/X6DvxeVHDuv33G33dgP/1u2Q/vxXpzXWieW+9L+6jpl+fXPlk/
XDmP1mX+2n1/5mH+nmv9svuGTT/n0Hj2ZdL/exXdtPs=
         "]]}, {}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
     PlotRange -> {{0., 101.}, {0, 1001.}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{0}, {0}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     LabelStyle -> {FontFamily -> "Times"}, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Static Links\"", TraditionalForm], 
     PlotRange -> {{0., 101.}, {0, 1001.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Infected\"", "\"Recovered\"", "\"Susceptible\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Times", FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 1, 0], Editable -> False, Selectable -> False]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7026450877350893`*^9, 3.702645399536026*^9}]
}, Open  ]],

Cell["\<\
We can see that, exactly as expected by the analytical model, we observe an \
outbreak initially, regardless of the position of the infected seed, which \
soon subsides and then the disease is eliminated. We can also see that the \
pool of susceptibles still holds a \
\>", "Text",
 CellChangeTimes->{{3.7026393360097294`*^9, 3.702639413898552*^9}, 
   3.702639448609217*^9, {3.7026449648348894`*^9, 3.7026449872030325`*^9}}],

Cell["\<\
Afterwards, we introduce non-static links to the model. We consider that the \
links move \[OpenCurlyDoubleQuote]slowly\[CloseCurlyDoubleQuote] over time, \
at a small, daily rate. The chance of a new connection is proportionate to \
the lack of connections and the chance of a connection breaking is \
proportionate to the connections the individual already has. The choice is \
that the number of connections an individual stays the same as the time \
passes; its just that the individual\[CloseCurlyQuote]s neighbors change.\
\>", "Text",
 CellChangeTimes->{{3.7026394145874424`*^9, 3.7026394753783493`*^9}, {
  3.7026477057143583`*^9, 3.702647790546052*^9}, {3.7026489144737177`*^9, 
  3.702648959627825*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Agraph", "=", "AgraphInit"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pG", "=", 
   RowBox[{"N", "[", 
    RowBox[{"1", "/", "Ntotal"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pL", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmax", "=", "100"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"state", "=", 
   RowBox[{"Association", "[", 
    RowBox[{"Apply", "[", 
     RowBox[{"Sequence", ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Rule", "[", 
         RowBox[{"i", ",", "\"\<susceptible\>\""}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "Ntotal"}], "}"}]}], "]"}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"infectionTime", "=", 
   RowBox[{"Association", "[", 
    RowBox[{"Apply", "[", 
     RowBox[{"Sequence", ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Rule", "[", 
         RowBox[{"i", ",", "0"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "Ntotal"}], "}"}]}], "]"}]}], "]"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"infectionTimeTotal", "=", "infectionTime"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"connections", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Count", "[", 
      RowBox[{
       RowBox[{"Flatten", "@", "Agraph"}], ",", "1"}], "]"}], "/", "2"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pNL", "=", 
    RowBox[{"N", "[", 
     RowBox[{"1", "/", 
      RowBox[{"connections", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"initial", " ", "infection"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"initialInfectionSize", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"init", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{
     RowBox[{"Range", "[", "Ntotal", "]"}], ",", "initialInfectionSize"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "\[LessEqual]", "initialInfectionSize"}], ",", 
   RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"state", "[", 
      RowBox[{"init", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "]"}], "=", "\"\<infected\>\""}], ";", 
    RowBox[{
     RowBox[{"infectionTime", "[", 
      RowBox[{"init", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "]"}], "=", "1"}], ";", 
    RowBox[{
     RowBox[{"infectionTimeTotal", "[", 
      RowBox[{"init", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "]"}], "=", 
     RowBox[{"RandomVariate", "[", 
      RowBox[{"PoissonDistribution", "[", "T", "]"}], "]"}]}], ";"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Ninfected", "=", 
    RowBox[{"{", "initialInfectionSize", "}"}]}], ";", 
   RowBox[{"Nrecovered", "=", 
    RowBox[{"{", "0", "}"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"time", " ", "loop"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"res", "=", 
   RowBox[{"Reap", "@", 
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"stateTemp", "=", "state"}], ";", "\[IndentingNewLine]", 
       RowBox[{"AgraphTemp", "=", "Agraph"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", "Ntotal"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"increase", " ", "infected", " ", "time"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"infectionTime", "[", "i", "]"}], ">", "0"}], ",", 
            RowBox[{
             RowBox[{"infectionTime", "[", "i", "]"}], "=", 
             RowBox[{
              RowBox[{"infectionTime", "[", "i", "]"}], "+", "1"}]}]}], "]"}],
           ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"if", " ", "infected"}], ",", " ", 
            RowBox[{
            "infect", " ", "others", " ", "that", " ", "are", " ", "directly",
              " ", "linked"}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"state", "[", "i", "]"}], "\[Equal]", 
             "\"\<infected\>\""}], ",", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"j", "=", "1"}], ",", 
              RowBox[{"j", "<", "Ntotal"}], ",", 
              RowBox[{
               RowBox[{"j", "++"}], "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"And", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Agraph", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], ">", "0"}], ",", 
                   RowBox[{
                    RowBox[{"RandomReal", "[", "]"}], "\[LessEqual]", "pL"}], 
                   ",", 
                   RowBox[{
                    RowBox[{"state", "[", "j", "]"}], "\[Equal]", 
                    "\"\<susceptible\>\""}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"stateTemp", "[", "j", "]"}], "=", 
                   "\"\<infected\>\""}], ";", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"infectionTime", "[", "j", "]"}], "=", "1"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"infectionTimeTotal", "[", "j", "]"}], "=", 
                   RowBox[{"RandomVariate", "[", 
                    RowBox[{"PoissonDistribution", "[", "T", "]"}], "]"}]}], 
                  ";"}]}], "\[IndentingNewLine]", "]"}]}]}], 
             "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], 
          ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{"global", " ", "infection", " ", "chance"}], "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"And", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"state", "[", "i", "]"}], "\[Equal]", 
               "\"\<susceptible\>\""}], ",", 
              RowBox[{
               RowBox[{"RandomReal", "[", "]"}], "\[LessEqual]", "pG"}]}], 
             "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"stateTemp", "[", "i", "]"}], "=", "\"\<infected\>\""}],
              ";", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"infectionTime", "[", "i", "]"}], "=", "1"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"infectionTimeTotal", "[", "i", "]"}], "=", 
              RowBox[{"RandomVariate", "[", 
               RowBox[{"PoissonDistribution", "[", "T", "]"}], "]"}]}], 
             ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"state", "=", "stateTemp"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "remove", " ", "from", " ", "infected", " ", "with", " ", "end", " ", 
         "of", " ", "time"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", "Ntotal"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"increase", " ", "infected", " ", "time"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"And", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"state", "[", "i", "]"}], "\[Equal]", 
               "\"\<infected\>\""}], ",", 
              RowBox[{
               RowBox[{"infectionTime", "[", "i", "]"}], "\[GreaterEqual]", 
               RowBox[{"infectionTimeTotal", "[", "i", "]"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"RandomReal", "[", "]"}], "\[LessEqual]", "0.5"}], ",",
               "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"state", "[", "i", "]"}], "=", "\"\<recovered\>\""}], 
               ";", 
               RowBox[{
                RowBox[{"infectionTime", "[", "i", "]"}], "=", "0"}], ";", 
               RowBox[{
                RowBox[{"infectionTimeTotal", "[", "i", "]"}], "=", "0"}], 
               ";"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"state", "[", "i", "]"}], "=", 
                "\"\<susceptible\>\""}], ";", 
               RowBox[{
                RowBox[{"infectionTime", "[", "i", "]"}], "=", "0"}], ";", 
               RowBox[{
                RowBox[{"infectionTimeTotal", "[", "i", "]"}], "=", "0"}], 
               ";"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]",
            "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"change", " ", "links"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "<", "Ntotal"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"pOL", "=", 
           RowBox[{"N", "[", 
            RowBox[{"10", "/", 
             RowBox[{"(", 
              RowBox[{"Ntotal", "-", 
               RowBox[{"Count", "[", 
                RowBox[{
                 RowBox[{"Agraph", "[", 
                  RowBox[{"[", 
                   RowBox[{"150", ",", "All"}], "]"}], "]"}], ",", "1"}], 
                "]"}]}], ")"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", 
             RowBox[{"i", "+", "1"}]}], ",", 
            RowBox[{"j", "<", " ", "Ntotal"}], ",", 
            RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Which", "[", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
               "chance", " ", "for", " ", "a", " ", "new", " ", 
                "connection"}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"And", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Agraph", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "\[Equal]", "0"}], 
                 ",", 
                 RowBox[{
                  RowBox[{"RandomReal", "[", "]"}], "\[LessEqual]", "pNL"}]}],
                 "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"AgraphTemp", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", "1"}], ";", 
                RowBox[{
                 RowBox[{"AgraphTemp", "[", 
                  RowBox[{"[", 
                   RowBox[{"j", ",", "i"}], "]"}], "]"}], "=", "1"}]}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                "chance", " ", "that", " ", "an", " ", "existing", " ", 
                 "link", " ", "will", " ", "be", " ", "broken"}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{"And", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Agraph", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "j"}], "]"}], "]"}], "\[Equal]", "0"}], 
                 ",", 
                 RowBox[{
                  RowBox[{"RandomReal", "[", "]"}], "\[LessEqual]", "pOL"}]}],
                 "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"AgraphTemp", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", "0"}], ";", 
                RowBox[{
                 RowBox[{"AgraphTemp", "[", 
                  RowBox[{"[", 
                   RowBox[{"j", ",", "i"}], "]"}], "]"}], "=", "0"}]}]}], 
              "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
           "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Agraph", "=", "AgraphTemp"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", "counters", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Sow", "[", 
        RowBox[{
         RowBox[{"Count", "[", 
          RowBox[{"state", ",", "\"\<recovered\>\""}], "]"}], ",", "rec"}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Sow", "[", 
        RowBox[{
         RowBox[{"Count", "[", 
          RowBox[{"state", ",", "\"\<infected\>\""}], "]"}], ",", "inf"}], 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Sow", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Count", "[", 
           RowBox[{
            RowBox[{"Flatten", "@", "Agraph"}], ",", "1"}], "]"}], "/", "2"}],
          ",", "con"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"pNL", "=", 
        RowBox[{"N", "[", 
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"10", 
            RowBox[{"connections", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ")"}]}], "]"}]}], ";"}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "tmax"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Nrecovered", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"Nrecovered", ",", 
     RowBox[{"res", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Ninfected", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"Ninfected", ",", 
     RowBox[{"res", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"connections", "=", 
   RowBox[{"Join", "[", 
    RowBox[{"connections", ",", 
     RowBox[{"res", "[", 
      RowBox[{"[", 
       RowBox[{"2", ",", "3"}], "]"}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"Ninfected", ",", "Nrecovered", ",", 
     RowBox[{"Ntotal", "-", "Ninfected", "-", "Nrecovered"}]}], "}"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Scientific\>\""}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Red", ",", "Blue", ",", "Green"}], "}"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"LineLegend", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Red", ",", "Blue", ",", "Green"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Infected\>\"", ",", "\"\<Recovered\>\"", ",", 
        "\"\<Susceptible\>\""}], "}"}]}], "]"}]}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Non-Static Links\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7020792815953217`*^9, 3.7020793269460745`*^9}, {
   3.702079370333293*^9, 3.702079448667011*^9}, {3.7020795231791067`*^9, 
   3.7020795540580063`*^9}, {3.702079634131651*^9, 3.7020796373857374`*^9}, {
   3.7020797369089985`*^9, 3.702079749729048*^9}, {3.702079784938052*^9, 
   3.7020798539372053`*^9}, {3.7020798870712347`*^9, 3.70208026242209*^9}, {
   3.702080339428587*^9, 3.702080592948307*^9}, {3.7020806959373937`*^9, 
   3.702080746907697*^9}, {3.702080790133794*^9, 3.7020809352202835`*^9}, {
   3.702081086618723*^9, 3.7020812790176516`*^9}, {3.7020814713289614`*^9, 
   3.7020815082364645`*^9}, 3.702081638477483*^9, {3.7020816868816385`*^9, 
   3.702081691329254*^9}, {3.70208174199673*^9, 3.7020818389086165`*^9}, {
   3.702081874222535*^9, 3.7020818959602957`*^9}, {3.702081947913335*^9, 
   3.7020820181387615`*^9}, {3.702082055537871*^9, 3.7020821274493237`*^9}, {
   3.7020822356449394`*^9, 3.7020823833544416`*^9}, {3.7020837197841916`*^9, 
   3.7020837866276565`*^9}, {3.70208382071759*^9, 3.7020839585489454`*^9}, {
   3.702084008809585*^9, 3.7020841063531075`*^9}, {3.702084170235727*^9, 
   3.7020841740963907`*^9}, 3.702084282578228*^9, {3.7020843257373877`*^9, 
   3.7020844731609635`*^9}, {3.702639227394062*^9, 3.7026392471949673`*^9}, {
   3.7026395619881053`*^9, 3.702639573917098*^9}, {3.7026396256127996`*^9, 
   3.7026397109236526`*^9}, {3.702639843530179*^9, 3.702639871733171*^9}, {
   3.702639915755603*^9, 3.702639950139945*^9}, {3.7026399972364836`*^9, 
   3.7026401614873285`*^9}, {3.702640199288452*^9, 3.7026402022842526`*^9}, {
   3.702640234595377*^9, 3.7026402503597717`*^9}, {3.7026402826977897`*^9, 
   3.7026403318896394`*^9}, {3.702640418431818*^9, 3.7026404192948356`*^9}, {
   3.702640479752385*^9, 3.7026404988067875`*^9}, {3.7026405419279766`*^9, 
   3.702640638687481*^9}, {3.702640679990052*^9, 3.7026407095673018`*^9}, {
   3.702640756663001*^9, 3.702640900160345*^9}, {3.702640946142887*^9, 
   3.702640962974101*^9}, {3.7026409945427732`*^9, 3.7026410450793247`*^9}, {
   3.7026411201185594`*^9, 3.7026411330546165`*^9}, {3.702641164813922*^9, 
   3.702641247179432*^9}, {3.702641293661185*^9, 3.7026413181060557`*^9}, {
   3.7026421686722965`*^9, 3.70264216920553*^9}, {3.702642412838592*^9, 
   3.7026424134084687`*^9}, {3.702644857274519*^9, 3.7026448634423223`*^9}, {
   3.7026454856262436`*^9, 3.7026456537169247`*^9}, {3.7026460925847015`*^9, 
   3.7026461011989336`*^9}, {3.7026461534411883`*^9, 3.702646156846691*^9}, {
   3.7026462493592367`*^9, 3.702646258807583*^9}, {3.7026463722315817`*^9, 
   3.702646376119012*^9}, {3.7026465235430164`*^9, 3.7026465256375957`*^9}, {
   3.7026470623322353`*^9, 3.7026471011283245`*^9}, {3.7026471338576612`*^9, 
   3.702647168896078*^9}, {3.702647361751786*^9, 3.7026473879545918`*^9}, {
   3.702647536336488*^9, 3.7026475596401224`*^9}, {3.702647667806736*^9, 
   3.7026476824703903`*^9}, {3.7026479500022545`*^9, 3.702647956959483*^9}, {
   3.7026480201180477`*^9, 3.702648033511563*^9}, {3.7026481044809074`*^9, 
   3.702648127429761*^9}, {3.702648271820058*^9, 3.7026482748398457`*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {
        Hue[0.67, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         RGBColor[1, 0, 0]], 
        PointBox[CompressedData["
1:eJxd1M9KW0EUx/FDVy6z6KILF2kQKSLFf9XWf5kmVq39l6RqK4KKmLZQJCgq
UrCMUqiluu/SR5llH8NHyCOonO+5MudC+PGZMzP3Tu7cebzdabUfiEj79neX
enWrmn2BBnKO7CE3yJJmaQ8/1Fw8xY80wx/cq3l+gcvUL3FF87/VeY5/f3G/
Ztfme6JZPscD5G9ykPl+4af4DA9p9tjzDjPfTzyiWTrBo5rpBx6jbn6meXWM
xzWvj/AE9UP8XDMc4BfkPjlJ2v87pRk7eBrv4hnm+45nWc83XOX+X3HQ3PrC
PPhqh/pLzbRNHQuWGu2bJC72R51cp47DGu22r1ap47hM+yvu36Qdx/fU5/E7
EovVF8i31HF8Tfuim9dZrF/djauRS7Tzv0Vs70nekLz3aB7Jn8v2YTSzD4V1
2b61ddp3UKwTR2f5QFaom/nupJHXg3Ns5P2Tme9amrmDmXMgurq9Rzs3pJX3
D628Hp2Ts3zMHcycU9E5me1cW84dnIt9yLmYnGUldzDbeOfk+tu+L8av5v2j
c3L95ZMb7xydk9muz7mDczTbeGdZyx3ufQNxB5rg
         "]]}, {
        Hue[0.9060679774997897, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 0, 1]], 
        PointBox[CompressedData["
1:eJxd1LlKQ1EUheGDVcoUFiksoogEEYlzHHOM03XWOMUuCJGAhbEQAoIc5+tQ
pMxjWFqeR0iZ0kfII6jstZCzA/Lzse5O0sTes8tipcsYU/n9+6u8OnkTvmzI
hHLShs91q6bQAbQHHUPTaAHtQ7fRfqk/DN8nXYYz6Dk6iOcv4CFp9goeliav
4ay0UYdHpO4GHkVvw+8dOXhcmrqDJ/D59KS0eg9PoQ9oDs/T09LmIzyD93+C
Z/E8PSe1z/C8tEMvSGsvcF76RVtpIpY6uAabRWmLO5x7xV6QxrCDm9yXpG3u
cOYN+7K0Cju4wX0F35c73Oa+ir5jhxOwWcPncYcj7pG0zh2Oua9LP7nDnvuG
tMUd/ua+Ke1wh80HuiVNwk6Zv4MUdzjDfUdquSubXWnEHS5x3wtt4TKfV/Zw
jff7oS1c572yVzbF0BZ2vFf2yuYgtIVj3it7ZYP/Kw3eKztlr2yO1L2yU/bK
5ljdKztlDzd5fxLaKjtlr2xK6l7ZKXtlc6ru//0DporBAQ==
         "]]}, {
        Hue[0.1421359549995791, 0.6, 0.6], 
        Directive[
         PointSize[0.007333333333333334], 
         CapForm["Butt"], 
         AbsoluteThickness[1.6], 
         RGBColor[0, 1, 0]], 
        PointBox[CompressedData["
1:eJxt0rlKQ0EUxvHBytLCwsJCRURExH3XjGtcshmTeG2FgJ0vYDGdhaCvNI/h
Y/gILvP/RuagED5+OXMy13vO9MNTdzjinBt+f34y/X3WfuPi3fNFyuoNj6b8
eMVj5As5nrLzjCfIR3IyZbzFUynDCZ4hPTlL/RzPkVfkPPU2XsCqL3LfDV5K
6bt42XgFD/Aqv9fBa6TuW6dexxv4Am+SDXKLuryNr/EOqft2jfc4r/v3jQ9w
Ex+S+v9r5rwvHfTedd9RyogDdi3yuPz9IOt9aq7MW3PO7/uU71XHeT/OON+n
jqPmo73A2pPAeVcvrTlF1ZmT5q255fpl6WCc91D98h3JXAPWnH1FvVE674Xq
TVPHUfVWeT4Ya09zf9vUmWvk+bzmrOc19Wisued+46C9UL/2UPd3Tb9xMI7G
2qvcbxyM817p/p7pNw698nw0dv3S2tPcbxzNee1N7h+YfuNorD3Lz28cjHNf
9X9641CVfdHY3Zv7//wF3JqxNQ==
         "]]}, {}}}, {}, {}, {{}, {}}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0., 0}, 
     PlotRange -> {{0., 101.}, {0, 1001.}}, PlotRangeClipping -> True, 
     ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0., 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, 
     FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> Automatic, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {{0}, {0}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     LabelStyle -> {FontFamily -> "Times"}, 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
            Part[#, 1]], 
           (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Non-Static Links\"", TraditionalForm], 
     PlotRange -> {{0., 101.}, {0, 1001.}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Infected\"", "\"Recovered\"", "\"Susceptible\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Times", FontFamily -> "Arial"}, Background -> 
         Automatic, StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[1, 0, 0]"], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[1, 0, 0], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0, 0, 1]"], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 0, 1], Editable -> False, Selectable -> False], 
               ",", 
               InterpretationBox[
                ButtonBox[
                 TooltipBox[
                  GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                   True, FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                   FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                   Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                  "RGBColor[0, 1, 0]"], Appearance -> None, BaseStyle -> {}, 
                 BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                 ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                   If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                 Automatic, Method -> "Preemptive"], 
                RGBColor[0, 1, 0], Editable -> False, Selectable -> False]}], 
             "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"False", ",", "False", ",", "False"}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontFamily", "\[Rule]", "\"Times\""}], "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
         "]"}]& ), Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.7026482911152735`*^9, 3.702648874367629*^9}]
}, Open  ]],

Cell["\<\
Once again we observe that the behavior of the system remains similar to that \
of the analytical SIRS model.\
\>", "Text",
 CellChangeTimes->{{3.7026489726337047`*^9, 3.702649008833381*^9}}],

Cell["\<\
To continue from here we need to introduce a finer control of the creation \
and destruction of links that applies mostly to the communities and is not \
global, as set before, to introduce the appearance of persistent seeds, and \
also to introduce the chance of a disease\[CloseCurlyQuote]s mutation over \
time, making recovered individuals susceptible again.\
\>", "Text",
 CellChangeTimes->{{3.7026490713619533`*^9, 3.70264912739382*^9}, {
  3.702649245153927*^9, 3.702649282490969*^9}}],

Cell["", "PageBreak",
 PageBreakBelow->True]
}, Open  ]],

Cell[CellGroupData[{

Cell["References", "ChapterNC",
 CellChangeTimes->{
  3.6407012833362303`*^9, {3.699345789204582*^9, 3.699345799412013*^9}, {
   3.699348342381178*^9, 3.6993483440175104`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"references", "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\"\<journal\>\"", ",", 
       "\"\<Ball Frank, Mollison Denis, Scalia-Tomba Gianpaolo\>\"", ",", 
       "\"\<1997\>\"", ",", "\"\<Epidemics with Two Levels of Mixing\>\"", 
       ",", "\"\<The Annals of Applied Probability 7\>\"", ",", 
       "\"\<46-89\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<journal\>\"", ",", "\"\<Ball Frank, Neal Peter\>\"", ",", 
       "\"\<2002\>\"", ",", 
       "\"\<A general model for stocastic SIR epidemics with two levels of \
mixing\>\"", ",", "\"\<Mathematica Biosciences 180\>\"", ",", 
       "\"\<73-102\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<journal\>\"", ",", "\"\<Ball F., Neal P.\>\"", ",", "\"\<2004\>\"",
        ",", "\"\<Poisson Approximations for Epidemics with Two Levels of \
Mixing\>\"", ",", "\"\<The Annals of Probability 32\>\"", ",", 
       "\"\<1168-1200\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<journal\>\"", ",", "\"\<Brandfor Hill, Aisting\>\"", ",", 
       "\"\<1965\>\"", ",", 
       "\"\<The Environment and Disease: Association or Causation?\>\"", ",", 
       "\"\<Proceedings of Medicine 58\>\"", ",", "\"\<295-300\>\""}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<journal\>\"", ",", "\"\<Gandolfi Alberto, Cecconi Lorenzo\>\"", 
       ",", "\"\<2016\>\"", ",", 
       "\"\<SIR Epidemics on a Scale-free Spatial Nested Modual Network\>\"", 
       ",", "\"\<Adv. Appl. Prob. 48\>\"", ",", "\"\<137-162\>\""}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<book\>\"", ",", 
       "\"\<Green, David G., Lie, Jing, Abbass, Husseing A.\>\"", ",", 
       "\"\<2014\>\"", ",", "\"\<Dual Pahse Evolution\>\"", ",", 
       "\"\<Springer\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<journal\>\"", ",", "\"\<Humphries, Gurney K.\>\"", ",", 
       "\"\<2008\>\"", ",", 
       "\"\<Network 'small-world-ness': a quantitative method for determining \
canonical network equivalence\>\"", ",", "\"\<PLOT ONE 3 (4)\>\"", ",", 
       "\"\<1-10\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<journal\>\"", ",", "\"\<Kim, James\>\"", ",", "\"\<\>\"", ",", 
       "\"\<Complex Networks and Epidemiology\>\"", ",", 
       "\"\<Center for Appled Mathematics, Institute of Sciences and \
Technology of Asia\>\"", ",", "\"\<\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<journal\>\"", ",", 
       "\"\<Liang Che-Wei, Ku Chien-Kuo, Liang Jeng-Jong\>\"", ",", 
       "\"\<2013\>\"", ",", 
       "\"\<A new scale-free network model for simulating and predicting \
epidemics\>\"", ",", "\"\<Journal of Theoretical Biology 317\>\"", ",", 
       "\"\<11-19\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<network\>\"", ",", "\"\<Lloyd Alun L., Valeika Steve\>\"", ",", 
       "\"\<2005\>\"", ",", 
       "\"\<Network Models in Epidemiology: An Overview\>\"", ",", 
       "\"\<\>\""}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<journal\>\"", ",", 
       "\"\<Silva S.L., Ferreira J.A., Martins M.L.\>\"", ",", "\"\<2007\>\"",
        ",", "\"\<Epidemic spreading in a scale-free network of regular \
lattices\>\"", ",", "\"\<Phys. A 377\>\"", ",", "\"\<689-697\>\""}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<network\>\"", ",", 
       "\"\<Zheng Muhua, Wang Chaoqing, Zhou Jie, Zhao Ming, Guan Shuguang, \
Zou Yong, Liu Zonghua\>\"", ",", "\"\<2015\>\"", ",", 
       "\"\<Non-periodic outbreaks of recurrent epidemics and its network \
modelling\>\"", ",", "\"\<www.nature.com/scientificreports\>\""}], "}"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"\"\<site\>\"", ",", "\"\<www.BMJ.com\>\""}], "}"}]}], 
    "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Framed", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Column", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TableForm", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"ToString", "[", "i", "]"}], "~~", "\"\<.\>\""}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"Which", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{
                RowBox[{"references", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}], "\[Equal]", 
                "\"\<site\>\""}], ",", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"references", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", "Italic"}], 
                "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"references", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}], "\[Equal]", 
                "\"\<journal\>\""}], ",", 
               RowBox[{"TextCell", "[", 
                RowBox[{"Row", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"references", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
                   RowBox[{"\"\< (\>\"", "~~", 
                    RowBox[{"references", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}]}], ",", 
                   "\"\<); \>\"", ",", 
                   RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"references", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "4"}], "]"}], "]"}], ",", "Italic"}], 
                    "]"}], ",", "\"\<; \>\"", ",", 
                   RowBox[{"references", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "5"}], "]"}], "]"}], ",", 
                   "\"\<: p. \>\"", ",", 
                   RowBox[{"references", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "6"}], "]"}], "]"}]}], "}"}], "]"}], 
                "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"references", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}], "\[Equal]", 
                "\"\<book\>\""}], ",", 
               RowBox[{"TextCell", "[", 
                RowBox[{"Row", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"references", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
                   RowBox[{"\"\< (\>\"", "~~", 
                    RowBox[{"references", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}]}], ",", 
                   "\"\<); \>\"", ",", 
                   RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"references", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "4"}], "]"}], "]"}], ",", "Italic"}], 
                    "]"}], ",", "\"\<; \>\"", ",", 
                   RowBox[{"references", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "5"}], "]"}], "]"}]}], "}"}], "]"}], 
                "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"references", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}], "\[Equal]", 
                "\"\<network\>\""}], ",", 
               RowBox[{"TextCell", "[", 
                RowBox[{"Row", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"references", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], ",", 
                   RowBox[{"\"\< (\>\"", "~~", 
                    RowBox[{"references", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "3"}], "]"}], "]"}]}], ",", 
                   "\"\<); \>\"", ",", 
                   RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"references", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "4"}], "]"}], "]"}], ",", "Italic"}], 
                    "]"}], ",", "\"\<; \>\"", ",", 
                   RowBox[{"references", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "5"}], "]"}], "]"}]}], "}"}], "]"}], 
                "]"}]}], "\[IndentingNewLine]", "]"}]}], 
            "\[IndentingNewLine]", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "references", "]"}]}], "}"}]}], "]"}], 
         ",", 
         RowBox[{"TableAlignments", "\[Rule]", "Left"}], ",", 
         RowBox[{"TableSpacing", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"1.25", ",", "0.3"}], "}"}]}]}], "]"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Row", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Dynamic", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ref13", "=", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"Position", "[", 
                RowBox[{"references", ",", "\"\<Ball F., Neal P.\>\""}], 
                "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", 
            RowBox[{"Spacer", "[", "0", "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Dynamic", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ref12", "=", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"Position", "[", 
                RowBox[{
                "references", ",", 
                 "\"\<Gandolfi Alberto, Cecconi Lorenzo\>\""}], "]"}], "]"}], 
              "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", 
            RowBox[{"Spacer", "[", "0", "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Dynamic", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ref11", "=", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"Position", "[", 
                RowBox[{
                "references", ",", 
                 "\"\<Zheng Muhua, Wang Chaoqing, Zhou Jie, Zhao Ming, Guan \
Shuguang, Zou Yong, Liu Zonghua\>\""}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", 
            RowBox[{"Spacer", "[", "0", "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Dynamic", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ref10", "=", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"Position", "[", 
                RowBox[{
                "references", ",", "\"\<Lloyd Alun L., Valeika Steve\>\""}], 
                "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", 
            RowBox[{"Spacer", "[", "0", "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Dynamic", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ref9", "=", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"Position", "[", 
                RowBox[{
                "references", ",", 
                 "\"\<Ball Frank, Mollison Denis, Scalia-Tomba \
Gianpaolo\>\""}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", 
            RowBox[{"Spacer", "[", "0", "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Dynamic", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ref8", "=", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"Position", "[", 
                RowBox[{
                "references", ",", 
                 "\"\<Silva S.L., Ferreira J.A., Martins M.L.\>\""}], "]"}], 
               "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", 
            RowBox[{"Spacer", "[", "0", "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Dynamic", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ref7", "=", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"Position", "[", 
                RowBox[{
                "references", ",", 
                 "\"\<Liang Che-Wei, Ku Chien-Kuo, Liang Jeng-Jong\>\""}], 
                "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", 
            RowBox[{"Spacer", "[", "0", "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Dynamic", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ref6", "=", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"Position", "[", 
                RowBox[{"references", ",", "\"\<Ball Frank, Neal Peter\>\""}],
                 "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", 
            RowBox[{"Spacer", "[", "0", "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Dynamic", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ref5", "=", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"Position", "[", 
                RowBox[{"references", ",", "\"\<Humphries, Gurney K.\>\""}], 
                "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", 
            RowBox[{"Spacer", "[", "0", "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Dynamic", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ref4", "=", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"Position", "[", 
                RowBox[{"references", ",", "\"\<Kim, James\>\""}], "]"}], 
               "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", 
            RowBox[{"Spacer", "[", "0", "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Dynamic", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ref3", "=", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"Position", "[", 
                RowBox[{
                "references", ",", 
                 "\"\<Green, David G., Lie, Jing, Abbass, Husseing A.\>\""}], 
                "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", 
            RowBox[{"Spacer", "[", "0", "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Dynamic", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ref2", "=", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"Position", "[", 
                RowBox[{"references", ",", "\"\<www.BMJ.com\>\""}], "]"}], 
               "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", 
            RowBox[{"Spacer", "[", "0", "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Dynamic", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"ref1", "=", 
             RowBox[{
              RowBox[{"Flatten", "[", 
               RowBox[{"Position", "[", 
                RowBox[{"references", ",", "\"\<Brandfor Hill, Aisting\>\""}],
                 "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ";", 
            RowBox[{"Spacer", "[", "0", "]"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
     ",", 
     RowBox[{"Alignment", "\[Rule]", "Left"}]}], "]"}], "\[IndentingNewLine]",
    ",", 
   RowBox[{"RoundingRadius", "\[Rule]", "2"}], ",", 
   RowBox[{"ContentPadding", "\[Rule]", "False"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", "None"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "550"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "50000"}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.701855915999067*^9, 3.7018560815788527`*^9}, {
   3.7018561539696703`*^9, 3.701856241829588*^9}, {3.7018563681341114`*^9, 
   3.7018564143644485`*^9}, {3.7018564848291254`*^9, 3.701856490688633*^9}, {
   3.7018570544253955`*^9, 3.7018570761794233`*^9}, {3.701857107870409*^9, 
   3.701857114842499*^9}, {3.70185733808823*^9, 3.70185741576038*^9}, {
   3.701857465819213*^9, 3.7018575442728777`*^9}, {3.7018575872960796`*^9, 
   3.701857625491323*^9}, {3.701857845297696*^9, 3.701858060963382*^9}, {
   3.7018581583580065`*^9, 3.7018582123975554`*^9}, {3.7018582596123085`*^9, 
   3.7018583227184076`*^9}, {3.7018583875115647`*^9, 3.701858450164645*^9}, {
   3.701858512774844*^9, 3.7018585816618304`*^9}, {3.7018586419540215`*^9, 
   3.701858704027948*^9}, {3.7018587469109154`*^9, 3.701858765946196*^9}, {
   3.7018588096733227`*^9, 3.7018588583880215`*^9}, {3.7018592930812373`*^9, 
   3.701859307132094*^9}, {3.701859357062183*^9, 3.701859430921437*^9}, {
   3.7018598314208727`*^9, 3.7018598339092207`*^9}, {3.701859954101657*^9, 
   3.7018600980199947`*^9}, {3.701879439053757*^9, 3.7018795420061293`*^9}, {
   3.7018797305519023`*^9, 3.7018798077343693`*^9}, {3.7018800684006305`*^9, 
   3.701880076524439*^9}, {3.7018801135352955`*^9, 3.701880175469939*^9}, 
   3.701880216789113*^9, {3.7018802529918475`*^9, 3.7018803409197316`*^9}, {
   3.701880382629842*^9, 3.7018804040427856`*^9}, {3.7018812446723366`*^9, 
   3.7018812894004564`*^9}, {3.701881618354211*^9, 3.701881716802819*^9}, {
   3.70188355053432*^9, 3.7018836478751225`*^9}, {3.701889707416498*^9, 
   3.7018898517942333`*^9}, {3.7018899176463585`*^9, 3.701890007759791*^9}, {
   3.7018900661574554`*^9, 3.701890071287588*^9}, {3.7018901218602495`*^9, 
   3.701890241209646*^9}, {3.701890273423995*^9, 3.701890303023422*^9}, {
   3.701890591278185*^9, 3.701890644471247*^9}, {3.7018907013756857`*^9, 
   3.7018908672024336`*^9}, {3.7018909117795005`*^9, 
   3.7018910751187563`*^9}, {3.7018911776696043`*^9, 3.7018911780535793`*^9}, 
   3.701891213497717*^9, {3.7018912692925005`*^9, 3.7018912773523808`*^9}, {
   3.7018913141570063`*^9, 3.701891315388685*^9}, {3.701961238386911*^9, 
   3.701961399164694*^9}, {3.701961447352974*^9, 3.7019614612934904`*^9}, {
   3.7019626734742937`*^9, 3.701962673881872*^9}, {3.7019628449323454`*^9, 
   3.7019629445871983`*^9}}],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      TagBox[GridBox[{
         {"\<\"1.\"\>", 
          InterpretationBox[Cell[TextData[{
            "Ball Frank, Mollison Denis, Scalia-Tomba Gianpaolo",
            " (1997",
            "); ",
            StyleBox["Epidemics with Two Levels of Mixing",
             StripOnInput->False,
             FontSlant->Italic],
            "; ",
            "The Annals of Applied Probability 7",
            ": p. ",
            "46-89"
           }]],
           TextCell[
            
            Row[{"Ball Frank, Mollison Denis, Scalia-Tomba Gianpaolo", 
              " (1997", "); ", 
              Style["Epidemics with Two Levels of Mixing", Italic], "; ", 
              "The Annals of Applied Probability 7", ": p. ", "46-89"}]]]},
         {"\<\"2.\"\>", 
          InterpretationBox[Cell[TextData[{
            "Ball Frank, Neal Peter",
            " (2002",
            "); ",
            StyleBox[
            "A general model for stocastic SIR epidemics with two levels of \
mixing",
             StripOnInput->False,
             FontSlant->Italic],
            "; ",
            "Mathematica Biosciences 180",
            ": p. ",
            "73-102"
           }]],
           TextCell[
            Row[{"Ball Frank, Neal Peter", " (2002", "); ", 
              Style[
              "A general model for stocastic SIR epidemics with two levels of \
mixing", Italic], "; ", "Mathematica Biosciences 180", ": p. ", "73-102"}]]]},
         {"\<\"3.\"\>", 
          InterpretationBox[Cell[TextData[{
            "Ball F., Neal P.",
            " (2004",
            "); ",
            StyleBox[
            "Poisson Approximations for Epidemics with Two Levels of Mixing",
             StripOnInput->False,
             FontSlant->Italic],
            "; ",
            "The Annals of Probability 32",
            ": p. ",
            "1168-1200"
           }]],
           TextCell[
            Row[{"Ball F., Neal P.", " (2004", "); ", 
              Style[
              "Poisson Approximations for Epidemics with Two Levels of \
Mixing", Italic], "; ", "The Annals of Probability 32", ": p. ", 
              "1168-1200"}]]]},
         {"\<\"4.\"\>", 
          InterpretationBox[Cell[TextData[{
            "Brandfor Hill, Aisting",
            " (1965",
            "); ",
            StyleBox["The Environment and Disease: Association or Causation?",
             StripOnInput->False,
             FontSlant->Italic],
            "; ",
            "Proceedings of Medicine 58",
            ": p. ",
            "295-300"
           }]],
           TextCell[
            Row[{"Brandfor Hill, Aisting", " (1965", "); ", 
              Style[
              "The Environment and Disease: Association or Causation?", 
               Italic], "; ", "Proceedings of Medicine 58", ": p. ", 
              "295-300"}]]]},
         {"\<\"5.\"\>", 
          InterpretationBox[Cell[TextData[{
            "Gandolfi Alberto, Cecconi Lorenzo",
            " (2016",
            "); ",
            StyleBox[
            "SIR Epidemics on a Scale-free Spatial Nested Modual Network",
             StripOnInput->False,
             FontSlant->Italic],
            "; ",
            "Adv. Appl. Prob. 48",
            ": p. ",
            "137-162"
           }]],
           TextCell[
            Row[{"Gandolfi Alberto, Cecconi Lorenzo", " (2016", "); ", 
              Style[
              "SIR Epidemics on a Scale-free Spatial Nested Modual Network", 
               Italic], "; ", "Adv. Appl. Prob. 48", ": p. ", "137-162"}]]]},
         {"\<\"6.\"\>", 
          InterpretationBox[Cell[TextData[{
            "Green, David G., Lie, Jing, Abbass, Husseing A.",
            " (2014",
            "); ",
            StyleBox["Dual Pahse Evolution",
             StripOnInput->False,
             FontSlant->Italic],
            "; ",
            "Springer"
           }]],
           TextCell[
            
            Row[{"Green, David G., Lie, Jing, Abbass, Husseing A.", " (2014", 
              "); ", 
              Style["Dual Pahse Evolution", Italic], "; ", "Springer"}]]]},
         {"\<\"7.\"\>", 
          InterpretationBox[Cell[TextData[{
            "Humphries, Gurney K.",
            " (2008",
            "); ",
            StyleBox[
            "Network 'small-world-ness': a quantitative method for \
determining canonical network equivalence",
             StripOnInput->False,
             FontSlant->Italic],
            "; ",
            "PLOT ONE 3 (4)",
            ": p. ",
            "1-10"
           }]],
           TextCell[
            Row[{"Humphries, Gurney K.", " (2008", "); ", 
              Style[
              "Network 'small-world-ness': a quantitative method for \
determining canonical network equivalence", Italic], "; ", "PLOT ONE 3 (4)", 
              ": p. ", "1-10"}]]]},
         {"\<\"8.\"\>", 
          InterpretationBox[Cell[TextData[{
            "Kim, James",
            " (",
            "); ",
            StyleBox["Complex Networks and Epidemiology",
             StripOnInput->False,
             FontSlant->Italic],
            "; ",
            
            "Center for Appled Mathematics, Institute of Sciences and \
Technology of Asia",
            ": p. "
           }]],
           TextCell[
            Row[{"Kim, James", " (", "); ", 
              Style["Complex Networks and Epidemiology", Italic], "; ", 
              "Center for Appled Mathematics, Institute of Sciences and \
Technology of Asia", ": p. ", ""}]]]},
         {"\<\"9.\"\>", 
          InterpretationBox[Cell[TextData[{
            "Liang Che-Wei, Ku Chien-Kuo, Liang Jeng-Jong",
            " (2013",
            "); ",
            StyleBox[
            "A new scale-free network model for simulating and predicting \
epidemics",
             StripOnInput->False,
             FontSlant->Italic],
            "; ",
            "Journal of Theoretical Biology 317",
            ": p. ",
            "11-19"
           }]],
           TextCell[
            
            Row[{"Liang Che-Wei, Ku Chien-Kuo, Liang Jeng-Jong", " (2013", 
              "); ", 
              Style[
              "A new scale-free network model for simulating and predicting \
epidemics", Italic], "; ", "Journal of Theoretical Biology 317", ": p. ", 
              "11-19"}]]]},
         {"\<\"10.\"\>", 
          InterpretationBox[Cell[TextData[{
            "Lloyd Alun L., Valeika Steve",
            " (2005",
            "); ",
            StyleBox["Network Models in Epidemiology: An Overview",
             StripOnInput->False,
             FontSlant->Italic],
            "; "
           }]],
           TextCell[
            Row[{"Lloyd Alun L., Valeika Steve", " (2005", "); ", 
              Style["Network Models in Epidemiology: An Overview", Italic], 
              "; ", ""}]]]},
         {"\<\"11.\"\>", 
          InterpretationBox[Cell[TextData[{
            "Silva S.L., Ferreira J.A., Martins M.L.",
            " (2007",
            "); ",
            StyleBox[
            "Epidemic spreading in a scale-free network of regular lattices",
             StripOnInput->False,
             FontSlant->Italic],
            "; ",
            "Phys. A 377",
            ": p. ",
            "689-697"
           }]],
           TextCell[
            Row[{"Silva S.L., Ferreira J.A., Martins M.L.", " (2007", "); ", 
              Style[
              "Epidemic spreading in a scale-free network of regular \
lattices", Italic], "; ", "Phys. A 377", ": p. ", "689-697"}]]]},
         {"\<\"12.\"\>", 
          InterpretationBox[Cell[TextData[{
            
            "Zheng Muhua, Wang Chaoqing, Zhou Jie, Zhao Ming, Guan Shuguang, \
Zou Yong, Liu Zonghua",
            " (2015",
            "); ",
            StyleBox[
            "Non-periodic outbreaks of recurrent epidemics and its network \
modelling",
             StripOnInput->False,
             FontSlant->Italic],
            "; ",
            "www.nature.com/scientificreports"
           }]],
           TextCell[
            
            Row[{"Zheng Muhua, Wang Chaoqing, Zhou Jie, Zhao Ming, Guan \
Shuguang, Zou Yong, Liu Zonghua", " (2015", "); ", 
              Style[
              "Non-periodic outbreaks of recurrent epidemics and its network \
modelling", Italic], "; ", "www.nature.com/scientificreports"}]]]},
         {"\<\"13.\"\>", 
          StyleBox["\<\"www.BMJ.com\"\>",
           StripOnInput->False,
           FontSlant->Italic]}
        },
        GridBoxAlignment->{
         "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, 
          "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.21]}, 
            Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
            Offset[0.2], {
             Offset[0.5]}, 
            Offset[0.2]}, "RowsIndexed" -> {}}],
       Function[BoxForm`e$, 
        TableForm[
        BoxForm`e$, TableAlignments -> Left, TableSpacing -> {1.25, 0.3}]]]},
     {
      TemplateBox[{DynamicBox[
         ToBoxes[$CellContext`ref13 = Part[
             Flatten[
              Position[$CellContext`references, "Ball F., Neal P."]], 1]; 
          Spacer[0], StandardForm]],DynamicBox[
         ToBoxes[$CellContext`ref12 = Part[
             Flatten[
              
              Position[$CellContext`references, 
               "Gandolfi Alberto, Cecconi Lorenzo"]], 1]; Spacer[0], 
          StandardForm]],DynamicBox[
         ToBoxes[$CellContext`ref11 = Part[
             Flatten[
              
              Position[$CellContext`references, 
               "Zheng Muhua, Wang Chaoqing, Zhou Jie, Zhao Ming, Guan \
Shuguang, Zou Yong, Liu Zonghua"]], 1]; Spacer[0], StandardForm]],DynamicBox[
         ToBoxes[$CellContext`ref10 = Part[
             Flatten[
              
              Position[$CellContext`references, 
               "Lloyd Alun L., Valeika Steve"]], 1]; Spacer[0], 
          StandardForm]],DynamicBox[
         ToBoxes[$CellContext`ref9 = Part[
             Flatten[
              
              Position[$CellContext`references, 
               "Ball Frank, Mollison Denis, Scalia-Tomba Gianpaolo"]], 1]; 
          Spacer[0], StandardForm]],DynamicBox[
         ToBoxes[$CellContext`ref8 = Part[
             Flatten[
              
              Position[$CellContext`references, 
               "Silva S.L., Ferreira J.A., Martins M.L."]], 1]; Spacer[0], 
          StandardForm]],DynamicBox[
         ToBoxes[$CellContext`ref7 = Part[
             Flatten[
              
              Position[$CellContext`references, 
               "Liang Che-Wei, Ku Chien-Kuo, Liang Jeng-Jong"]], 1]; 
          Spacer[0], StandardForm]],DynamicBox[
         ToBoxes[$CellContext`ref6 = Part[
             Flatten[
              Position[$CellContext`references, "Ball Frank, Neal Peter"]], 
             1]; Spacer[0], StandardForm]],DynamicBox[
         ToBoxes[$CellContext`ref5 = Part[
             Flatten[
              Position[$CellContext`references, "Humphries, Gurney K."]], 1]; 
          Spacer[0], StandardForm]],DynamicBox[
         ToBoxes[$CellContext`ref4 = Part[
             Flatten[
              Position[$CellContext`references, "Kim, James"]], 1]; Spacer[0],
           StandardForm]],DynamicBox[
         ToBoxes[$CellContext`ref3 = Part[
             Flatten[
              
              Position[$CellContext`references, 
               "Green, David G., Lie, Jing, Abbass, Husseing A."]], 1]; 
          Spacer[0], StandardForm]],DynamicBox[
         ToBoxes[$CellContext`ref2 = Part[
             Flatten[
              Position[$CellContext`references, "www.BMJ.com"]], 1]; 
          Spacer[0], StandardForm]],DynamicBox[
         ToBoxes[$CellContext`ref1 = Part[
             Flatten[
              Position[$CellContext`references, "Brandfor Hill, Aisting"]], 
             1]; Spacer[0], StandardForm]]},
       "RowDefault"]}
    },
    DefaultBaseStyle->"Column",
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Column"],
  ContentPadding->False,
  FrameStyle->None,
  ImageSize->{{1, 550}, {1, 50000}},
  RoundingRadius->2,
  StripOnInput->False]], "Output",
 CellChangeTimes->{{3.7018586647231836`*^9, 3.7018587048717184`*^9}, 
   3.70185875828979*^9, 3.701858825333687*^9, 3.7018588587942343`*^9, 
   3.701859445315843*^9, {3.701859883886177*^9, 3.701859886886235*^9}, 
   3.701860117351866*^9, {3.7018784607535305`*^9, 3.7018784634129276`*^9}, 
   3.701879513777458*^9, 3.7018795477257133`*^9, 3.701879820888565*^9, 
   3.7018801781034093`*^9, 3.7018803430791526`*^9, 3.7018804065323024`*^9, 
   3.7018812908392324`*^9, 3.7018817212945166`*^9, 3.7018836511610546`*^9, 
   3.7018898561462092`*^9, 3.7018899048193736`*^9, {3.701889948922381*^9, 
   3.701889960473442*^9}, {3.7018901881796637`*^9, 3.701890241741339*^9}, 
   3.7018902746409016`*^9, 3.7018903053918114`*^9, 3.7018907972854443`*^9, {
   3.701890844289913*^9, 3.7018908701322937`*^9}, 3.701890983956626*^9, {
   3.7018910195471287`*^9, 3.7018910759337215`*^9}, 3.701891178453766*^9, {
   3.701891214312981*^9, 3.7018912242911744`*^9}, {3.701891273152503*^9, 
   3.70189127805268*^9}, {3.701891316426916*^9, 3.701891318608387*^9}, {
   3.7019537627039013`*^9, 3.7019537641994*^9}, 3.7019614672306304`*^9, 
   3.701962675006936*^9, 3.7019629466452904`*^9, {3.701966734192933*^9, 
   3.701966736909066*^9}, {3.7020607958172636`*^9, 3.702060797051416*^9}, {
   3.702065656220394*^9, 3.702065657635581*^9}, {3.702639312074258*^9, 
   3.7026393230277286`*^9}, {3.702644822582291*^9, 3.7026448236834173`*^9}}]
}, {2}]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{974, 587},
WindowMargins->{{138, Automatic}, {52, Automatic}},
PrintingCopies->1,
PrintingPageRange->{32000, 32000},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{595.3199999999999, 841.92},
"PrintingMargins"->{{42.519685499999994`, 42.519685499999994`}, \
{56.692913999999995`, 56.692913999999995`}}},
SpellingDictionaries->{"CorrectWords"->{
 "teleport", "Darkvision", "Morrowind", "thoughsense", "tremorsense", 
  "darkvision", "mindbender", "Su", "Telvanni", "susceptibles", "Titonis", 
  "Tryfon", "Aristoteleio", "ness\[CloseCurlyQuote]"}},
Magnification:>0.9 Inherited,
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All], SpanMaxSize -> Infinity, FontFamily -> 
    "Bookman Old Style"], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["BOOK TITLE"], CellFrame -> True, ShowGroupOpener -> True, 
       GroupOpenerInsideFrame -> True, CellMargins -> {{10, 10}, {5, 10}}, 
       StyleKeyMapping -> {"Tab" -> "SUBBOOK TITLE"}, 
       CellGroupingRules -> {"TitleGrouping", 0}, PageBreakAbove -> True, 
       PageBreakWithin -> False, PageBreakBelow -> False, CellFrameMargins -> 
       15, CellFrameStyle -> Thickness[2.5], TextAlignment -> Center, 
       TextJustification -> 0., 
       CounterAssignments -> {{"Chapter", 0}, {"SubChapter", 0}, {
         "SubSubChapte", 0}, {"Question", 0}, {"ItemNumbered", 0}}, 
       MenuSortingValue -> 1, MenuCommandKey -> "1", FontSize -> 30, 
       FontWeight -> "ExtraBold", Background -> 
       RGBColor[0.72549, 0.690196, 0.690196]], 
      Cell[
       StyleData["BOOK TITLE", "Printout"], CellFrame -> True, 
       CellMargins -> {{10, 10}, {5, 10}}, 
       StyleKeyMapping -> {"Tab" -> "SUBBOOK TITLE"}, 
       CellGroupingRules -> {"TitleGrouping", 0}, PageBreakAbove -> True, 
       PageBreakWithin -> False, PageBreakBelow -> False, CellFrameMargins -> 
       15, CellFrameStyle -> Thickness[2.5], TextAlignment -> Center, 
       TextJustification -> 0., 
       CounterAssignments -> {{"Chapter", 0}, {"SubChapter", 0}, {
         "SubSubChapte", 0}, {"Question", 0}, {"ItemNumbered", 0}}, 
       MenuSortingValue -> 1, MenuCommandKey -> "1", FontSize -> 30, 
       FontWeight -> "ExtraBold", Background -> 
       RGBColor[0.72549, 0.690196, 0.690196]]}, Closed]], 
   Cell[
    StyleData["SUBBOOK TITLE"], CellFrame -> True, ShowGroupOpener -> True, 
    GroupOpenerInsideFrame -> True, CellMargins -> {{20, 20}, {10, 20}}, 
    StyleKeyMapping -> {
     "Backspace" -> "BOOK TITLE", "Tab" -> "SUBSUBBOOK TITLE"}, 
    CellGroupingRules -> {"SectionGrouping", 5}, PageBreakWithin -> False, 
    PageBreakBelow -> False, CellFrameMargins -> 10, CellFrameStyle -> 
    Thickness[2], TextAlignment -> Center, TextJustification -> 0., 
    CounterAssignments -> {{"Chapter", 0}, {"SubChapter", 0}, {
      "SubSubChapte", 0}, {"Question", 0}, {"ItemNumbered", 0}}, 
    MenuSortingValue -> 2, MenuCommandKey -> None, FontSize -> 26, FontWeight -> 
    "ExtraBold", Background -> RGBColor[0.62549, 0.70196, 0.600196]], 
   Cell[
    StyleData["SUBSUBBOOK TITLE"], CellFrame -> True, ShowGroupOpener -> True,
     GroupOpenerInsideFrame -> True, CellMargins -> {{25, 25}, {10, 20}}, 
    StyleKeyMapping -> {"Backspace" -> "SUBBOOK TITLE"}, 
    CellGroupingRules -> {"SectionGrouping", 8}, PageBreakWithin -> False, 
    PageBreakBelow -> False, CellFrameMargins -> 10, CellFrameStyle -> 
    Thickness[1.75], TextAlignment -> Center, TextJustification -> 0., 
    CounterAssignments -> {{"Chapter", 0}, {"SubChapter", 0}, {
      "SubSubChapte", 0}, {"Question", 0}, {"ItemNumbered", 0}}, 
    MenuSortingValue -> 3, MenuCommandKey -> None, FontSize -> 22, FontWeight -> 
    "ExtraBold", Background -> RGBColor[1., 0.72, 0.52]], 
   Cell[
    StyleData["ChapterNC"], ShowGroupOpener -> True, GroupOpenerInsideFrame -> 
    True, CellMargins -> {{20, 0}, {6, 20}}, 
    StyleKeyMapping -> {"Tab" -> "SubChapterNC"}, 
    CellGroupingRules -> {"SectionGrouping", 10}, CellFrameMargins -> 5, 
    CellChangeTimes -> {3.6407012833362303`*^9}, 
    CounterAssignments -> {{"ItemNumbered", 0}, {"SubitemNumbered", 0}}, 
    MenuSortingValue -> 10, MenuCommandKey -> "3", FontSize -> 24, FontWeight -> 
    "Bold", FontColor -> GrayLevel[0.2]], 
   Cell[
    StyleData["SubChapterNC"], ShowGroupOpener -> True, 
    GroupOpenerInsideFrame -> True, CellMargins -> {{30, 0}, {4, 16}}, 
    StyleKeyMapping -> {
     "Tab" -> "SubSubChapterNC", "Backspace" -> "ChapterNC"}, 
    CellGroupingRules -> {"SectionGrouping", 20}, CellFrameMargins -> 5, 
    CellChangeTimes -> {3.640701274346218*^9}, 
    CounterAssignments -> {{"ItemNumbered", 0}}, MenuSortingValue -> 11, 
    MenuCommandKey -> "None", FontSize -> 22, FontWeight -> "Bold", FontColor -> 
    GrayLevel[0.35]], 
   Cell[
    StyleData["SubSubChapterNC"], ShowGroupOpener -> True, 
    GroupOpenerInsideFrame -> True, CellMargins -> {{45, 0}, {4, 13}}, 
    StyleKeyMapping -> {"Backspace" -> "SubChapterNC"}, 
    CellGroupingRules -> {"SectionGrouping", 30}, CellFrameMargins -> 5, 
    CounterIncrements -> "SubSubChapter", 
    CounterAssignments -> {{"ItemNumbered", 0}}, MenuSortingValue -> 12, 
    MenuCommandKey -> "None", FontSize -> 20, FontWeight -> "Bold", FontColor -> 
    GrayLevel[0.5]], 
   Cell[
    StyleData["Titlos"], ShowGroupOpener -> True, GroupOpenerInsideFrame -> 
    True, CellMargins -> {{50, 0}, {5, 10}}, 
    StyleKeyMapping -> {"Tab" -> "Ypotitlos"}, 
    CellGroupingRules -> {"SectionGrouping", 50}, 
    CounterAssignments -> {{"ItemNumbered", 0}}, MenuSortingValue -> 35, 
    MenuCommandKey -> "4", FontSize -> 18, FontWeight -> "Bold"], 
   Cell[
    StyleData["Ypotitlos"], ShowGroupOpener -> True, GroupOpenerInsideFrame -> 
    True, CellMargins -> {{60, 0}, {5, 8}}, 
    StyleKeyMapping -> {"Backspace" -> "Titlos"}, 
    CellGroupingRules -> {"SectionGrouping", 60}, 
    CounterAssignments -> {{"ItemNumbered", 0}}, MenuSortingValue -> 40, 
    MenuCommandKey -> "None", FontSize -> 16, FontWeight -> "Bold", FontSlant -> 
    "Italic"], 
   Cell[
    StyleData["Text"], CellMargins -> {{65, 0}, {3, 3}}, 
    StyleKeyMapping -> {"Backspace" -> "TextSection", "Tab" -> "TextLineTop"},
     TextJustification -> 1., LineSpacing -> {1, 1, 1}, MenuSortingValue -> 
    1100, MenuCommandKey -> "k", FontSize -> 14], 
   Cell[
    StyleData["TextLineTop"], CellFrame -> {{0, 0}, {0, 0.5}}, 
    CellMargins -> {{65, 0}, {3, 3}}, 
    StyleKeyMapping -> {"Backspace" -> "Text"}, TextJustification -> 1., 
    LineSpacing -> {1, 1, 1}, MenuSortingValue -> 1105, MenuCommandKey -> 
    "None", FontSize -> 14], 
   Cell[
    StyleData["TextSection"], CellFrame -> {{0, 0}, {3, 3}}, 
    CellMargins -> {{65, 0}, {2, 10}}, StyleKeyMapping -> {"Tab" -> "Text"}, 
    TextJustification -> 1., LineSpacing -> {1.1, 1.1, 2.}, MenuSortingValue -> 
    1095, MenuCommandKey -> None, FontSize -> 12, FontWeight -> Bold, 
    FontSlant -> Italic, FontVariations -> {"Underline" -> True}], 
   Cell[
    StyleData["TextGold"], CellMargins -> {{65, 0}, {3, 3}}, 
    TextJustification -> 1., LineSpacing -> {1, 1, 1}, MenuSortingValue -> 
    1101, MenuCommandKey -> "g", FontSize -> 14, FontColor -> 
    RGBColor[0.917647, 0.458824, 0]], 
   Cell[
    StyleData["TextRed"], CellMargins -> {{65, 0}, {3, 3}}, 
    StyleKeyMapping -> {"Backspace" -> "TextSection"}, TextJustification -> 
    1., LineSpacing -> {1, 1, 1}, MenuSortingValue -> 1101, MenuCommandKey -> 
    "f", FontSize -> 14, FontColor -> RGBColor[0.8, 0, 0]], 
   Cell[
    StyleData["note"], CellMargins -> {{75, 75}, {5, 5}}, TextAlignment -> 
    Center, TextJustification -> 1., MenuSortingValue -> 1500, MenuCommandKey -> 
    "n", FontSize -> 13, FontSlant -> "Italic"], 
   Cell[
    StyleData["comment"], CellMargins -> {{75, 75}, {5, 5}}, TextAlignment -> 
    Center, TextJustification -> 1., MenuSortingValue -> 1510, MenuCommandKey -> 
    "c", FontSize -> 13, FontSlant -> "Italic", FontColor -> 
    RGBColor[0.909804, 0, 0.0196078], Background -> 
    RGBColor[0.980392, 0.968627, 0.552941]], 
   Cell[
    StyleData["time_travel"], CellMargins -> {{75, 75}, {5, 5}}, 
    TextAlignment -> Center, TextJustification -> 1., MenuSortingValue -> 
    1525, MenuCommandKey -> "t", FontSize -> 14, FontColor -> 
    RGBColor[1, 1, 1], Background -> RGBColor[1, 0, 0]], 
   Cell[
    StyleData["dreamscape"], CellMargins -> {{75, 75}, {5, 5}}, TextAlignment -> 
    Center, TextJustification -> 1., MenuSortingValue -> 1525, MenuCommandKey -> 
    "d", FontSize -> 14, FontColor -> RGBColor[0, 0, 1], Background -> 
    RGBColor[0, 1, 0]], 
   Cell[
    StyleData["ItemNumbered"], CellMargins -> {{65, 10}, {1, 1}}, 
    TextJustification -> 1., 
    CounterAssignments -> {{"SubitemNumbered", 0}, {"SubsubitemNumbered", 0}},
     MenuSortingValue -> 1201, MenuCommandKey -> "j", FontSize -> 14], 
   Cell[
    StyleData["SubitemNumbered"], CellDingbat -> Cell[
      TextData[{
        CounterBox["SubitemNumbered"], "."}], FontWeight -> "Bold"], 
    CellMargins -> {{75, 10}, {1, 1}}, TextJustification -> 1., 
    MenuSortingValue -> None, MenuCommandKey -> None, FontSize -> 14, 
    CounterBoxOptions -> {CounterFunction :> (Part[
        CharacterRange["\[Alpha]", "\[Omega]"], #]& )}], 
   Cell[
    StyleData["SubsubitemNumbered"], CellDingbat -> Cell[
      TextData[{
        CounterBox["SubsubitemNumbered"], "."}], FontWeight -> "Bold"], 
    CellMargins -> {{85, 10}, {1, 1}}, TextJustification -> 1., 
    MenuSortingValue -> None, MenuCommandKey -> None, FontSize -> 14, 
    CounterBoxOptions -> {CounterFunction :> RomanNumeral}], 
   Cell[
    StyleData["Item"], CellDingbat -> "\[FilledSmallCircle]", 
    CellMargins -> {{65, 10}, {1, 1}}, TextJustification -> 1., 
    MenuSortingValue -> 1200, MenuCommandKey -> "l"], 
   Cell[
    StyleData["Subitem"], CellDingbat -> "\[FilledSmallSquare]", 
    CellMargins -> {{75, 10}, {1, 1}}, 
    StyleKeyMapping -> {"Tab" -> "Subsubitem", "Backspace" -> "Item"}, 
    TextJustification -> 1., MenuSortingValue -> 1210, MenuCommandKey -> None,
     FontSize -> 14], 
   Cell[
    StyleData["Subsubitem"], CellDingbat -> "\[FivePointedStar]", 
    CellMargins -> {{85, 10}, {1, 1}}, 
    StyleKeyMapping -> {"Backspace" -> "Subitem", "Tab" -> "Subsubsubitem"}, 
    TextJustification -> 1., MenuSortingValue -> 1220, MenuCommandKey -> None,
     FontSize -> 14], 
   Cell[
    StyleData["Subsubsubitem"], CellDingbat -> "\[FilledUpTriangle]", 
    CellMargins -> {{95, 10}, {1, 1}}, ReturnCreatesNewCell -> True, 
    StyleKeyMapping -> {"Backspace" -> "Subsubitem"}, 
    CellGroupingRules -> {"GroupTogetherNestedGrouping", 15300}, 
    TextJustification -> 1., MenuSortingValue -> 1230, MenuCommandKey -> None,
     FontSize -> 14], 
   Cell[
    StyleData["ItemParagraph"], CellMargins -> {{65, 10}, {0, 1}}, 
    ReturnCreatesNewCell -> False, TextJustification -> 1., MenuSortingValue -> 
    1202, MenuCommandKey -> "p", FontColor -> GrayLevel[0]], 
   Cell[
    StyleData["SubitemParagraph"], CellMargins -> {{75, 10}, {0, 1}}, 
    ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {
     "Tab" -> "SubsubitemParagraph", "Backspace" -> "ItemParagraph"}, 
    TextJustification -> 1., MenuSortingValue -> 1212, MenuCommandKey -> None,
     FontSize -> 14, FontColor -> GrayLevel[0]], 
   Cell[
    StyleData["SubsubitemParagraph"], CellMargins -> {{85, 10}, {0, 1}}, 
    ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {
     "Backspace" -> "SubitemParagraph", "Tab" -> "SubsubsubitemParagraph"}, 
    TextJustification -> 1., MenuSortingValue -> 1222, MenuCommandKey -> None,
     FontSize -> 14, FontColor -> GrayLevel[0]], 
   Cell[
    StyleData["SubsubsubitemParagraph"], CellMargins -> {{95, 10}, {0, 1}}, 
    ReturnCreatesNewCell -> False, 
    StyleKeyMapping -> {"Backspace" -> "SubsubitemParagraph"}, 
    CellGroupingRules -> {"GroupTogetherNestedGrouping", 15300}, 
    TextJustification -> 1., MenuSortingValue -> 1232, MenuCommandKey -> None,
     FontSize -> 14, FontColor -> GrayLevel[0]], 
   Cell[
    StyleData["Image"], CellMargins -> {{Inherited, Inherited}, {0, 5}}, 
    StyleKeyMapping -> {"Tab" -> "Image Caption"}, TextAlignment -> Center, 
    CounterIncrements -> "Image", MenuSortingValue -> 1300, MenuCommandKey -> 
    "i"], 
   Cell[
    StyleData["Image Caption"], 
    CellMargins -> {{Inherited, Inherited}, {5, 2.5}}, 
    StyleKeyMapping -> {"Backspace" -> "image"}, TextAlignment -> Center, 
    MenuSortingValue -> 1320, FontSize -> 13, FontSlant -> "Italic", 
    FontColor -> GrayLevel[0.117647]], 
   Cell[
    StyleData["Equation"], CellMargins -> {{100, 100}, {6, 6}}, 
    StyleKeyMapping -> {"Tab" -> "Equation - numbered"}, TextAlignment -> 
    Center, TextJustification -> 1., MenuSortingValue -> 1350, MenuCommandKey -> 
    "e", FontSize -> 14], 
   Cell[
    StyleData["EquationNumbered"], CellMargins -> {{100, 7}, {6, 6}}, 
    StyleKeyMapping -> {"BackSpace" -> "Equation"}, CellFrameLabels -> {{None, 
       Cell[
        TextData[{
         "\[CapitalEpsilon]\[Xi]\:03af\[Sigma]\[Omega]\[Sigma]\[Eta] ", 
          CounterBox["Chapter - numbered"], ".", 
          CounterBox["EquationNumbered"]}], FontWeight -> "Bold", FontSlant -> 
        "Italic"]}, {None, None}}, TextAlignment -> Center, TextJustification -> 
    1., CounterIncrements -> "EquationNumbered", MenuSortingValue -> 1355, 
    MenuCommandKey -> None, FontSize -> 14], 
   Cell[
    StyleData["Code"], CellMargins -> {{50, 50}, {8, 8}}, Evaluatable -> 
    False, StripStyleOnPaste -> True, InitializationCell -> False, 
    TextAlignment -> Left, TextJustification -> 1., Hyphenation -> False, 
    AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}, 
    LanguageCategory -> "Formula", MenuSortingValue -> 1350, MenuCommandKey -> 
    "z", FontSize -> 14, Background -> GrayLevel[0.85]], 
   Cell[
    StyleData["Question"], CellDingbat -> Cell[
      TextData[{"E ", 
        CounterBox["Chapter"], ".", 
        CounterBox["Question"], ":"}], FontWeight -> "Bold", FontSlant -> 
      "Italic"], CellMargins -> {{70, 0}, {3, 5}}, TextJustification -> 1., 
    CounterIncrements -> "Question", MenuSortingValue -> 700, MenuCommandKey -> 
    "q", FontSize -> 14], 
   Cell[
    StyleData["Problem"], CellDingbat -> Cell[
      TextData[{"A ", 
        CounterBox["Chapter"], ".", 
        CounterBox["Problem"], ":"}], FontWeight -> "Bold", FontSlant -> 
      "Italic"], CellMargins -> {{72, 0}, {3, 5}}, TextJustification -> 1., 
    CounterIncrements -> "Problem", 
    CounterAssignments -> {{"ItemNumbered", 0}}, MenuSortingValue -> 710, 
    MenuCommandKey -> "a", FontSize -> 14], 
   Cell[
    StyleData["result"], CellMargins -> {{200, Inherited}, {5, 2.5}}, 
    TextAlignment -> Right, MenuSortingValue -> 750, MenuCommandKey -> "r", 
    FontSize -> 13, FontSlant -> "Italic", FontColor -> GrayLevel[0.117647]], 
   Cell[
    StyleData["Input"], MenuSortingValue -> 2000, MenuCommandKey -> "9", 
    FontSize -> 13], 
   Cell[
    StyleData["Output"], TextAlignment -> Center, MenuSortingValue -> 2050, 
    FontSize -> 13], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Title"], CellMargins -> {{12, 12}, {10, 50}}, 
       StyleKeyMapping -> {"Tab" -> "Subtitle"}, PageBreakBelow -> False, 
       TextAlignment -> Center, LineSpacing -> {1, 2}, MenuSortingValue -> 
       2500, MenuCommandKey -> None, FontSize -> 32, FontWeight -> "Bold", 
       FontColor -> RGBColor[0, 0, 0]], 
      Cell[
       StyleData["Title", "Printout"], CellMargins -> {{12, 12}, {10, 180}}, 
       PageBreakBelow -> False, TextAlignment -> Center, 
       LineSpacing -> {1, 2}, MenuSortingValue -> 2500, MenuCommandKey -> 
       None, FontSize -> 32, FontWeight -> "Bold", FontColor -> 
       RGBColor[0, 0, 0]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Subtitle"], CellMargins -> {{12, 12}, {20, 15}}, 
       StyleKeyMapping -> {"Backspace" -> "Title"}, PageBreakBelow -> False, 
       TextAlignment -> Center, LineSpacing -> {1, 2}, MenuSortingValue -> 
       2505, MenuCommandKey -> None, FontSize -> 26, FontWeight -> "Bold", 
       FontColor -> RGBColor[0, 0, 0]], 
      Cell[
       StyleData["Subtitle", "Printout"], CellMargins -> {{12, 12}, {50, 15}},
        StyleKeyMapping -> {"Backspace" -> "Title"}, PageBreakBelow -> False, 
       TextAlignment -> Center, LineSpacing -> {1, 2}, MenuSortingValue -> 
       2505, MenuCommandKey -> None, FontSize -> 26, FontWeight -> "Bold", 
       FontColor -> RGBColor[0, 0, 0]]}, Open]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Author"], CellMargins -> {{54, 54}, {3, 20}}, TextAlignment -> 
       Center, ParagraphSpacing -> {0, 0}, MenuSortingValue -> 2600, FontSize -> 
       14, FontWeight -> "Bold", FontColor -> RGBColor[0, 0, 0.500008]], 
      Cell[
       StyleData["Author", "Printout"], CellMargins -> {{54, 54}, {3, 80}}, 
       TextAlignment -> Center, ParagraphSpacing -> {0, 0}, MenuSortingValue -> 
       2600, FontSize -> 14, FontWeight -> "Bold", FontColor -> 
       RGBColor[0, 0, 0.500008]]}, Closed]], 
   Cell[
    StyleData["Author Info"], CellMargins -> {{54, 54}, {3, 0}}, 
    TextAlignment -> Center, ParagraphSpacing -> {0, 0}, MenuSortingValue -> 
    2605, FontSize -> 13, FontWeight -> "Bold", FontColor -> 
    RGBColor[0, 0, 0.500008]], 
   Cell[
    StyleData["Institution"], CellMargins -> {{54, 54}, {10, 0}}, 
    TextAlignment -> Center, CounterIncrements -> "Institution", 
    MenuSortingValue -> 2610, FontColor -> RGBColor[0, 0, 0.500008]], 
   Cell["", "Text", CellFrame -> {{0, 0}, {0, 5}}, 
    CellChangeTimes -> {{3.6406975592193623`*^9, 3.6406975603143635`*^9}}, 
    FontSize -> 1], 
   Cell[
    StyleData["Subsubtitle"], MenuSortingValue -> None, MenuCommandKey -> 
    None], 
   Cell[
    StyleData["Section"], MenuSortingValue -> None, MenuCommandKey -> None], 
   Cell[
    StyleData["Subsection"], MenuSortingValue -> None, MenuCommandKey -> 
    None], 
   Cell[
    StyleData["Subsubsection"], MenuSortingValue -> None, MenuCommandKey -> 
    None], 
   Cell[
    StyleData["InlineFormula"], MenuSortingValue -> None, MenuCommandKey -> 
    None], 
   Cell[
    StyleData["DisplayFormula"], 
    CellChangeTimes -> {3.6087778716139154`*^9, 3.6115877881497126`*^9}, 
    MenuSortingValue -> None, MenuCommandKey -> None], 
   Cell[
    StyleData["DisplayFormulaNumbered"], CellFrameLabels -> {{None, 
       Cell[
        TextData[{"(eq", 
          CounterBox["DisplayFormulaNumbered"], ")"}], 
        "DisplayFormulaEquationNumber"]}, {None, None}}, MenuSortingValue -> 
    None, MenuCommandKey -> None], 
   Cell[
    StyleData["Program"], MenuSortingValue -> None, MenuCommandKey -> None], 
   Cell[
    StyleData["table"], 
    CellMargins -> {{Inherited, Inherited}, {Inherited, Inherited}}, 
    TextAlignment -> Center, MenuSortingValue -> None, MenuCommandKey -> None,
     FontSize -> 14], 
   Cell[
    StyleData["Subchapter"], MenuSortingValue -> None, MenuCommandKey -> 
    None], 
   Cell[
    StyleData["Program"], CellFrame -> {{0, 0}, {0.5, 0.5}}, 
    CellMargins -> {{66, 10}, {8, 8}}, StripStyleOnPaste -> True, Hyphenation -> 
    False, AutoQuoteCharacters -> {}, PasteAutoQuoteCharacters -> {}, 
    LanguageCategory -> "Formula", ScriptLevel -> 1, MenuSortingValue -> None,
     MenuCommandKey -> None, FontFamily -> "Courier"]}, 
  WindowSize -> {775, 601}, WindowMargins -> {{0, Automatic}, {Automatic, 0}},
   Visible -> False, FrontEndVersion -> 
  "11.0 for Microsoft Windows (64-bit) (September 21, 2016)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 294, 4, 89, "Title"],
Cell[877, 28, 405, 17, 358, "Subtitle"],
Cell[1285, 47, 102, 1, 36, "Author"],
Cell[1390, 50, 162, 2, 16, "Author Info"],
Cell[1555, 54, 242, 6, 56, "Institution"],
Cell[1800, 62, 222482, 3652, 123, "Image"],
Cell[224285, 3716, 204, 3, 24, "Institution"],
Cell[224492, 3721, 44, 1, 0, "PageBreak",
 PageBreakBelow->True],
Cell[224539, 3724, 44, 1, 0, "PageBreak",
 PageBreakBelow->True],
Cell[CellGroupData[{
Cell[224608, 3729, 184, 3, 48, "ChapterNC"],
Cell[224795, 3734, 1032, 20, 42, "Text"],
Cell[225830, 3756, 599, 10, 80, "Text"],
Cell[226432, 3768, 667, 15, 23, "Text"],
Cell[227102, 3785, 369, 6, 42, "Text"],
Cell[227474, 3793, 193, 4, 23, "Text"],
Cell[227670, 3799, 184, 4, 23, "Text"],
Cell[227857, 3805, 957, 23, 42, "Text"],
Cell[228817, 3830, 449, 7, 61, "Text"],
Cell[229269, 3839, 737, 11, 80, "Text"],
Cell[230009, 3852, 84, 1, 23, "Text"],
Cell[230096, 3855, 44, 1, 0, "PageBreak",
 PageBreakBelow->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[230177, 3861, 262, 3, 48, "ChapterNC"],
Cell[CellGroupData[{
Cell[230464, 3868, 463, 7, 42, "SubChapterNC"],
Cell[CellGroupData[{
Cell[230952, 3879, 606, 11, 36, "SubSubChapterNC"],
Cell[231561, 3892, 926, 31, 61, "Text",
 InitializationCell->True],
Cell[232490, 3925, 230, 6, 28, "Equation"],
Cell[232723, 3933, 220, 7, 23, "Text"],
Cell[232946, 3942, 236, 6, 28, "Equation"],
Cell[233185, 3950, 332, 6, 42, "Text"],
Cell[233520, 3958, 569, 15, 42, "Text"],
Cell[234092, 3975, 603, 13, 61, "Text"],
Cell[CellGroupData[{
Cell[234720, 3992, 3839, 86, 206, "Input"],
Cell[238562, 4080, 8626, 180, 289, "Output"]
}, {2}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[247234, 4266, 654, 12, 36, "SubSubChapterNC"],
Cell[247891, 4280, 254, 5, 42, "Text"],
Cell[CellGroupData[{
Cell[248170, 4289, 257, 8, 32, "Titlos"],
Cell[248430, 4299, 157, 3, 23, "Text"],
Cell[248590, 4304, 478, 17, 30, "Equation"]
}, Open  ]],
Cell[CellGroupData[{
Cell[249105, 4326, 105, 1, 32, "Titlos"],
Cell[249213, 4329, 503, 9, 61, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[249753, 4343, 93, 1, 32, "Titlos"],
Cell[249849, 4346, 183, 4, 23, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[250069, 4355, 92, 1, 32, "Titlos"],
Cell[250164, 4358, 502, 12, 42, "Text"],
Cell[CellGroupData[{
Cell[250691, 4374, 98, 1, 28, "Ypotitlos"],
Cell[250792, 4377, 176, 4, 23, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[251005, 4386, 192, 2, 28, "Ypotitlos"],
Cell[251200, 4390, 292, 5, 42, "Text"],
Cell[251495, 4397, 766, 24, 38, "Equation"]
}, Open  ]],
Cell[CellGroupData[{
Cell[252298, 4426, 94, 1, 28, "Ypotitlos"],
Cell[252395, 4429, 157, 3, 23, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[252601, 4438, 100, 1, 32, "Titlos"],
Cell[252704, 4441, 365, 7, 42, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[253106, 4453, 91, 1, 32, "Titlos"],
Cell[253200, 4456, 200, 4, 23, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[253437, 4465, 94, 1, 32, "Titlos"],
Cell[253534, 4468, 184, 4, 23, "Text"],
Cell[253721, 4474, 134, 1, 23, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[253892, 4480, 101, 1, 32, "Titlos"],
Cell[253996, 4483, 178, 4, 23, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[254211, 4492, 90, 1, 32, "Titlos"],
Cell[254304, 4495, 171, 3, 23, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[254512, 4503, 108, 1, 32, "Titlos"],
Cell[254623, 4506, 853, 26, 64, "Text"],
Cell[255479, 4534, 365, 12, 34, "Equation"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255881, 4551, 99, 1, 32, "Titlos"],
Cell[255983, 4554, 367, 6, 42, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[256387, 4565, 102, 1, 32, "Titlos"],
Cell[256492, 4568, 377, 6, 42, "Text"],
Cell[256872, 4576, 440, 11, 42, "Text"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[257373, 4594, 360, 5, 42, "SubChapterNC"],
Cell[257736, 4601, 314, 6, 42, "Text"],
Cell[258053, 4609, 381, 7, 42, "Text"],
Cell[CellGroupData[{
Cell[258459, 4620, 209, 3, 32, "Titlos"],
Cell[258671, 4625, 531, 8, 61, "Text"],
Cell[259205, 4635, 453, 12, 23, "Text"],
Cell[259661, 4649, 293, 8, 34, "Equation"],
Cell[259957, 4659, 515, 14, 43, "Text"],
Cell[260475, 4675, 231, 5, 23, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260743, 4685, 286, 4, 32, "Titlos"],
Cell[261032, 4691, 349, 6, 23, "Text"],
Cell[261384, 4699, 301, 7, 28, "Equation"],
Cell[261688, 4708, 185, 4, 23, "Text"],
Cell[261876, 4714, 303, 5, 42, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[262216, 4724, 125, 2, 32, "Titlos"],
Cell[262344, 4728, 257, 5, 42, "Text"],
Cell[262604, 4735, 366, 7, 42, "Text"],
Cell[262973, 4744, 44, 1, 0, "PageBreak",
 PageBreakBelow->True]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[263078, 4752, 126, 2, 48, "ChapterNC"],
Cell[CellGroupData[{
Cell[263229, 4758, 129, 2, 42, "SubChapterNC"],
Cell[263361, 4762, 455, 8, 42, "Text"],
Cell[263819, 4772, 624, 9, 99, "Text"],
Cell[264446, 4783, 1068, 28, 61, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265551, 4816, 224, 3, 42, "SubChapterNC"],
Cell[265778, 4821, 1058, 16, 118, "Text"],
Cell[266839, 4839, 408, 7, 42, "Text"],
Cell[267250, 4848, 479, 13, 42, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267766, 4866, 503, 7, 42, "SubChapterNC"],
Cell[268272, 4875, 210, 5, 23, "Text"],
Cell[268485, 4882, 1331, 33, 83, "Text"],
Cell[CellGroupData[{
Cell[269841, 4919, 206, 3, 32, "Titlos"],
Cell[270050, 4924, 519, 13, 42, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[270606, 4942, 236, 3, 32, "Titlos"],
Cell[270845, 4947, 305, 5, 42, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[271187, 4957, 180, 2, 32, "Titlos"],
Cell[271370, 4961, 1213, 29, 61, "Text"],
Cell[272586, 4992, 675, 24, 55, "Equation"],
Cell[273264, 5018, 340, 10, 24, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[273641, 5033, 128, 1, 32, "Titlos"],
Cell[273772, 5036, 531, 9, 61, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[274352, 5051, 205, 3, 42, "SubChapterNC"],
Cell[274560, 5056, 892, 27, 61, "Text"],
Cell[275455, 5085, 520, 12, 42, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[276012, 5102, 254, 4, 42, "SubChapterNC"],
Cell[276269, 5108, 905, 17, 80, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[277211, 5130, 111, 1, 42, "SubChapterNC"],
Cell[CellGroupData[{
Cell[277347, 5135, 156, 2, 32, "Titlos"],
Cell[CellGroupData[{
Cell[277528, 5141, 351, 8, 19, "Item"],
Cell[277882, 5151, 352, 8, 19, "Item"],
Cell[278237, 5161, 962, 28, 37, "ItemParagraph"],
Cell[279202, 5191, 305, 7, 19, "Item"],
Cell[279510, 5200, 429, 7, 56, "ItemParagraph"],
Cell[CellGroupData[{
Cell[279964, 5211, 715, 18, 18, "Subitem"],
Cell[280682, 5231, 528, 9, 18, "Subitem"]
}, Open  ]],
Cell[281225, 5243, 658, 13, 19, "Item"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[281956, 5264, 218, 3, 48, "ChapterNC"],
Cell[CellGroupData[{
Cell[282199, 5271, 98, 1, 42, "SubChapterNC"],
Cell[282300, 5274, 386, 6, 42, "Text"],
Cell[CellGroupData[{
Cell[282711, 5284, 166, 2, 32, "Titlos"],
Cell[282880, 5288, 389, 11, 19, "ItemParagraph"],
Cell[CellGroupData[{
Cell[283294, 5303, 2787, 71, 334, "Input"],
Cell[286084, 5376, 30795, 544, 595, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[316928, 5926, 160, 2, 32, "Titlos"],
Cell[317091, 5930, 742, 23, 39, "ItemParagraph"],
Cell[CellGroupData[{
Cell[317858, 5957, 8953, 225, 766, "Input"],
Cell[326814, 6184, 17802, 323, 511, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[344665, 6513, 184, 3, 32, "Titlos"],
Cell[344852, 6518, 693, 20, 58, "ItemParagraph"],
Cell[CellGroupData[{
Cell[345570, 6542, 1388, 34, 136, "Input"],
Cell[346961, 6578, 36265, 668, 570, "Output"]
}, {2}]]
}, Open  ]],
Cell[CellGroupData[{
Cell[383272, 7252, 453, 13, 34, "Titlos"],
Cell[383728, 7267, 799, 21, 63, "Text"],
Cell[384530, 7290, 226, 4, 42, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[384805, 7300, 185, 3, 42, "SubChapterNC"],
Cell[384993, 7305, 295, 5, 42, "Text"],
Cell[CellGroupData[{
Cell[385313, 7314, 1010, 18, 76, "ItemNumbered"],
Cell[386326, 7334, 1061, 16, 76, "ItemNumbered"],
Cell[387390, 7352, 1023, 15, 57, "ItemNumbered"]
}, Open  ]],
Cell[CellGroupData[{
Cell[388450, 7372, 10411, 235, 802, "Input"],
Cell[398864, 7609, 24314, 638, 502, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[423239, 8254, 127, 2, 48, "ChapterNC"],
Cell[423369, 8258, 201, 4, 23, "Text"],
Cell[423573, 8264, 650, 10, 61, "Text"],
Cell[424226, 8276, 615, 14, 42, "Text"],
Cell[424844, 8292, 538, 9, 61, "Text"],
Cell[425385, 8303, 393, 6, 61, "Text"],
Cell[CellGroupData[{
Cell[425803, 8313, 12568, 300, 1234, "Input"],
Cell[438374, 8615, 16314, 342, 350, "Output"]
}, Open  ]],
Cell[454703, 8960, 435, 7, 42, "Text"],
Cell[455141, 8969, 723, 11, 80, "Text"],
Cell[CellGroupData[{
Cell[455889, 8984, 19000, 442, 1630, "Input"],
Cell[474892, 9428, 16139, 339, 350, "Output"]
}, Open  ]],
Cell[491046, 9770, 201, 4, 23, "Text"],
Cell[491250, 9776, 502, 8, 61, "Text"],
Cell[491755, 9786, 44, 1, 0, "PageBreak",
 PageBreakBelow->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[491836, 9792, 176, 3, 48, "ChapterNC"],
Cell[CellGroupData[{
Cell[492037, 9799, 19068, 416, 1486, "Input"],
Cell[511108, 10217, 13741, 351, 600, "Output"]
}, {2}]]
}, Open  ]]
}, Open  ]]
}
]
*)

